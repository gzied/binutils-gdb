# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: bug-binutils@gnu.org\n"
"POT-Creation-Date: 2020-12-14 14:16+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=INTEGER; plural=EXPRESSION;\n"

#: ldcref.c:171
msgid "%X%P: bfd_hash_table_init of cref table failed: %E\n"
msgstr ""

#: ldcref.c:177
msgid "%X%P: cref_hash_lookup failed: %E\n"
msgstr ""

#: ldcref.c:187
msgid "%X%P: cref alloc failed: %E\n"
msgstr ""

#: ldcref.c:372
#, c-format
msgid ""
"\n"
"Cross Reference Table\n"
"\n"
msgstr ""

#: ldcref.c:373
msgid "Symbol"
msgstr ""

#: ldcref.c:381
#, c-format
msgid "File\n"
msgstr ""

#: ldcref.c:385
#, c-format
msgid "No symbols\n"
msgstr ""

#: ldcref.c:414 ldcref.c:566
msgid "%P: symbol `%pT' missing from main hash table\n"
msgstr ""

#: ldcref.c:518 ldcref.c:629 ldmain.c:1295 ldmisc.c:336 pe-dll.c:737
#: pe-dll.c:1315 pe-dll.c:1436 pe-dll.c:1562 earm_wince_pe.c:1486
#: earm_wince_pe.c:1693 earmpe.c:1486 earmpe.c:1693 ei386pe.c:1486
#: ei386pe.c:1693 ei386pe_posix.c:1486 ei386pe_posix.c:1693 ei386pep.c:1475
#: emcorepe.c:1486 emcorepe.c:1693 eshpe.c:1486 eshpe.c:1693
msgid "%F%P: %pB: could not read symbols: %E\n"
msgstr ""

#: ldcref.c:691 ldcref.c:698 ldmain.c:1357 ldmain.c:1364
msgid "%F%P: %pB: could not read relocs: %E\n"
msgstr ""

#. We found a reloc for the symbol.  The symbol is defined
#. in OUTSECNAME.  This reloc is from a section which is
#. mapped into a section from which references to OUTSECNAME
#. are prohibited.  We must report an error.
#: ldcref.c:725
msgid "%X%P: %C: prohibited cross reference from %s to `%pT' in %s\n"
msgstr ""

#: ldctor.c:84
msgid "%X%P: different relocs used in set %s\n"
msgstr ""

#: ldctor.c:102
msgid "%X%P: different object file formats composing set %s\n"
msgstr ""

#: ldctor.c:278 ldctor.c:299
msgid "%X%P: %s does not support reloc %s for set %s\n"
msgstr ""

#: ldctor.c:294
msgid "%X%P: special section %s does not support reloc %s for set %s\n"
msgstr ""

#: ldctor.c:320
msgid "%X%P: unsupported size %d for set %s\n"
msgstr ""

#: ldctor.c:343
msgid ""
"\n"
"Set                 Symbol\n"
"\n"
msgstr ""

#: ldelf.c:71
msgid "%P: warning: -z dynamic-undefined-weak ignored\n"
msgstr ""

#: ldelf.c:98
msgid "%F%P: %pB: --just-symbols may not be used on DSO\n"
msgstr ""

#: ldelf.c:200
msgid "%P: %pB: bfd_stat failed: %E\n"
msgstr ""

#: ldelf.c:241
msgid "%P: warning: %s, needed by %pB, may conflict with %s\n"
msgstr ""

#: ldelf.c:261 ldfile.c:133
#, c-format
msgid "attempt to open %s failed\n"
msgstr ""

#: ldelf.c:298
msgid "%F%P: %pB: bfd_elf_get_bfd_needed_list failed: %E\n"
msgstr ""

#: ldelf.c:346
msgid "%F%P: %pB: bfd_stat failed: %E\n"
msgstr ""

#: ldelf.c:352
#, c-format
msgid "found %s at %s\n"
msgstr ""

#: ldelf.c:385 ldlang.c:3143 ldlang.c:3157
msgid "%F%P: %pB: error adding symbols: %E\n"
msgstr ""

#. We only issue an "unrecognised" message in verbose mode
#. as the $<foo> token might be a legitimate component of
#. a path name in the target's file system.
#: ldelf.c:572
#, c-format
msgid "unrecognised or unsupported token '%s' in search path\n"
msgstr ""

#: ldelf.c:1016
msgid "%F%P: %s: can't open for writing: %E\n"
msgstr ""

#: ldelf.c:1052
msgid "%F%P: cannot use executable file '%pB' as input to a link\n"
msgstr ""

#: ldelf.c:1106
msgid ""
"%F%P: compact frame descriptions incompatible with DWARF2 .eh_frame from "
"%pB\n"
msgstr ""

#: ldelf.c:1142
msgid ""
"%P: warning: cannot create .eh_frame_hdr section, --eh-frame-hdr ignored\n"
msgstr ""

#: ldelf.c:1198
#, c-format
msgid "%s needed by %pB\n"
msgstr ""

#: ldelf.c:1307
msgid ""
"%P: warning: %s, needed by %pB, not found (try using -rpath or -rpath-link)\n"
msgstr ""

#: ldelf.c:1320
msgid "%F%P: failed to add DT_NEEDED dynamic tag\n"
msgstr ""

#: ldelf.c:1328
msgid "%F%P: failed to parse EH frame entries\n"
msgstr ""

#: ldelf.c:1367
msgid "%P: warning: .note.gnu.build-id section discarded, --build-id ignored\n"
msgstr ""

#: ldelf.c:1413 earm_wince_pe.c:1277 earmpe.c:1277 ei386pe.c:1277
#: ei386pe_posix.c:1277 ei386pep.c:1284 emcorepe.c:1277 eshpe.c:1277
msgid "%P: warning: unrecognized --build-id style ignored\n"
msgstr ""

#: ldelf.c:1431
msgid ""
"%P: warning: cannot create .note.gnu.build-id section, --build-id ignored\n"
msgstr ""

#: ldelf.c:1463 eaix5ppc.c:1371 eaix5rs6.c:1371 eaixppc.c:1371 eaixrs6.c:1371
#: eppcmacos.c:1371
msgid "%F%P: failed to record assignment to %s: %E\n"
msgstr ""

#: ldelf.c:1647 ldelf.c:1712 eaix5ppc.c:832 eaix5rs6.c:832 eaixppc.c:832
#: eaixrs6.c:832 eelf64_ia64_vms.c:209 eppcmacos.c:832
msgid "%F%P: failed to set dynamic section sizes: %E\n"
msgstr ""

#: ldelf.c:1684
msgid "%F%P: %pB: can't read contents of section .gnu.warning: %E\n"
msgstr ""

#: ldelfgen.c:56
msgid "%F%P: map sections to segments failed: %E\n"
msgstr ""

#: ldelfgen.c:76
msgid "%F%P: looping in map_segments"
msgstr ""

#: ldelfgen.c:88
msgid "%F%P: failed to strip zero-sized dynamic sections"
msgstr ""

#: ldelfgen.c:159
msgid ""
"%F%P: warning: CTF strtab association failed; strings will not be shared: "
"%s\n"
msgstr ""

#: ldelfgen.c:186
msgid ""
"%F%P: warning: CTF symbol addition failed; CTF will not be tied to symbols: "
"%s\n"
msgstr ""

#: ldelfgen.c:196
msgid ""
"%F%P: warning: CTF symbol shuffling failed; CTF will not be tied to symbols: "
"%s\n"
msgstr ""

#: ldemul.c:314
#, c-format
msgid "%pS SYSLIB ignored\n"
msgstr ""

#: ldemul.c:320
#, c-format
msgid "%pS HLL ignored\n"
msgstr ""

#: ldemul.c:340
msgid "%P: unrecognised emulation mode: %s\n"
msgstr ""

#: ldemul.c:341
msgid "Supported emulations: "
msgstr ""

#: ldemul.c:383
#, c-format
msgid "  no emulation specific options.\n"
msgstr ""

#: ldexp.c:284
msgid "%F%P: bfd_hash_allocate failed creating symbol %s\n"
msgstr ""

#: ldexp.c:315
msgid "%F%P: bfd_hash_lookup failed creating symbol %s\n"
msgstr ""

#: ldexp.c:552
msgid "%P: warning: address of `%s' isn't multiple of maximum page size\n"
msgstr ""

#: ldexp.c:631
msgid "%F%P:%pS %% by zero\n"
msgstr ""

#: ldexp.c:640
msgid "%F%P:%pS / by zero\n"
msgstr ""

#: ldexp.c:736 ldlang.c:3977 ldmain.c:1262 earm_wince_pe.c:1804 earmpe.c:1804
#: ei386pe.c:1804 ei386pe_posix.c:1804 ei386pep.c:1699 emcorepe.c:1804
#: eshpe.c:1804
msgid "%F%P: bfd_link_hash_lookup failed: %E\n"
msgstr ""

#: ldexp.c:749
msgid "%X%P:%pS: unresolvable symbol `%s' referenced in expression\n"
msgstr ""

#: ldexp.c:764
msgid "%F%P:%pS: undefined symbol `%s' referenced in expression\n"
msgstr ""

#: ldexp.c:802 ldexp.c:820 ldexp.c:848
msgid "%F%P:%pS: undefined section `%s' referenced in expression\n"
msgstr ""

#: ldexp.c:879 ldexp.c:893
msgid "%F%P:%pS: undefined MEMORY region `%s' referenced in expression\n"
msgstr ""

#: ldexp.c:905
msgid "%F%P:%pS: unknown constant `%s' referenced in expression\n"
msgstr ""

#: ldexp.c:1053
msgid "%F%P:%pS can not PROVIDE assignment to location counter\n"
msgstr ""

#: ldexp.c:1086
msgid "%F%P:%pS invalid assignment to location counter\n"
msgstr ""

#: ldexp.c:1090
msgid "%F%P:%pS assignment to location counter invalid outside of SECTIONS\n"
msgstr ""

#: ldexp.c:1109
msgid "%F%P:%pS cannot move location counter backwards (from %V to %V)\n"
msgstr ""

#: ldexp.c:1169
msgid "%F%P:%s: hash creation failed\n"
msgstr ""

#: ldexp.c:1538 ldexp.c:1580 ldexp.c:1640
msgid "%F%P:%pS: nonconstant expression for %s\n"
msgstr ""

#: ldexp.c:1666 ldlang.c:1280 ldlang.c:3461 ldlang.c:7913
msgid "%F%P: can not create hash table: %E\n"
msgstr ""

#: ldfile.c:135
#, c-format
msgid "attempt to open %s succeeded\n"
msgstr ""

#: ldfile.c:141
msgid "%F%P: invalid BFD target `%s'\n"
msgstr ""

#: ldfile.c:267 ldfile.c:297
msgid "%P: skipping incompatible %s when searching for %s\n"
msgstr ""

#: ldfile.c:280
msgid "%F%P: attempted static link of dynamic object `%s'\n"
msgstr ""

#: ldfile.c:407
msgid "%P: cannot find %s (%s): %E\n"
msgstr ""

#: ldfile.c:410
msgid "%P: cannot find %s: %E\n"
msgstr ""

#: ldfile.c:462
msgid "%P: cannot find %s inside %s\n"
msgstr ""

#: ldfile.c:477 ldmain.c:1442
msgid "%P: About to run error handling script '%s' with arguments: '%s' '%s'\n"
msgstr ""

#: ldfile.c:481 ldmain.c:1446
msgid "error handling script"
msgstr ""

#: ldfile.c:487 ldmain.c:1452
msgid "%P: Failed to run error handling script '%s', reason: "
msgstr ""

#. We ignore the return status of the script
#. and always print the error message.
#: ldfile.c:494 ldfile.c:498
msgid "%P: cannot find %s\n"
msgstr ""

#: ldfile.c:508
msgid "%P: note to link with %s use -l:%s or rename it to lib%s\n"
msgstr ""

#: ldfile.c:537
#, c-format
msgid "cannot find script file %s\n"
msgstr ""

#: ldfile.c:539
#, c-format
msgid "opened script file %s\n"
msgstr ""

#: ldfile.c:688
msgid "%F%P: error: linker script file '%s' appears multiple times\n"
msgstr ""

#: ldfile.c:710
msgid "%F%P: cannot open linker script file %s: %E\n"
msgstr ""

#: ldfile.c:783
msgid "%F%P: cannot represent machine `%s'\n"
msgstr ""

#: ldlang.c:1364
msgid "%P:%pS: warning: redeclaration of memory region `%s'\n"
msgstr ""

#: ldlang.c:1370
msgid "%P:%pS: warning: memory region `%s' not declared\n"
msgstr ""

#: ldlang.c:1406
msgid "%F%P:%pS: error: alias for default memory region\n"
msgstr ""

#: ldlang.c:1417
msgid "%F%P:%pS: error: redefinition of memory region alias `%s'\n"
msgstr ""

#: ldlang.c:1424
msgid "%F%P:%pS: error: memory region `%s' for alias `%s' does not exist\n"
msgstr ""

#: ldlang.c:1485 ldlang.c:1520
msgid "%F%P: failed creating section `%s': %E\n"
msgstr ""

#: ldlang.c:2218
msgid ""
"\n"
"As-needed library included to satisfy reference by file (symbol)\n"
"\n"
msgstr ""

#: ldlang.c:2285
#, c-format
msgid ""
"\n"
"Discarded input sections\n"
"\n"
msgstr ""

#: ldlang.c:2293
msgid ""
"\n"
"Memory Configuration\n"
"\n"
msgstr ""

#: ldlang.c:2295
msgid "Name"
msgstr ""

#: ldlang.c:2295
msgid "Origin"
msgstr ""

#: ldlang.c:2295
msgid "Length"
msgstr ""

#: ldlang.c:2295
msgid "Attributes"
msgstr ""

#: ldlang.c:2335
#, c-format
msgid ""
"\n"
"Linker script and memory map\n"
"\n"
msgstr ""

#: ldlang.c:2388
msgid "%F%P: illegal use of `%s' section\n"
msgstr ""

#: ldlang.c:2397
msgid "%F%P: output format %s cannot represent section called %s: %E\n"
msgstr ""

#: ldlang.c:2564
msgid ""
"%P:%pS: warning: --enable-non-contiguous-regions makes section `%pA' from "
"'%pB' match /DISCARD/ clause.\n"
msgstr ""

#: ldlang.c:2597
msgid ""
"%P:%pS: warning: --enable-non-contiguous-regions may change behaviour for "
"section `%pA' from '%pB' (assigned to %pA, but additional match: %pA)\n"
msgstr ""

#: ldlang.c:3047
msgid "%P: %pB: file not recognized: %E; matching formats:"
msgstr ""

#: ldlang.c:3055
msgid "%F%P: %pB: file not recognized: %E\n"
msgstr ""

#: ldlang.c:3128
msgid "%F%P: %pB: member %pB in archive is not an object\n"
msgstr ""

#: ldlang.c:3431
msgid ""
"%P: warning: could not find any targets that match endianness requirement\n"
msgstr ""

#: ldlang.c:3445
msgid "%F%P: target %s not found\n"
msgstr ""

#: ldlang.c:3447
msgid "%F%P: cannot open output file %s: %E\n"
msgstr ""

#: ldlang.c:3453
msgid "%F%P: %s: can not make object file: %E\n"
msgstr ""

#: ldlang.c:3457
msgid "%F%P: %s: can not set architecture: %E\n"
msgstr ""

#: ldlang.c:3637
msgid "%P: warning: %s contains output sections; did you forget -T?\n"
msgstr ""

#: ldlang.c:3684
#, c-format
msgid "%s: %s\n"
msgstr ""

#: ldlang.c:3684
msgid "CTF warning"
msgstr ""

#: ldlang.c:3684
msgid "CTF error"
msgstr ""

#: ldlang.c:3690
#, c-format
msgid "CTF error: cannot get CTF errors: `%s'\n"
msgstr ""

#: ldlang.c:3724
msgid ""
"%P: warning: CTF section in %pB not loaded; its types will be discarded: %s\n"
msgstr ""

#: ldlang.c:3753
msgid "%P: warning: CTF output not created: `%s'\n"
msgstr ""

#: ldlang.c:3796
msgid "%P: warning: CTF section in %pB cannot be linked: `%s'\n"
msgstr ""

#: ldlang.c:3814
msgid "%P: warning: CTF linking failed; output will have no CTF section: %s\n"
msgstr ""

#: ldlang.c:3885
msgid ""
"%P: warning: CTF section emission failed; output will have no CTF section: "
"%s\n"
msgstr ""

#: ldlang.c:3924
msgid ""
"%P: warning: CTF section in %pB not linkable: %P was built without support "
"for CTF\n"
msgstr ""

#: ldlang.c:4047
msgid "%X%P: required symbol `%s' not defined\n"
msgstr ""

#: ldlang.c:4342
msgid ""
"warning: INSERT statement in linker script is incompatible with --enable-non-"
"contiguous-regions.\n"
msgstr ""

#: ldlang.c:4355
msgid "%F%P: %s not found for insert\n"
msgstr ""

#: ldlang.c:4595
msgid " load address 0x%V"
msgstr ""

#: ldlang.c:4828
msgid "%W (size before relaxing)\n"
msgstr ""

#: ldlang.c:4921
#, c-format
msgid "Address of section %s set to "
msgstr ""

#: ldlang.c:5119
#, c-format
msgid "Fail with %d\n"
msgstr ""

#: ldlang.c:5332
msgid ""
"%F%P: Output section '%s' not large enough for the linker-created stubs "
"section '%s'.\n"
msgstr ""

#: ldlang.c:5337
msgid ""
"%F%P: Relaxation not supported with --enable-non-contiguous-regions (section "
"'%s' would overflow '%s' after it changed size).\n"
msgstr ""

#: ldlang.c:5446
msgid "%X%P: section %s VMA wraps around address space\n"
msgstr ""

#: ldlang.c:5452
msgid "%X%P: section %s LMA wraps around address space\n"
msgstr ""

#: ldlang.c:5504
msgid "%X%P: section %s LMA [%V,%V] overlaps section %s LMA [%V,%V]\n"
msgstr ""

#: ldlang.c:5548
msgid "%X%P: section %s VMA [%V,%V] overlaps section %s VMA [%V,%V]\n"
msgstr ""

#: ldlang.c:5571
msgid "%X%P: region `%s' overflowed by %lu byte\n"
msgid_plural "%X%P: region `%s' overflowed by %lu bytes\n"
msgstr[0] ""
msgstr[1] ""

#: ldlang.c:5596
msgid "%X%P: address 0x%v of %pB section `%s' is not within region `%s'\n"
msgstr ""

#: ldlang.c:5607
msgid "%X%P: %pB section `%s' will not fit in region `%s'\n"
msgstr ""

#: ldlang.c:5693
msgid ""
"%F%P:%pS: non constant or forward reference address expression for section "
"%s\n"
msgstr ""

#: ldlang.c:5718
msgid "%X%P: internal error on COFF shared library section %s\n"
msgstr ""

#: ldlang.c:5776
msgid "%F%P: error: no memory region specified for loadable section `%s'\n"
msgstr ""

#: ldlang.c:5780
msgid "%P: warning: no memory region specified for loadable section `%s'\n"
msgstr ""

#: ldlang.c:5814
msgid "%P: warning: start of section %s changed by %ld\n"
msgstr ""

#: ldlang.c:5906
msgid "%P: warning: dot moved backwards before `%s'\n"
msgstr ""

#: ldlang.c:6087
msgid "%F%P: can't relax section: %E\n"
msgstr ""

#: ldlang.c:6508
msgid "%F%P: invalid data statement\n"
msgstr ""

#: ldlang.c:6541
msgid "%F%P: invalid reloc statement\n"
msgstr ""

#: ldlang.c:6908
msgid ""
"%F%P: --gc-sections requires a defined symbol root specified by -e or -u\n"
msgstr ""

#: ldlang.c:6933
msgid "%F%P: %s: can't set start address\n"
msgstr ""

#: ldlang.c:6946 ldlang.c:6964
msgid "%F%P: can't set start address\n"
msgstr ""

#: ldlang.c:6958
msgid "%P: warning: cannot find entry symbol %s; defaulting to %V\n"
msgstr ""

#: ldlang.c:6969
msgid "%P: warning: cannot find entry symbol %s; not setting start address\n"
msgstr ""

#: ldlang.c:7026
msgid ""
"%F%P: relocatable linking with relocations from format %s (%pB) to format %s "
"(%pB) is not supported\n"
msgstr ""

#: ldlang.c:7036
msgid ""
"%X%P: %s architecture of input file `%pB' is incompatible with %s output\n"
msgstr ""

#: ldlang.c:7060
msgid "%X%P: failed to merge target specific data of file %pB\n"
msgstr ""

#: ldlang.c:7131
msgid "%F%P: could not define common symbol `%pT': %E\n"
msgstr ""

#: ldlang.c:7143
msgid ""
"\n"
"Allocating common symbols\n"
msgstr ""

#: ldlang.c:7144
msgid ""
"Common symbol       size              file\n"
"\n"
msgstr ""

#: ldlang.c:7217
msgid "%X%P: error: unplaced orphan section `%pA' from `%pB'\n"
msgstr ""

#: ldlang.c:7235
msgid ""
"%P: warning: orphan section `%pA' from `%pB' being placed in section `%s'\n"
msgstr ""

#: ldlang.c:7325
msgid "%F%P: invalid character %c (%d) in flags\n"
msgstr ""

#: ldlang.c:7434
msgid "%F%P:%pS: error: align with input and explicit align specified\n"
msgstr ""

#: ldlang.c:7949
msgid "%F%P: %s: plugin reported error after all symbols read\n"
msgstr ""

#: ldlang.c:8387
msgid "%F%P: multiple STARTUP files\n"
msgstr ""

#: ldlang.c:8433
msgid "%X%P:%pS: section has both a load address and a load region\n"
msgstr ""

#: ldlang.c:8539
msgid ""
"%X%P:%pS: PHDRS and FILEHDR are not supported when prior PT_LOAD headers "
"lack them\n"
msgstr ""

#: ldlang.c:8612
msgid "%F%P: no sections assigned to phdrs\n"
msgstr ""

#: ldlang.c:8650
msgid "%F%P: bfd_record_phdr failed: %E\n"
msgstr ""

#: ldlang.c:8670
msgid "%X%P: section `%s' assigned to non-existent phdr `%s'\n"
msgstr ""

#: ldlang.c:9093
msgid "%X%P: unknown language `%s' in version information\n"
msgstr ""

#: ldlang.c:9238
msgid ""
"%X%P: anonymous version tag cannot be combined with other version tags\n"
msgstr ""

#: ldlang.c:9247
msgid "%X%P: duplicate version tag `%s'\n"
msgstr ""

#: ldlang.c:9268 ldlang.c:9277 ldlang.c:9295 ldlang.c:9305
msgid "%X%P: duplicate expression `%s' in version information\n"
msgstr ""

#: ldlang.c:9345
msgid "%X%P: unable to find version dependency `%s'\n"
msgstr ""

#: ldlang.c:9368
msgid "%X%P: unable to read .exports section contents\n"
msgstr ""

#: ldlang.c:9414
msgid "%P: invalid origin for memory region %s\n"
msgstr ""

#: ldlang.c:9426
msgid "%P: invalid length for memory region %s\n"
msgstr ""

#: ldlang.c:9538
msgid "%X%P: unknown feature `%s'\n"
msgstr ""

#: ldmain.c:196
msgid "%F%P: cannot open dependency file %s: %E\n"
msgstr ""

#: ldmain.c:266
msgid "%F%P: fatal error: libbfd ABI mismatch\n"
msgstr ""

#: ldmain.c:302
msgid "%X%P: can't set BFD default target to `%s': %E\n"
msgstr ""

#: ldmain.c:404
msgid "built in linker script"
msgstr ""

#: ldmain.c:414
msgid "using external linker script:"
msgstr ""

#: ldmain.c:416
msgid "using internal linker script:"
msgstr ""

#: ldmain.c:463
msgid "%F%P: --no-define-common may not be used without -shared\n"
msgstr ""

#: ldmain.c:469
msgid "%F%P: no input files\n"
msgstr ""

#: ldmain.c:473
msgid "%P: mode %s\n"
msgstr ""

#: ldmain.c:489 ends32belf.c:422 ends32belf16m.c:422 ends32belf_linux.c:551
#: ends32elf.c:422 ends32elf16m.c:422 ends32elf_linux.c:551
msgid "%F%P: cannot open map file %s: %E\n"
msgstr ""

#: ldmain.c:542
msgid "%P: link errors found, deleting executable `%s'\n"
msgstr ""

#: ldmain.c:551
msgid "%F%P: %pB: final close failed: %E\n"
msgstr ""

#: ldmain.c:578
msgid "%F%P: unable to open for source of copy `%s'\n"
msgstr ""

#: ldmain.c:581
msgid "%F%P: unable to open for destination of copy `%s'\n"
msgstr ""

#: ldmain.c:588
msgid "%P: error writing file `%s'\n"
msgstr ""

#: ldmain.c:593 pe-dll.c:1953
#, c-format
msgid "%P: error closing file `%s'\n"
msgstr ""

#: ldmain.c:607
#, c-format
msgid "%s: total time in link: %ld.%06ld\n"
msgstr ""

#: ldmain.c:694
msgid "%F%P: missing argument to -m\n"
msgstr ""

#: ldmain.c:744 ldmain.c:761 ldmain.c:781 ldmain.c:813 pe-dll.c:1396
msgid "%F%P: bfd_hash_table_init failed: %E\n"
msgstr ""

#: ldmain.c:748 ldmain.c:765 ldmain.c:785
msgid "%F%P: bfd_hash_lookup failed: %E\n"
msgstr ""

#: ldmain.c:799
msgid "%X%P: error: duplicate retain-symbols-file\n"
msgstr ""

#: ldmain.c:843
msgid "%F%P: bfd_hash_lookup for insertion failed: %E\n"
msgstr ""

#: ldmain.c:848
msgid "%P: `-retain-symbols-file' overrides `-s' and `-S'\n"
msgstr ""

#: ldmain.c:964
msgid ""
"Archive member included to satisfy reference by file (symbol)\n"
"\n"
msgstr ""

#: ldmain.c:1073
msgid "%X%P: %C: multiple definition of `%pT'"
msgstr ""

#: ldmain.c:1076
msgid "; %D: first defined here"
msgstr ""

#: ldmain.c:1081
msgid "%P: disabling relaxation; it will not work with multiple definitions\n"
msgstr ""

#: ldmain.c:1134
msgid "%P: %pB: warning: definition of `%pT' overriding common from %pB\n"
msgstr ""

#: ldmain.c:1138
msgid "%P: %pB: warning: definition of `%pT' overriding common\n"
msgstr ""

#: ldmain.c:1147
msgid "%P: %pB: warning: common of `%pT' overridden by definition from %pB\n"
msgstr ""

#: ldmain.c:1151
msgid "%P: %pB: warning: common of `%pT' overridden by definition\n"
msgstr ""

#: ldmain.c:1160
msgid ""
"%P: %pB: warning: common of `%pT' overridden by larger common from %pB\n"
msgstr ""

#: ldmain.c:1164
msgid "%P: %pB: warning: common of `%pT' overridden by larger common\n"
msgstr ""

#: ldmain.c:1171
msgid "%P: %pB: warning: common of `%pT' overriding smaller common from %pB\n"
msgstr ""

#: ldmain.c:1175
msgid "%P: %pB: warning: common of `%pT' overriding smaller common\n"
msgstr ""

#: ldmain.c:1182
msgid "%P: %pB and %pB: warning: multiple common of `%pT'\n"
msgstr ""

#: ldmain.c:1185
msgid "%P: %pB: warning: multiple common of `%pT'\n"
msgstr ""

#: ldmain.c:1204 ldmain.c:1240
msgid "%P: warning: global constructor %s used\n"
msgstr ""

#: ldmain.c:1250
msgid "%F%P: BFD backend error: BFD_RELOC_CTOR unsupported\n"
msgstr ""

#. We found a reloc for the symbol we are looking for.
#: ldmain.c:1322 ldmain.c:1324 ldmain.c:1326 ldmain.c:1334 ldmain.c:1377
msgid "warning: "
msgstr ""

#: ldmain.c:1467
msgid "%X%P: %C: undefined reference to `%pT'\n"
msgstr ""

#: ldmain.c:1470
msgid "%P: %C: warning: undefined reference to `%pT'\n"
msgstr ""

#: ldmain.c:1476
msgid "%X%P: %D: more undefined references to `%pT' follow\n"
msgstr ""

#: ldmain.c:1479
msgid "%P: %D: warning: more undefined references to `%pT' follow\n"
msgstr ""

#: ldmain.c:1490
msgid "%X%P: %pB: undefined reference to `%pT'\n"
msgstr ""

#: ldmain.c:1493
msgid "%P: %pB: warning: undefined reference to `%pT'\n"
msgstr ""

#: ldmain.c:1499
msgid "%X%P: %pB: more undefined references to `%pT' follow\n"
msgstr ""

#: ldmain.c:1502
msgid "%P: %pB: warning: more undefined references to `%pT' follow\n"
msgstr ""

#: ldmain.c:1539
msgid " additional relocation overflows omitted from the output\n"
msgstr ""

#: ldmain.c:1552
#, c-format
msgid " relocation truncated to fit: %s against undefined symbol `%pT'"
msgstr ""

#: ldmain.c:1558
#, c-format
msgid ""
" relocation truncated to fit: %s against symbol `%pT' defined in %pA section "
"in %pB"
msgstr ""

#: ldmain.c:1571
#, c-format
msgid " relocation truncated to fit: %s against `%pT'"
msgstr ""

#: ldmain.c:1587
msgid "%X%H: dangerous relocation: %s\n"
msgstr ""

#: ldmain.c:1601
msgid "%X%H: reloc refers to symbol `%pT' which is not being output\n"
msgstr ""

#: ldmain.c:1635
msgid "%P: %pB: reference to %s\n"
msgstr ""

#: ldmain.c:1637
msgid "%P: %pB: definition of %s\n"
msgstr ""

#: ldmisc.c:375
#, c-format
msgid "%pB: in function `%pT':\n"
msgstr ""

#: ldmisc.c:515
#, c-format
msgid "no symbol"
msgstr ""

#: ldmisc.c:622
msgid "%F%P: internal error %s %d\n"
msgstr ""

#: ldmisc.c:686
msgid "%P: internal error: aborting at %s:%d in %s\n"
msgstr ""

#: ldmisc.c:689
msgid "%P: internal error: aborting at %s:%d\n"
msgstr ""

#: ldmisc.c:691
msgid "%F%P: please report this bug\n"
msgstr ""

#. Output for noisy == 2 is intended to follow the GNU standards.
#: ldver.c:38
#, c-format
msgid "GNU ld %s\n"
msgstr ""

#: ldver.c:42
#, c-format
msgid "Copyright (C) 2020 Free Software Foundation, Inc.\n"
msgstr ""

#: ldver.c:43
#, c-format
msgid ""
"This program is free software; you may redistribute it under the terms of\n"
"the GNU General Public License version 3 or (at your option) a later "
"version.\n"
"This program has absolutely no warranty.\n"
msgstr ""

#: ldver.c:53
#, c-format
msgid "  Supported emulations:\n"
msgstr ""

#: ldwrite.c:60 ldwrite.c:170 ldwrite.c:222 ldwrite.c:263
msgid "%F%P: bfd_new_link_order failed\n"
msgstr ""

#: ldwrite.c:332
msgid "%F%P: cannot create split section name for %s\n"
msgstr ""

#: ldwrite.c:344
msgid "%F%P: clone section failed: %E\n"
msgstr ""

#: ldwrite.c:382
#, c-format
msgid "%8x something else\n"
msgstr ""

#: ldwrite.c:552
msgid "%F%P: final link failed: %E\n"
msgstr ""

#: lexsup.c:105 lexsup.c:290
msgid "KEYWORD"
msgstr ""

#: lexsup.c:105
msgid "Shared library control for HP/UX compatibility"
msgstr ""

#: lexsup.c:108
msgid "ARCH"
msgstr ""

#: lexsup.c:108
msgid "Set architecture"
msgstr ""

#: lexsup.c:110 lexsup.c:422
msgid "TARGET"
msgstr ""

#: lexsup.c:110
msgid "Specify target for following input files"
msgstr ""

#: lexsup.c:113 lexsup.c:119 lexsup.c:176 lexsup.c:180 lexsup.c:216
#: lexsup.c:229 lexsup.c:231 lexsup.c:440 lexsup.c:507 lexsup.c:520
#: lexsup.c:524
msgid "FILE"
msgstr ""

#: lexsup.c:113
msgid "Read MRI format linker script"
msgstr ""

#: lexsup.c:115
msgid "Force common symbols to be defined"
msgstr ""

#: lexsup.c:119
msgid "Write dependency file"
msgstr ""

#: lexsup.c:122
msgid "Force group members out of groups"
msgstr ""

#: lexsup.c:124 lexsup.c:484 lexsup.c:486 lexsup.c:488 lexsup.c:490
#: lexsup.c:492 lexsup.c:494
msgid "ADDRESS"
msgstr ""

#: lexsup.c:124
msgid "Set start address"
msgstr ""

#: lexsup.c:126
msgid "Export all dynamic symbols"
msgstr ""

#: lexsup.c:128
msgid "Undo the effect of --export-dynamic"
msgstr ""

#: lexsup.c:130
msgid "Enable support of non-contiguous memory regions"
msgstr ""

#: lexsup.c:132
msgid ""
"Enable warnings when --enable-non-contiguous-regions may cause unexpected "
"behaviour"
msgstr ""

#: lexsup.c:134
msgid "Link big-endian objects"
msgstr ""

#: lexsup.c:136
msgid "Link little-endian objects"
msgstr ""

#: lexsup.c:138 lexsup.c:141
msgid "SHLIB"
msgstr ""

#: lexsup.c:138
msgid "Auxiliary filter for shared object symbol table"
msgstr ""

#: lexsup.c:141
msgid "Filter for shared object symbol table"
msgstr ""

#: lexsup.c:144
msgid "Ignored"
msgstr ""

#: lexsup.c:146
msgid "SIZE"
msgstr ""

#: lexsup.c:146
msgid "Small data size (if no size, same as --shared)"
msgstr ""

#: lexsup.c:149
msgid "FILENAME"
msgstr ""

#: lexsup.c:149
msgid "Set internal name of shared library"
msgstr ""

#: lexsup.c:151
msgid "PROGRAM"
msgstr ""

#: lexsup.c:151
msgid "Set PROGRAM as the dynamic linker to use"
msgstr ""

#: lexsup.c:154
msgid "Produce an executable with no program interpreter header"
msgstr ""

#: lexsup.c:157
msgid "LIBNAME"
msgstr ""

#: lexsup.c:157
msgid "Search for library LIBNAME"
msgstr ""

#: lexsup.c:159
msgid "DIRECTORY"
msgstr ""

#: lexsup.c:159
msgid "Add DIRECTORY to library search path"
msgstr ""

#: lexsup.c:162
msgid "Override the default sysroot location"
msgstr ""

#: lexsup.c:164
msgid "EMULATION"
msgstr ""

#: lexsup.c:164
msgid "Set emulation"
msgstr ""

#: lexsup.c:166
msgid "Print map file on standard output"
msgstr ""

#: lexsup.c:168
msgid "Do not page align data"
msgstr ""

#: lexsup.c:170
msgid "Do not page align data, do not make text readonly"
msgstr ""

#: lexsup.c:173
msgid "Page align data, make text readonly"
msgstr ""

#: lexsup.c:176
msgid "Set output file name"
msgstr ""

#: lexsup.c:178
msgid "Optimize output file"
msgstr ""

#: lexsup.c:180
msgid "Generate import library"
msgstr ""

#: lexsup.c:183 lexsup.c:194
msgid "PLUGIN"
msgstr ""

#: lexsup.c:183
msgid "Load named plugin"
msgstr ""

#: lexsup.c:185 lexsup.c:196
msgid "ARG"
msgstr ""

#: lexsup.c:185
msgid "Send arg to last-loaded plugin"
msgstr ""

#: lexsup.c:187 lexsup.c:190
msgid "Ignored for GCC LTO option compatibility"
msgstr ""

#: lexsup.c:194
msgid "Load named plugin (ignored)"
msgstr ""

#: lexsup.c:196
msgid "Send arg to last-loaded plugin (ignored)"
msgstr ""

#: lexsup.c:199
msgid "Ignored for GCC linker option compatibility"
msgstr ""

#: lexsup.c:202 lexsup.c:205
msgid "Ignored for gold option compatibility"
msgstr ""

#: lexsup.c:208
msgid "Ignored for SVR4 compatibility"
msgstr ""

#: lexsup.c:212
msgid "Generate relocatable output"
msgstr ""

#: lexsup.c:216
msgid "Just link symbols (if directory, same as --rpath)"
msgstr ""

#: lexsup.c:219
msgid "Strip all symbols"
msgstr ""

#: lexsup.c:221
msgid "Strip debugging symbols"
msgstr ""

#: lexsup.c:223
msgid "Strip symbols in discarded sections"
msgstr ""

#: lexsup.c:225
msgid "Do not strip symbols in discarded sections"
msgstr ""

#: lexsup.c:227
msgid "Trace file opens"
msgstr ""

#: lexsup.c:229
msgid "Read linker script"
msgstr ""

#: lexsup.c:231
msgid "Read default linker script"
msgstr ""

#: lexsup.c:235 lexsup.c:238 lexsup.c:256 lexsup.c:345 lexsup.c:369
#: lexsup.c:477 lexsup.c:510 lexsup.c:522 lexsup.c:560 lexsup.c:563
msgid "SYMBOL"
msgstr ""

#: lexsup.c:235
msgid "Start with undefined reference to SYMBOL"
msgstr ""

#: lexsup.c:238
msgid "Require SYMBOL be defined in the final output"
msgstr ""

#: lexsup.c:241
msgid "[=SECTION]"
msgstr ""

#: lexsup.c:242
msgid "Don't merge input [SECTION | orphan] sections"
msgstr ""

#: lexsup.c:244
msgid "Build global constructor/destructor tables"
msgstr ""

#: lexsup.c:246
msgid "Print version information"
msgstr ""

#: lexsup.c:248
msgid "Print version and emulation information"
msgstr ""

#: lexsup.c:250
msgid "Discard all local symbols"
msgstr ""

#: lexsup.c:252
msgid "Discard temporary local symbols (default)"
msgstr ""

#: lexsup.c:254
msgid "Don't discard any local symbols"
msgstr ""

#: lexsup.c:256
msgid "Trace mentions of SYMBOL"
msgstr ""

#: lexsup.c:258 lexsup.c:442 lexsup.c:444
msgid "PATH"
msgstr ""

#: lexsup.c:258
msgid "Default search path for Solaris compatibility"
msgstr ""

#: lexsup.c:261
msgid "Start a group"
msgstr ""

#: lexsup.c:263
msgid "End a group"
msgstr ""

#: lexsup.c:267
msgid "Accept input files whose architecture cannot be determined"
msgstr ""

#: lexsup.c:271
msgid "Reject input files whose architecture is unknown"
msgstr ""

#: lexsup.c:283
msgid "Only set DT_NEEDED for following dynamic libs if used"
msgstr ""

#: lexsup.c:286
msgid ""
"Always set DT_NEEDED for dynamic libraries mentioned on\n"
"                                the command line"
msgstr ""

#: lexsup.c:290
msgid "Ignored for SunOS compatibility"
msgstr ""

#: lexsup.c:292
msgid "Link against shared libraries"
msgstr ""

#: lexsup.c:298
msgid "Do not link against shared libraries"
msgstr ""

#: lexsup.c:306
msgid "Bind global references locally"
msgstr ""

#: lexsup.c:308
msgid "Bind global function references locally"
msgstr ""

#: lexsup.c:310
msgid "Check section addresses for overlaps (default)"
msgstr ""

#: lexsup.c:313
msgid "Do not check section addresses for overlaps"
msgstr ""

#: lexsup.c:317
msgid "Copy DT_NEEDED links mentioned inside DSOs that follow"
msgstr ""

#: lexsup.c:321
msgid "Do not copy DT_NEEDED links mentioned inside DSOs that follow"
msgstr ""

#: lexsup.c:325
msgid "Output cross reference table"
msgstr ""

#: lexsup.c:327
msgid "SYMBOL=EXPRESSION"
msgstr ""

#: lexsup.c:327
msgid "Define a symbol"
msgstr ""

#: lexsup.c:329
msgid "[=STYLE]"
msgstr ""

#: lexsup.c:329
msgid "Demangle symbol names [using STYLE]"
msgstr ""

#: lexsup.c:333
msgid ""
"Do not allow multiple definitions with symbols included\n"
"           in filename invoked by -R or --just-symbols"
msgstr ""

#: lexsup.c:337
msgid "Generate embedded relocs"
msgstr ""

#: lexsup.c:339
msgid "Treat warnings as errors"
msgstr ""

#: lexsup.c:342
msgid "Do not treat warnings as errors (default)"
msgstr ""

#: lexsup.c:345
msgid "Call SYMBOL at unload-time"
msgstr ""

#: lexsup.c:347
msgid "Force generation of file with .exe suffix"
msgstr ""

#: lexsup.c:349
msgid "Remove unused sections (on some targets)"
msgstr ""

#: lexsup.c:352
msgid "Don't remove unused sections (default)"
msgstr ""

#: lexsup.c:355
msgid "List removed unused sections on stderr"
msgstr ""

#: lexsup.c:358
msgid "Do not list removed unused sections"
msgstr ""

#: lexsup.c:361
msgid "Keep exported symbols when removing unused sections"
msgstr ""

#: lexsup.c:364
msgid "Set default hash table size close to <NUMBER>"
msgstr ""

#: lexsup.c:367
msgid "Print option help"
msgstr ""

#: lexsup.c:369
msgid "Call SYMBOL at load-time"
msgstr ""

#: lexsup.c:371
msgid "FILE/DIR"
msgstr ""

#: lexsup.c:371
msgid "Write a linker map to FILE or DIR/<outputname>.map"
msgstr ""

#: lexsup.c:373
msgid "Do not define Common storage"
msgstr ""

#: lexsup.c:375
msgid "Do not demangle symbol names"
msgstr ""

#: lexsup.c:377
msgid "Use less memory and more disk I/O"
msgstr ""

#: lexsup.c:379
msgid "Do not allow unresolved references in object files"
msgstr ""

#: lexsup.c:382
msgid "Allow unresolved references in shared libraries"
msgstr ""

#: lexsup.c:386
msgid "Do not allow unresolved references in shared libs"
msgstr ""

#: lexsup.c:390
msgid "Allow multiple definitions"
msgstr ""

#: lexsup.c:394
msgid "SCRIPT"
msgstr ""

#: lexsup.c:394
msgid "Provide a script to help with undefined symbol errors"
msgstr ""

#: lexsup.c:397
msgid "Disallow undefined version"
msgstr ""

#: lexsup.c:399
msgid "Create default symbol version"
msgstr ""

#: lexsup.c:402
msgid "Create default symbol version for imported symbols"
msgstr ""

#: lexsup.c:405
msgid "Don't warn about mismatched input files"
msgstr ""

#: lexsup.c:408
msgid "Don't warn on finding an incompatible library"
msgstr ""

#: lexsup.c:411
msgid "Turn off --whole-archive"
msgstr ""

#: lexsup.c:413
msgid "Create an output file even if errors occur"
msgstr ""

#: lexsup.c:418
msgid ""
"Only use library directories specified on\n"
"                                the command line"
msgstr ""

#: lexsup.c:422
msgid "Specify target of output file"
msgstr ""

#: lexsup.c:425
msgid "Print default output format"
msgstr ""

#: lexsup.c:427
msgid "Print current sysroot"
msgstr ""

#: lexsup.c:429
msgid "Ignored for Linux compatibility"
msgstr ""

#: lexsup.c:432
msgid "Reduce memory overheads, possibly taking much longer"
msgstr ""

#: lexsup.c:435
msgid "Reduce code size by using target specific optimizations"
msgstr ""

#: lexsup.c:437
msgid "Do not use relaxation techniques to reduce code size"
msgstr ""

#: lexsup.c:440
msgid "Keep only symbols listed in FILE"
msgstr ""

#: lexsup.c:442
msgid "Set runtime shared library search path"
msgstr ""

#: lexsup.c:444
msgid "Set link time shared library search path"
msgstr ""

#: lexsup.c:447
msgid "Create a shared library"
msgstr ""

#: lexsup.c:451
msgid "Create a position independent executable"
msgstr ""

#: lexsup.c:455
msgid "[=ascending|descending]"
msgstr ""

#: lexsup.c:456
msgid "Sort common symbols by alignment [in specified order]"
msgstr ""

#: lexsup.c:461
msgid "name|alignment"
msgstr ""

#: lexsup.c:462
msgid "Sort sections by name or maximum alignment"
msgstr ""

#: lexsup.c:464
msgid "COUNT"
msgstr ""

#: lexsup.c:464
msgid "How many tags to reserve in .dynamic section"
msgstr ""

#: lexsup.c:467
msgid "[=SIZE]"
msgstr ""

#: lexsup.c:467
msgid "Split output sections every SIZE octets"
msgstr ""

#: lexsup.c:470
msgid "[=COUNT]"
msgstr ""

#: lexsup.c:470
msgid "Split output sections every COUNT relocs"
msgstr ""

#: lexsup.c:473
msgid "Print memory usage statistics"
msgstr ""

#: lexsup.c:475
msgid "Display target specific options"
msgstr ""

#: lexsup.c:477
msgid "Do task level linking"
msgstr ""

#: lexsup.c:479
msgid "Use same format as native linker"
msgstr ""

#: lexsup.c:481
msgid "SECTION=ADDRESS"
msgstr ""

#: lexsup.c:481
msgid "Set address of named section"
msgstr ""

#: lexsup.c:484
msgid "Set address of .bss section"
msgstr ""

#: lexsup.c:486
msgid "Set address of .data section"
msgstr ""

#: lexsup.c:488
msgid "Set address of .text section"
msgstr ""

#: lexsup.c:490
msgid "Set address of text segment"
msgstr ""

#: lexsup.c:492
msgid "Set address of rodata segment"
msgstr ""

#: lexsup.c:494
msgid "Set address of ldata segment"
msgstr ""

#: lexsup.c:497
msgid ""
"How to handle unresolved symbols.  <method> is:\n"
"                                ignore-all, report-all, ignore-in-object-"
"files,\n"
"                                ignore-in-shared-libs"
msgstr ""

#: lexsup.c:502
msgid "[=NUMBER]"
msgstr ""

#: lexsup.c:503
msgid "Output lots of information during link"
msgstr ""

#: lexsup.c:507
msgid "Read version information script"
msgstr ""

#: lexsup.c:510
msgid ""
"Take export symbols list from .exports, using\n"
"                                SYMBOL as the version."
msgstr ""

#: lexsup.c:514
msgid "Add data symbols to dynamic list"
msgstr ""

#: lexsup.c:516
msgid "Use C++ operator new/delete dynamic list"
msgstr ""

#: lexsup.c:518
msgid "Use C++ typeinfo dynamic list"
msgstr ""

#: lexsup.c:520
msgid "Read dynamic list"
msgstr ""

#: lexsup.c:522
msgid "Export the specified symbol"
msgstr ""

#: lexsup.c:524
msgid "Read export dynamic symbol list"
msgstr ""

#: lexsup.c:526
msgid "Warn about duplicate common symbols"
msgstr ""

#: lexsup.c:528
msgid "Warn if global constructors/destructors are seen"
msgstr ""

#: lexsup.c:531
msgid "Warn if the multiple GP values are used"
msgstr ""

#: lexsup.c:533
msgid "Warn only once per undefined symbol"
msgstr ""

#: lexsup.c:535
msgid "Warn if start of section changes due to alignment"
msgstr ""

#: lexsup.c:540
msgid "Warn if output has DT_TEXTREL (default)"
msgstr ""

#: lexsup.c:542
msgid "Warn if output has DT_TEXTREL"
msgstr ""

#: lexsup.c:548
msgid "Warn if an object has alternate ELF machine code"
msgstr ""

#: lexsup.c:552
msgid "Report unresolved symbols as warnings"
msgstr ""

#: lexsup.c:555
msgid "Report unresolved symbols as errors"
msgstr ""

#: lexsup.c:557
msgid "Include all objects from following archives"
msgstr ""

#: lexsup.c:560
msgid "Use wrapper functions for SYMBOL"
msgstr ""

#: lexsup.c:564
msgid "Unresolved SYMBOL will not cause an error or warning"
msgstr ""

#: lexsup.c:566
msgid "Push state of flags governing input file handling"
msgstr ""

#: lexsup.c:569
msgid "Pop state of flags governing input file handling"
msgstr ""

#: lexsup.c:572
msgid "Report target memory usage"
msgstr ""

#: lexsup.c:574
msgid "=MODE"
msgstr ""

#: lexsup.c:574
msgid "Control how orphan sections are handled."
msgstr ""

#: lexsup.c:577
msgid "Show discarded sections in map file output (default)"
msgstr ""

#: lexsup.c:580
msgid "Do not show discarded sections in map file output"
msgstr ""

#: lexsup.c:583
msgid "Emit names and types of static variables in CTF"
msgstr ""

#: lexsup.c:586
msgid "Do not emit names and types of static variables in CTF"
msgstr ""

#: lexsup.c:590
msgid ""
"How to share CTF types between translation units.\n"
"                                <method> is: share-unconflicted (default),\n"
"                                             share-duplicated"
msgstr ""

#: lexsup.c:754
msgid "%F%P: Error: unable to disambiguate: %s (did you mean -%s ?)\n"
msgstr ""

#: lexsup.c:757
msgid "%P: Warning: grouped short command line options are deprecated: %s\n"
msgstr ""

#: lexsup.c:784
msgid "%P: %s: missing argument\n"
msgstr ""

#: lexsup.c:789
msgid "%P: unrecognized option '%s'\n"
msgstr ""

#: lexsup.c:794
msgid "%F%P: use the --help option for usage information\n"
msgstr ""

#: lexsup.c:813
msgid "%F%P: unrecognized -a option `%s'\n"
msgstr ""

#: lexsup.c:826
msgid "%F%P: unrecognized -assert option `%s'\n"
msgstr ""

#: lexsup.c:870
msgid "%F%P: unknown demangling style `%s'\n"
msgstr ""

#: lexsup.c:946 lexsup.c:1414 eaarch64cloudabi.c:807 eaarch64cloudabib.c:807
#: eaarch64elf.c:802 eaarch64elf32.c:802 eaarch64elf32b.c:802
#: eaarch64elfb.c:802 eaarch64fbsd.c:807 eaarch64fbsdb.c:807
#: eaarch64linux.c:807 eaarch64linux32.c:807 eaarch64linux32b.c:807
#: eaarch64linuxb.c:807 earmelf.c:1068 earmelf_fbsd.c:1068
#: earmelf_fuchsia.c:1073 earmelf_linux.c:1073 earmelf_linux_eabi.c:1073
#: earmelf_linux_fdpiceabi.c:1073 earmelf_nacl.c:1073 earmelf_nbsd.c:1068
#: earmelf_phoenix.c:1073 earmelf_vxworks.c:1104 earmelfb.c:1068
#: earmelfb_fbsd.c:1068 earmelfb_fuchsia.c:1073 earmelfb_linux.c:1073
#: earmelfb_linux_eabi.c:1073 earmelfb_linux_fdpiceabi.c:1073
#: earmelfb_nacl.c:1073 earmelfb_nbsd.c:1068 earmnto.c:1043 earmsymbian.c:1068
#: ecskyelf.c:534 ecskyelf_linux.c:697 eelf32metag.c:694 eelf64lppc.c:1171
#: eelf64lppc_fbsd.c:1171 eelf64ppc.c:1171 eelf64ppc_fbsd.c:1171 ehppaelf.c:554
#: ehppalinux.c:732 ehppanbsd.c:732 ehppaobsd.c:732
msgid "%F%P: invalid number `%s'\n"
msgstr ""

#: lexsup.c:1042
msgid "%F%P: bad --unresolved-symbols option: %s\n"
msgstr ""

#: lexsup.c:1119
msgid "%F%P: bad -plugin-opt option\n"
msgstr ""

#. This can happen if the user put "-rpath,a" on the command
#. line.  (Or something similar.  The comma is important).
#. Getopt becomes confused and thinks that this is a -r option
#. but it cannot parse the text after the -r so it refuses to
#. increment the optind counter.  Detect this case and issue
#. an error message here.  We cannot just make this a warning,
#. increment optind, and continue because getopt is too confused
#. and will seg-fault the next time around.
#: lexsup.c:1136
msgid "%F%P: unrecognised option: %s\n"
msgstr ""

#: lexsup.c:1139 lexsup.c:1249 lexsup.c:1267 lexsup.c:1383
msgid "%F%P: -r and %s may not be used together\n"
msgstr ""

#: lexsup.c:1261
msgid "%F%P: -shared not supported\n"
msgstr ""

#: lexsup.c:1272
msgid "%F%P: -pie not supported\n"
msgstr ""

#: lexsup.c:1278
msgid "%P: SONAME must not be empty string; keeping previous one\n"
msgstr ""

#: lexsup.c:1284
msgid "descending"
msgstr ""

#: lexsup.c:1286
msgid "ascending"
msgstr ""

#: lexsup.c:1289
msgid "%F%P: invalid common section sorting option: %s\n"
msgstr ""

#: lexsup.c:1293
msgid "name"
msgstr ""

#: lexsup.c:1295
msgid "alignment"
msgstr ""

#: lexsup.c:1298
msgid "%F%P: invalid section sorting option: %s\n"
msgstr ""

#: lexsup.c:1332
msgid "%F%P: invalid argument to option \"--section-start\"\n"
msgstr ""

#: lexsup.c:1339
msgid "%F%P: missing argument(s) to option \"--section-start\"\n"
msgstr ""

#: lexsup.c:1604
msgid "%F%P: group ended before it began (--help for usage)\n"
msgstr ""

#: lexsup.c:1632
msgid "%X%P: --hash-size needs a numeric argument\n"
msgstr ""

#: lexsup.c:1644
msgid "%F%P: no state pushed before popping\n"
msgstr ""

#: lexsup.c:1667
msgid "%F%P: invalid argument to option \"--orphan-handling\"\n"
msgstr ""

#: lexsup.c:1697
msgid "%F%P: bad --ctf-share-types option: %s\n"
msgstr ""

#: lexsup.c:1715
msgid "%P: no file/directory name provided for map output; ignored\n"
msgstr ""

#: lexsup.c:1743
msgid "%P: cannot stat linker map file: %E\n"
msgstr ""

#: lexsup.c:1755
msgid "%P: linker map file is not a regular file\n"
msgstr ""

#. If the asprintf failed then something is probably very
#. wrong.  Better to halt now rather than continue on
#. into more problems.
#: lexsup.c:1766
msgid "%P%F: cannot create name for linker map file: %E\n"
msgstr ""

#: lexsup.c:1777
msgid "%P: SONAME must not be empty string; ignored\n"
msgstr ""

#: lexsup.c:1783
msgid "%P: missing --end-group; added as last command line option\n"
msgstr ""

#: lexsup.c:1891
msgid "%F%P: -F may not be used without -shared\n"
msgstr ""

#: lexsup.c:1893
msgid "%F%P: -f may not be used without -shared\n"
msgstr ""

#: lexsup.c:1934 lexsup.c:1947
msgid "%F%P: invalid hex number `%s'\n"
msgstr ""

#: lexsup.c:1977
#, c-format
msgid "  --audit=AUDITLIB            Specify a library to use for auditing\n"
msgstr ""

#: lexsup.c:1979
#, c-format
msgid "  -Bgroup                     Selects group name lookup rules for DSO\n"
msgstr ""

#: lexsup.c:1981
#, c-format
msgid "  --disable-new-dtags         Disable new dynamic tags\n"
msgstr ""

#: lexsup.c:1983
#, c-format
msgid "  --enable-new-dtags          Enable new dynamic tags\n"
msgstr ""

#: lexsup.c:1985
#, c-format
msgid "  --eh-frame-hdr              Create .eh_frame_hdr section\n"
msgstr ""

#: lexsup.c:1987
#, c-format
msgid "  --no-eh-frame-hdr           Do not create .eh_frame_hdr section\n"
msgstr ""

#: lexsup.c:1989
#, c-format
msgid "  --exclude-libs=LIBS         Make all symbols in LIBS hidden\n"
msgstr ""

#: lexsup.c:1991
#, c-format
msgid ""
"  --hash-style=STYLE          Set hash style to sysv/gnu/both.  Default: "
msgstr ""

#: lexsup.c:2010
#, c-format
msgid ""
"  -P AUDITLIB, --depaudit=AUDITLIB\n"
"                              Specify a library to use for auditing "
"dependencies\n"
msgstr ""

#: lexsup.c:2013
#, c-format
msgid ""
"  -z combreloc                Merge dynamic relocs into one section and "
"sort\n"
msgstr ""

#: lexsup.c:2015
#, c-format
msgid ""
"  -z nocombreloc              Don't merge dynamic relocs into one section\n"
msgstr ""

#: lexsup.c:2017
#, c-format
msgid ""
"  -z global                   Make symbols in DSO available for "
"subsequently\n"
"                                loaded objects\n"
msgstr ""

#: lexsup.c:2020
#, c-format
msgid ""
"  -z initfirst                Mark DSO to be initialized first at runtime\n"
msgstr ""

#: lexsup.c:2022
#, c-format
msgid ""
"  -z interpose                Mark object to interpose all DSOs but "
"executable\n"
msgstr ""

#: lexsup.c:2024
#, c-format
msgid ""
"  -z lazy                     Mark object lazy runtime binding (default)\n"
msgstr ""

#: lexsup.c:2026
#, c-format
msgid "  -z loadfltr                 Mark object requiring immediate process\n"
msgstr ""

#: lexsup.c:2028
#, c-format
msgid "  -z nocopyreloc              Don't create copy relocs\n"
msgstr ""

#: lexsup.c:2030
#, c-format
msgid ""
"  -z nodefaultlib             Mark object not to use default search paths\n"
msgstr ""

#: lexsup.c:2032
#, c-format
msgid "  -z nodelete                 Mark DSO non-deletable at runtime\n"
msgstr ""

#: lexsup.c:2034
#, c-format
msgid "  -z nodlopen                 Mark DSO not available to dlopen\n"
msgstr ""

#: lexsup.c:2036
#, c-format
msgid "  -z nodump                   Mark DSO not available to dldump\n"
msgstr ""

#: lexsup.c:2038
#, c-format
msgid "  -z now                      Mark object non-lazy runtime binding\n"
msgstr ""

#: lexsup.c:2040
#, c-format
msgid ""
"  -z origin                   Mark object requiring immediate $ORIGIN\n"
"                                processing at runtime\n"
msgstr ""

#: lexsup.c:2044
#, c-format
msgid "  -z relro                    Create RELRO program header (default)\n"
msgstr ""

#: lexsup.c:2046
#, c-format
msgid "  -z norelro                  Don't create RELRO program header\n"
msgstr ""

#: lexsup.c:2049
#, c-format
msgid "  -z relro                    Create RELRO program header\n"
msgstr ""

#: lexsup.c:2051
#, c-format
msgid ""
"  -z norelro                  Don't create RELRO program header (default)\n"
msgstr ""

#: lexsup.c:2055
#, c-format
msgid ""
"  -z separate-code            Create separate code program header (default)\n"
msgstr ""

#: lexsup.c:2057
#, c-format
msgid ""
"  -z noseparate-code          Don't create separate code program header\n"
msgstr ""

#: lexsup.c:2060
#, c-format
msgid "  -z separate-code            Create separate code program header\n"
msgstr ""

#: lexsup.c:2062
#, c-format
msgid ""
"  -z noseparate-code          Don't create separate code program header "
"(default)\n"
msgstr ""

#: lexsup.c:2065
#, c-format
msgid ""
"  -z common                   Generate common symbols with STT_COMMON type\n"
msgstr ""

#: lexsup.c:2067
#, c-format
msgid ""
"  -z nocommon                 Generate common symbols with STT_OBJECT type\n"
msgstr ""

#: lexsup.c:2069
#, c-format
msgid "  -z stack-size=SIZE          Set size of stack segment\n"
msgstr ""

#: lexsup.c:2072
#, c-format
msgid ""
"  -z text                     Treat DT_TEXTREL in output as error (default)\n"
msgstr ""

#: lexsup.c:2075
#, c-format
msgid "  -z text                     Treat DT_TEXTREL in output as error\n"
msgstr ""

#: lexsup.c:2079
#, c-format
msgid ""
"  -z notext                   Don't treat DT_TEXTREL in output as error "
"(default)\n"
msgstr ""

#: lexsup.c:2081
#, c-format
msgid ""
"  -z textoff                  Don't treat DT_TEXTREL in output as error "
"(default)\n"
msgstr ""

#: lexsup.c:2086
#, c-format
msgid ""
"  -z notext                   Don't treat DT_TEXTREL in output as error\n"
msgstr ""

#: lexsup.c:2088
#, c-format
msgid ""
"  -z textoff                  Don't treat DT_TEXTREL in output as error\n"
msgstr ""

#: lexsup.c:2096
#, c-format
msgid "  --build-id[=STYLE]          Generate build ID note\n"
msgstr ""

#: lexsup.c:2098
#, c-format
msgid ""
"  --compress-debug-sections=[none|zlib|zlib-gnu|zlib-gabi]\n"
"                              Compress DWARF debug sections using zlib\n"
msgstr ""

#: lexsup.c:2102
#, c-format
msgid "                                Default: zlib-gabi\n"
msgstr ""

#: lexsup.c:2105
#, c-format
msgid "                                Default: none\n"
msgstr ""

#: lexsup.c:2108
#, c-format
msgid "  -z common-page-size=SIZE    Set common page size to SIZE\n"
msgstr ""

#: lexsup.c:2110
#, c-format
msgid "  -z max-page-size=SIZE       Set maximum page size to SIZE\n"
msgstr ""

#: lexsup.c:2112
#, c-format
msgid ""
"  -z defs                     Report unresolved symbols in object files\n"
msgstr ""

#: lexsup.c:2114
#, c-format
msgid "  -z muldefs                  Allow multiple definitions\n"
msgstr ""

#: lexsup.c:2116
#, c-format
msgid ""
"  -z execstack                Mark executable as requiring executable stack\n"
msgstr ""

#: lexsup.c:2118
#, c-format
msgid ""
"  -z noexecstack              Mark executable as not requiring executable "
"stack\n"
msgstr ""

#: lexsup.c:2120
#, c-format
msgid "  -z unique-symbol            Avoid duplicated local symbol names\n"
msgstr ""

#: lexsup.c:2122
#, c-format
msgid ""
"  -z nounique-symbol          Keep duplicated local symbol names (default)\n"
msgstr ""

#: lexsup.c:2124
#, c-format
msgid ""
"  -z globalaudit              Mark executable requiring global auditing\n"
msgstr ""

#: lexsup.c:2131
#, c-format
msgid ""
"  --ld-generated-unwind-info  Generate exception handling info for PLT\n"
msgstr ""

#: lexsup.c:2133
#, c-format
msgid ""
"  --no-ld-generated-unwind-info\n"
"                              Don't generate exception handling info for "
"PLT\n"
msgstr ""

#: lexsup.c:2144
#, c-format
msgid "ELF emulations:\n"
msgstr ""

#: lexsup.c:2162
#, c-format
msgid "Usage: %s [options] file...\n"
msgstr ""

#: lexsup.c:2164
#, c-format
msgid "Options:\n"
msgstr ""

#: lexsup.c:2242
#, c-format
msgid "  @FILE"
msgstr ""

#: lexsup.c:2245
#, c-format
msgid "Read options from FILE\n"
msgstr ""

#. Note: Various tools (such as libtool) depend upon the
#. format of the listings below - do not change them.
#: lexsup.c:2250
#, c-format
msgid "%s: supported targets:"
msgstr ""

#: lexsup.c:2258
#, c-format
msgid "%s: supported emulations: "
msgstr ""

#: lexsup.c:2263
#, c-format
msgid "%s: emulation specific options:\n"
msgstr ""

#: lexsup.c:2270
#, c-format
msgid "Report bugs to %s\n"
msgstr ""

#: mri.c:291
msgid "%F%P: unknown format type %s\n"
msgstr ""

#: pe-dll.c:447
msgid "%X%P: unsupported PEI architecture: %s\n"
msgstr ""

#: pe-dll.c:826
msgid "%X%P: cannot export %s: invalid export name\n"
msgstr ""

#: pe-dll.c:878
#, c-format
msgid "%X%P: error, duplicate EXPORT with ordinals: %s (%d vs %d)\n"
msgstr ""

#: pe-dll.c:885
#, c-format
msgid "%P: warning, duplicate EXPORT: %s\n"
msgstr ""

#: pe-dll.c:992
#, c-format
msgid "%X%P: cannot export %s: symbol not defined\n"
msgstr ""

#: pe-dll.c:998
#, c-format
msgid "%X%P: cannot export %s: symbol wrong type (%d vs %d)\n"
msgstr ""

#: pe-dll.c:1005
#, c-format
msgid "%X%P: cannot export %s: symbol not found\n"
msgstr ""

#: pe-dll.c:1028 eaarch64cloudabi.c:360 eaarch64cloudabib.c:360
#: eaarch64elf.c:359 eaarch64elf32.c:359 eaarch64elf32b.c:359
#: eaarch64elfb.c:359 eaarch64fbsd.c:360 eaarch64fbsdb.c:360
#: eaarch64linux.c:360 eaarch64linux32.c:360 eaarch64linux32b.c:360
#: eaarch64linuxb.c:360 eaix5ppc.c:1433 eaix5ppc.c:1443 eaix5rs6.c:1433
#: eaix5rs6.c:1443 eaixppc.c:1433 eaixppc.c:1443 eaixrs6.c:1433 eaixrs6.c:1443
#: earmelf.c:568 earmelf_fbsd.c:568 earmelf_fuchsia.c:569 earmelf_linux.c:569
#: earmelf_linux_eabi.c:569 earmelf_linux_fdpiceabi.c:569 earmelf_nacl.c:569
#: earmelf_nbsd.c:568 earmelf_phoenix.c:569 earmelf_vxworks.c:568
#: earmelfb.c:568 earmelfb_fbsd.c:568 earmelfb_fuchsia.c:569
#: earmelfb_linux.c:569 earmelfb_linux_eabi.c:569
#: earmelfb_linux_fdpiceabi.c:569 earmelfb_nacl.c:569 earmelfb_nbsd.c:568
#: earmnto.c:568 earmsymbian.c:568 ecskyelf.c:163 ecskyelf_linux.c:163
#: eelf32b4300.c:172 eelf32bmip.c:172 eelf32bmipn32.c:186 eelf32bsmip.c:186
#: eelf32btsmip.c:172 eelf32btsmip_fbsd.c:172 eelf32btsmipn32.c:172
#: eelf32btsmipn32_fbsd.c:172 eelf32ebmip.c:172 eelf32ebmipvxworks.c:172
#: eelf32elmip.c:172 eelf32elmipvxworks.c:172 eelf32l4300.c:172
#: eelf32lmip.c:172 eelf32lr5900.c:172 eelf32lr5900n32.c:172 eelf32lsmip.c:172
#: eelf32ltsmip.c:172 eelf32ltsmip_fbsd.c:172 eelf32ltsmipn32.c:172
#: eelf32ltsmipn32_fbsd.c:172 eelf32metag.c:87 eelf32mipswindiss.c:172
#: eelf64bmip.c:186 eelf64btsmip.c:172 eelf64btsmip_fbsd.c:172 eelf64lppc.c:119
#: eelf64lppc_fbsd.c:119 eelf64ltsmip.c:172 eelf64ltsmip_fbsd.c:172
#: eelf64ppc.c:119 eelf64ppc_fbsd.c:119 ehppaelf.c:110 ehppalinux.c:110
#: ehppanbsd.c:110 ehppaobsd.c:110 em68hc11elf.c:170 em68hc11elfb.c:170
#: em68hc12elf.c:170 em68hc12elfb.c:170 enios2elf.c:92 enios2linux.c:92
#: eppcmacos.c:1433 eppcmacos.c:1443
msgid "%F%P: can not create BFD: %E\n"
msgstr ""

#: pe-dll.c:1042
msgid "%X%P: can not create .edata section: %E\n"
msgstr ""

#: pe-dll.c:1056
msgid "%X%P: can not create .reloc section: %E\n"
msgstr ""

#: pe-dll.c:1117
#, c-format
msgid "%X%P: error: ordinal used twice: %d (%s vs %s)\n"
msgstr ""

#: pe-dll.c:1153
#, c-format
msgid "%X%P: error: export ordinal too large: %d\n"
msgstr ""

#: pe-dll.c:1476
#, c-format
msgid "Info: resolving %s by linking to %s (auto-import)\n"
msgstr ""

#: pe-dll.c:1482
msgid ""
"%P: warning: auto-importing has been activated without --enable-auto-import "
"specified on the command line; this should work unless it involves constant "
"data structures referencing symbols from auto-imported DLLs\n"
msgstr ""

#: pe-dll.c:1553
msgid "%P: zero vma section reloc detected: `%s' #%d f=%d\n"
msgstr ""

#: pe-dll.c:1670
#, c-format
msgid "%X%P: error: %d-bit reloc in dll\n"
msgstr ""

#: pe-dll.c:1798
#, c-format
msgid "%P: can't open output def file %s\n"
msgstr ""

#: pe-dll.c:1949
#, c-format
msgid "; no contents available\n"
msgstr ""

#: pe-dll.c:2808
msgid ""
"%X%P: %C: variable '%pT' can't be auto-imported; please read the "
"documentation for ld's --enable-auto-import for details\n"
msgstr ""

#: pe-dll.c:2835
#, c-format
msgid "%X%P: can't open .lib file: %s\n"
msgstr ""

#: pe-dll.c:2841
#, c-format
msgid "Creating library file: %s\n"
msgstr ""

#: pe-dll.c:2871
msgid "%X%P: bfd_openr %s: %E\n"
msgstr ""

#: pe-dll.c:2883
msgid "%X%P: %s(%s): can't find member in non-archive file"
msgstr ""

#: pe-dll.c:2897
msgid "%X%P: %s(%s): can't find member in archive"
msgstr ""

#: pe-dll.c:3160
msgid "%X%P: add symbols %s: %E\n"
msgstr ""

#: pe-dll.c:3347
msgid "%X%P: open %s: %E\n"
msgstr ""

#: pe-dll.c:3356
msgid "%X%P: %s: this doesn't appear to be a DLL\n"
msgstr ""

#: pe-dll.c:3561
msgid "%X%P: error: can't use long section names on this arch\n"
msgstr ""

#: plugin.c:233 plugin.c:279
msgid "<no plugin>"
msgstr ""

#: plugin.c:248 plugin.c:1100
msgid "%F%P: %s: error loading plugin: %s\n"
msgstr ""

#: plugin.c:255
msgid "%P: %s: duplicated plugin\n"
msgstr ""

#: plugin.c:341
msgid "%F%P: could not create dummy IR bfd: %E\n"
msgstr ""

#: plugin.c:422
msgid "%F%P: %s: non-ELF symbol in ELF BFD!\n"
msgstr ""

#: plugin.c:433
msgid "%F%P: unknown ELF symbol visibility: %d!\n"
msgstr ""

#: plugin.c:542
msgid "%F%P: unsupported input file size: %s (%ld bytes)\n"
msgstr ""

#: plugin.c:679
#, c-format
msgid "unknown LTO kind value %x"
msgstr ""

#: plugin.c:705
#, c-format
msgid "unknown LTO resolution value %x"
msgstr ""

#: plugin.c:725
#, c-format
msgid "unknown LTO visibility value %x"
msgstr ""

#. We should not have a new, indirect or warning symbol here.
#: plugin.c:805
msgid "%F%P: %s: plugin symbol table corrupt (sym type %d)\n"
msgstr ""

#: plugin.c:867
msgid "%P: %pB: symbol `%s' definition: %s, visibility: %s, resolution: %s\n"
msgstr ""

#: plugin.c:944
msgid "%P: warning: "
msgstr ""

#: plugin.c:955
msgid "%P: error: "
msgstr ""

#: plugin.c:1107
msgid "%F%P: %s: plugin error: %d\n"
msgstr ""

#: plugin.c:1162
msgid "%F%P: plugin_strdup failed to allocate memory: %s\n"
msgstr ""

#: plugin.c:1199
msgid "%F%P: plugin failed to allocate memory for input: %s\n"
msgstr ""

#: plugin.c:1226
msgid "%F%P: %s: plugin reported error claiming file\n"
msgstr ""

#: plugin.c:1337
msgid "%P: %s: error in plugin cleanup: %d (ignored)\n"
msgstr ""

#: eaarch64cloudabi.c:223 eaarch64cloudabib.c:223 eaarch64elf.c:222
#: eaarch64elf32.c:222 eaarch64elf32b.c:222 eaarch64elfb.c:222
#: eaarch64fbsd.c:223 eaarch64fbsdb.c:223 eaarch64linux.c:223
#: eaarch64linux32.c:223 eaarch64linux32b.c:223 eaarch64linuxb.c:223
#: earmelf.c:292 earmelf_fbsd.c:292 earmelf_fuchsia.c:293 earmelf_linux.c:293
#: earmelf_linux_eabi.c:293 earmelf_linux_fdpiceabi.c:293 earmelf_nacl.c:293
#: earmelf_nbsd.c:292 earmelf_phoenix.c:293 earmelf_vxworks.c:292
#: earmelfb.c:292 earmelfb_fbsd.c:292 earmelfb_fuchsia.c:293
#: earmelfb_linux.c:293 earmelfb_linux_eabi.c:293
#: earmelfb_linux_fdpiceabi.c:293 earmelfb_nacl.c:293 earmelfb_nbsd.c:292
#: earmnto.c:292 earmsymbian.c:292 eavr1.c:178 eavr2.c:178 eavr25.c:178
#: eavr3.c:178 eavr31.c:178 eavr35.c:178 eavr4.c:178 eavr5.c:178 eavr51.c:178
#: eavr6.c:178 eavrtiny.c:178 eavrxmega1.c:178 eavrxmega2.c:178
#: eavrxmega3.c:178 eavrxmega4.c:178 eavrxmega5.c:178 eavrxmega6.c:178
#: eavrxmega7.c:178 ecskyelf.c:210 ecskyelf_linux.c:210 eelf32b4300.c:205
#: eelf32bmip.c:205 eelf32bmipn32.c:219 eelf32bsmip.c:219 eelf32btsmip.c:205
#: eelf32btsmip_fbsd.c:205 eelf32btsmipn32.c:205 eelf32btsmipn32_fbsd.c:205
#: eelf32ebmip.c:205 eelf32ebmipvxworks.c:205 eelf32elmip.c:205
#: eelf32elmipvxworks.c:205 eelf32l4300.c:205 eelf32lmip.c:205
#: eelf32lr5900.c:205 eelf32lr5900n32.c:205 eelf32lsmip.c:205
#: eelf32ltsmip.c:205 eelf32ltsmip_fbsd.c:205 eelf32ltsmipn32.c:205
#: eelf32ltsmipn32_fbsd.c:205 eelf32metag.c:206 eelf32mipswindiss.c:205
#: eelf64bmip.c:219 eelf64btsmip.c:205 eelf64btsmip_fbsd.c:205 eelf64lppc.c:482
#: eelf64lppc_fbsd.c:482 eelf64ltsmip.c:205 eelf64ltsmip_fbsd.c:205
#: eelf64ppc.c:482 eelf64ppc_fbsd.c:482 ehppaelf.c:230 ehppalinux.c:230
#: ehppanbsd.c:230 ehppaobsd.c:230 em68hc11elf.c:295 em68hc11elfb.c:295
#: em68hc12elf.c:295 em68hc12elfb.c:295 enios2elf.c:223 enios2linux.c:223
msgid "%X%P: can not make stub section: %E\n"
msgstr ""

#: eaarch64cloudabi.c:266 eaarch64cloudabib.c:266 eaarch64elf.c:265
#: eaarch64elf32.c:265 eaarch64elf32b.c:265 eaarch64elfb.c:265
#: eaarch64fbsd.c:266 eaarch64fbsdb.c:266 eaarch64linux.c:266
#: eaarch64linux32.c:266 eaarch64linux32b.c:266 eaarch64linuxb.c:266
#: earcelf.c:96 earclinux.c:97 earclinux_nps.c:97 earcv2elf.c:96
#: earcv2elfx.c:96 earmelf.c:404 earmelf_fbsd.c:404 earmelf_fuchsia.c:405
#: earmelf_linux.c:405 earmelf_linux_eabi.c:405 earmelf_linux_fdpiceabi.c:405
#: earmelf_nacl.c:405 earmelf_nbsd.c:404 earmelf_phoenix.c:405
#: earmelf_vxworks.c:404 earmelfb.c:404 earmelfb_fbsd.c:404
#: earmelfb_fuchsia.c:405 earmelfb_linux.c:405 earmelfb_linux_eabi.c:405
#: earmelfb_linux_fdpiceabi.c:405 earmelfb_nacl.c:405 earmelfb_nbsd.c:404
#: earmnto.c:404 earmsymbian.c:404 eavr1.c:299 eavr2.c:299 eavr25.c:299
#: eavr3.c:299 eavr31.c:299 eavr35.c:299 eavr4.c:299 eavr5.c:299 eavr51.c:299
#: eavr6.c:299 eavrtiny.c:299 eavrxmega1.c:299 eavrxmega2.c:299
#: eavrxmega3.c:299 eavrxmega4.c:299 eavrxmega5.c:299 eavrxmega6.c:299
#: eavrxmega7.c:299 ecriself.c:96 ecrislinux.c:97 ed10velf.c:96
#: eelf32_sparc.c:97 eelf32_sparc_sol2.c:228 eelf32_sparc_vxworks.c:126
#: eelf32_spu.c:766 eelf32_tic6x_be.c:181 eelf32_tic6x_elf_be.c:181
#: eelf32_tic6x_elf_le.c:181 eelf32_tic6x_le.c:181 eelf32_tic6x_linux_be.c:181
#: eelf32_tic6x_linux_le.c:181 eelf32_x86_64.c:121 eelf32am33lin.c:96
#: eelf32b4300.c:293 eelf32bfin.c:106 eelf32bfinfd.c:106 eelf32bmip.c:293
#: eelf32bmipn32.c:307 eelf32bsmip.c:307 eelf32btsmip.c:293
#: eelf32btsmip_fbsd.c:293 eelf32btsmipn32.c:293 eelf32btsmipn32_fbsd.c:293
#: eelf32cr16.c:246 eelf32crx.c:133 eelf32ebmip.c:293 eelf32ebmipvxworks.c:322
#: eelf32elmip.c:293 eelf32elmipvxworks.c:322 eelf32epiphany.c:96
#: eelf32epiphany_4x4.c:98 eelf32frvfd.c:96 eelf32ip2k.c:96 eelf32l4300.c:293
#: eelf32lm32.c:96 eelf32lm32fd.c:96 eelf32lmip.c:293 eelf32lppc.c:317
#: eelf32lppclinux.c:317 eelf32lppcnto.c:317 eelf32lppcsim.c:317
#: eelf32lr5900.c:293 eelf32lr5900n32.c:292 eelf32lriscv.c:89
#: eelf32lriscv_ilp32.c:89 eelf32lriscv_ilp32f.c:89 eelf32lsmip.c:293
#: eelf32ltsmip.c:293 eelf32ltsmip_fbsd.c:293 eelf32ltsmipn32.c:293
#: eelf32ltsmipn32_fbsd.c:293 eelf32m32c.c:107 eelf32mb_linux.c:97
#: eelf32mbel_linux.c:97 eelf32mcore.c:96 eelf32mep.c:96 eelf32metag.c:256
#: eelf32microblaze.c:96 eelf32microblazeel.c:96 eelf32mipswindiss.c:292
#: eelf32moxie.c:96 eelf32or1k.c:97 eelf32or1k_linux.c:97 eelf32ppc.c:317
#: eelf32ppc_fbsd.c:317 eelf32ppclinux.c:317 eelf32ppcnto.c:317
#: eelf32ppcsim.c:317 eelf32ppcvxworks.c:291 eelf32ppcwindiss.c:317
#: eelf32rl78.c:96 eelf32rx.c:112 eelf32rx_linux.c:109 eelf32tilegx.c:97
#: eelf32tilegx_be.c:97 eelf32tilepro.c:97 eelf32vax.c:96 eelf32visium.c:96
#: eelf32xc16x.c:96 eelf32xc16xl.c:96 eelf32xc16xs.c:96 eelf32xstormy16.c:107
#: eelf32xtensa.c:2001 eelf32z80.c:123 eelf64_aix.c:96 eelf64_ia64.c:122
#: eelf64_ia64_fbsd.c:122 eelf64_ia64_vms.c:220 eelf64_s390.c:112
#: eelf64_sparc.c:97 eelf64_sparc_fbsd.c:97 eelf64_sparc_sol2.c:228
#: eelf64alpha.c:180 eelf64alpha_fbsd.c:180 eelf64alpha_nbsd.c:180
#: eelf64bmip.c:307 eelf64bpf.c:96 eelf64btsmip.c:293 eelf64btsmip_fbsd.c:293
#: eelf64hppa.c:96 eelf64lppc.c:592 eelf64lppc_fbsd.c:592 eelf64lriscv.c:89
#: eelf64lriscv_lp64.c:89 eelf64lriscv_lp64f.c:89 eelf64ltsmip.c:293
#: eelf64ltsmip_fbsd.c:293 eelf64mmix.c:207 eelf64ppc.c:592
#: eelf64ppc_fbsd.c:592 eelf64rdos.c:112 eelf64tilegx.c:97 eelf64tilegx_be.c:97
#: eelf_i386.c:121 eelf_i386_be.c:120 eelf_i386_fbsd.c:121 eelf_i386_ldso.c:121
#: eelf_i386_sol2.c:252 eelf_i386_vxworks.c:150 eelf_iamcu.c:121
#: eelf_k1om.c:121 eelf_k1om_fbsd.c:121 eelf_l1om.c:121 eelf_l1om_fbsd.c:121
#: eelf_s390.c:97 eelf_x86_64.c:121 eelf_x86_64_cloudabi.c:121
#: eelf_x86_64_fbsd.c:121 eelf_x86_64_sol2.c:252 eh8300elf.c:96
#: eh8300elf_linux.c:96 eh8300helf.c:96 eh8300helf_linux.c:96 eh8300hnelf.c:96
#: eh8300self.c:96 eh8300self_linux.c:96 eh8300snelf.c:96 eh8300sxelf.c:96
#: eh8300sxelf_linux.c:96 eh8300sxnelf.c:96 ehppa64linux.c:96 ehppaelf.c:280
#: ehppalinux.c:280 ehppanbsd.c:280 ehppaobsd.c:280 ei386lynx.c:111
#: ei386moss.c:111 ei386nto.c:111 em32relf.c:96 em32relf_linux.c:96
#: em32rlelf.c:96 em32rlelf_linux.c:96 em68hc11elf.c:373 em68hc11elfb.c:373
#: em68hc12elf.c:373 em68hc12elfb.c:373 em68kelf.c:248 em68kelfnbsd.c:248
#: emn10300.c:96 ends32belf.c:204 ends32belf16m.c:204 ends32belf_linux.c:204
#: ends32elf.c:204 ends32elf16m.c:204 ends32elf_linux.c:204 enios2elf.c:273
#: enios2linux.c:273 epruelf.c:117 escore3_elf.c:117 escore7_elf.c:117
#: eshelf.c:96 eshelf_fd.c:97 eshelf_linux.c:97 eshelf_nbsd.c:96
#: eshelf_nto.c:96 eshelf_uclinux.c:96 eshelf_vxworks.c:125 eshlelf.c:96
#: eshlelf_fd.c:97 eshlelf_linux.c:97 eshlelf_nbsd.c:96 eshlelf_nto.c:96
#: eshlelf_vxworks.c:125 ev850.c:143 ev850_rh850.c:143
msgid "%X%P: .eh_frame/.stab edit: %E\n"
msgstr ""

#: eaarch64cloudabi.c:282 eaarch64cloudabib.c:282 eaarch64elf.c:281
#: eaarch64elf32.c:281 eaarch64elf32b.c:281 eaarch64elfb.c:281
#: eaarch64fbsd.c:282 eaarch64fbsdb.c:282 eaarch64linux.c:282
#: eaarch64linux32.c:282 eaarch64linux32b.c:282 eaarch64linuxb.c:282
#: earmelf.c:419 earmelf_fbsd.c:419 earmelf_fuchsia.c:420 earmelf_linux.c:420
#: earmelf_linux_eabi.c:420 earmelf_linux_fdpiceabi.c:420 earmelf_nacl.c:420
#: earmelf_nbsd.c:419 earmelf_phoenix.c:420 earmelf_vxworks.c:419
#: earmelfb.c:419 earmelfb_fbsd.c:419 earmelfb_fuchsia.c:420
#: earmelfb_linux.c:420 earmelfb_linux_eabi.c:420
#: earmelfb_linux_fdpiceabi.c:420 earmelfb_nacl.c:420 earmelfb_nbsd.c:419
#: earmnto.c:419 earmsymbian.c:419 ecskyelf.c:260 ecskyelf_linux.c:260
msgid "%X%P: could not compute sections lists for stub generation: %E\n"
msgstr ""

#: eaarch64cloudabi.c:297 eaarch64cloudabib.c:297 eaarch64elf.c:296
#: eaarch64elf32.c:296 eaarch64elf32b.c:296 eaarch64elfb.c:296
#: eaarch64fbsd.c:297 eaarch64fbsdb.c:297 eaarch64linux.c:297
#: eaarch64linux32.c:297 eaarch64linux32b.c:297 eaarch64linuxb.c:297
#: earmelf.c:434 earmelf_fbsd.c:434 earmelf_fuchsia.c:435 earmelf_linux.c:435
#: earmelf_linux_eabi.c:435 earmelf_linux_fdpiceabi.c:435 earmelf_nacl.c:435
#: earmelf_nbsd.c:434 earmelf_phoenix.c:435 earmelf_vxworks.c:434
#: earmelfb.c:434 earmelfb_fbsd.c:434 earmelfb_fuchsia.c:435
#: earmelfb_linux.c:435 earmelfb_linux_eabi.c:435
#: earmelfb_linux_fdpiceabi.c:435 earmelfb_nacl.c:435 earmelfb_nbsd.c:434
#: earmnto.c:434 earmsymbian.c:434 eavr1.c:129 eavr1.c:192 eavr2.c:129
#: eavr2.c:192 eavr25.c:129 eavr25.c:192 eavr3.c:129 eavr3.c:192 eavr31.c:129
#: eavr31.c:192 eavr35.c:129 eavr35.c:192 eavr4.c:129 eavr4.c:192 eavr5.c:129
#: eavr5.c:192 eavr51.c:129 eavr51.c:192 eavr6.c:129 eavr6.c:192 eavrtiny.c:129
#: eavrtiny.c:192 eavrxmega1.c:129 eavrxmega1.c:192 eavrxmega2.c:129
#: eavrxmega2.c:192 eavrxmega3.c:129 eavrxmega3.c:192 eavrxmega4.c:129
#: eavrxmega4.c:192 eavrxmega5.c:129 eavrxmega5.c:192 eavrxmega6.c:129
#: eavrxmega6.c:192 eavrxmega7.c:129 eavrxmega7.c:192 eelf32metag.c:271
#: eelf32metag.c:285 eelf64lppc.c:535 eelf64lppc.c:554 eelf64lppc.c:581
#: eelf64lppc_fbsd.c:535 eelf64lppc_fbsd.c:554 eelf64lppc_fbsd.c:581
#: eelf64ppc.c:535 eelf64ppc.c:554 eelf64ppc.c:581 eelf64ppc_fbsd.c:535
#: eelf64ppc_fbsd.c:554 eelf64ppc_fbsd.c:581 ehppaelf.c:295 ehppaelf.c:310
#: ehppalinux.c:295 ehppalinux.c:310 ehppanbsd.c:295 ehppanbsd.c:310
#: ehppaobsd.c:295 ehppaobsd.c:310 em68hc11elf.c:90 em68hc11elf.c:100
#: em68hc11elf.c:317 em68hc11elfb.c:90 em68hc11elfb.c:100 em68hc11elfb.c:317
#: em68hc12elf.c:90 em68hc12elf.c:100 em68hc12elf.c:317 em68hc12elfb.c:90
#: em68hc12elfb.c:100 em68hc12elfb.c:317 enios2elf.c:290 enios2elf.c:303
#: enios2linux.c:290 enios2linux.c:303
msgid "%X%P: can not size stub section: %E\n"
msgstr ""

#: eaarch64cloudabi.c:316 eaarch64cloudabib.c:316 eaarch64elf.c:315
#: eaarch64elf32.c:315 eaarch64elf32b.c:315 eaarch64elfb.c:315
#: eaarch64fbsd.c:316 eaarch64fbsdb.c:316 eaarch64linux.c:316
#: eaarch64linux32.c:316 eaarch64linux32b.c:316 eaarch64linuxb.c:316
#: earmelf.c:468 earmelf_fbsd.c:468 earmelf_fuchsia.c:469 earmelf_linux.c:469
#: earmelf_linux_eabi.c:469 earmelf_linux_fdpiceabi.c:469 earmelf_nacl.c:469
#: earmelf_nbsd.c:468 earmelf_phoenix.c:469 earmelf_vxworks.c:468
#: earmelfb.c:468 earmelfb_fbsd.c:468 earmelfb_fuchsia.c:469
#: earmelfb_linux.c:469 earmelfb_linux_eabi.c:469
#: earmelfb_linux_fdpiceabi.c:469 earmelfb_nacl.c:469 earmelfb_nbsd.c:468
#: earmnto.c:468 earmsymbian.c:468 eavr1.c:201 eavr2.c:201 eavr25.c:201
#: eavr3.c:201 eavr31.c:201 eavr35.c:201 eavr4.c:201 eavr5.c:201 eavr51.c:201
#: eavr6.c:201 eavrtiny.c:201 eavrxmega1.c:201 eavrxmega2.c:201
#: eavrxmega3.c:201 eavrxmega4.c:201 eavrxmega5.c:201 eavrxmega6.c:201
#: eavrxmega7.c:201 eelf32metag.c:300 eelf64lppc.c:631 eelf64lppc_fbsd.c:631
#: eelf64ppc.c:631 eelf64ppc_fbsd.c:631 ehppaelf.c:332 ehppalinux.c:332
#: ehppanbsd.c:332 ehppaobsd.c:332 em68hc11elf.c:321 em68hc11elfb.c:321
#: em68hc12elf.c:321 em68hc12elfb.c:321 enios2elf.c:318 enios2linux.c:318
msgid "%X%P: can not build stubs: %E\n"
msgstr ""

#. The arm backend needs special fields in the output hash structure.
#. These will only be created if the output format is an arm format,
#. hence we do not support linking and changing output formats at the
#. same time.  Use a link followed by objcopy to change output formats.
#. The RISC-V backend needs special fields in the output hash structure.
#. These will only be created if the output format is a RISC-V format,
#. hence we do not support linking and changing output formats at the
#. same time.  Use a link followed by objcopy to change output formats.
#. The arm backend needs special fields in the output hash structure.
#. These will only be created if the output format is an arm format,
#. hence we do not support linking and changing output formats at the
#. same time.  Use a link followed by objcopy to change output formats.
#. Check the output target is nds32.
#. The score backend needs special fields in the output hash structure.
#. These will only be created if the output format is an score format,
#. hence we do not support linking and changing output formats at the
#. same time.  Use a link followed by objcopy to change output formats.
#. The arm backend needs special fields in the output hash structure.
#. These will only be created if the output format is an arm format,
#. hence we do not support linking and changing output formats at the
#. same time.  Use a link followed by objcopy to change output formats.
#. The V850 backend needs special fields in the output hash structure.
#. These will only be created if the output format is an arm format,
#. hence we do not support linking and changing output formats at the
#. same time.  Use a link followed by objcopy to change output formats.
#: eaarch64cloudabi.c:334 eaarch64cloudabib.c:334 eaarch64elf.c:333
#: eaarch64elf32.c:333 eaarch64elf32b.c:333 eaarch64elfb.c:333
#: eaarch64fbsd.c:334 eaarch64fbsdb.c:334 eaarch64linux.c:334
#: eaarch64linux32.c:334 eaarch64linux32b.c:334 eaarch64linuxb.c:334
#: earm_wince_pe.c:1426 earmelf.c:540 earmelf_fbsd.c:540 earmelf_fuchsia.c:541
#: earmelf_linux.c:541 earmelf_linux_eabi.c:541 earmelf_linux_fdpiceabi.c:541
#: earmelf_nacl.c:541 earmelf_nbsd.c:540 earmelf_phoenix.c:541
#: earmelf_vxworks.c:540 earmelfb.c:540 earmelfb_fbsd.c:540
#: earmelfb_fuchsia.c:541 earmelfb_linux.c:541 earmelfb_linux_eabi.c:541
#: earmelfb_linux_fdpiceabi.c:541 earmelfb_nacl.c:541 earmelfb_nbsd.c:540
#: earmnto.c:540 earmpe.c:1426 earmsymbian.c:540 eavr1.c:142 eavr2.c:142
#: eavr25.c:142 eavr3.c:142 eavr31.c:142 eavr35.c:142 eavr4.c:142 eavr5.c:142
#: eavr51.c:142 eavr6.c:142 eavrtiny.c:142 eavrxmega1.c:142 eavrxmega2.c:142
#: eavrxmega3.c:142 eavrxmega4.c:142 eavrxmega5.c:142 eavrxmega6.c:142
#: eavrxmega7.c:142 eelf32lriscv.c:110 eelf32lriscv_ilp32.c:110
#: eelf32lriscv_ilp32f.c:110 eelf64lriscv.c:110 eelf64lriscv_lp64.c:110
#: eelf64lriscv_lp64f.c:110 ei386pe.c:1426 ei386pe_posix.c:1426 emcorepe.c:1426
#: ends32belf.c:74 ends32belf16m.c:74 ends32belf_linux.c:74 ends32elf.c:74
#: ends32elf16m.c:74 ends32elf_linux.c:74 escore3_elf.c:75 escore7_elf.c:75
#: eshpe.c:1426 ev850.c:91 ev850_rh850.c:91
msgid "%F%P: error: cannot change output format whilst linking %s binaries\n"
msgstr ""

#: eaarch64cloudabi.c:570 eaarch64cloudabib.c:570 eaarch64elf.c:569
#: eaarch64elf32.c:569 eaarch64elf32b.c:569 eaarch64elfb.c:569
#: eaarch64fbsd.c:570 eaarch64fbsdb.c:570 eaarch64linux.c:570
#: eaarch64linux32.c:570 eaarch64linux32b.c:570 eaarch64linuxb.c:570
#: earcelf.c:202 earclinux.c:258 earclinux_nps.c:258 earcv2elf.c:186
#: earcv2elfx.c:186 earmelf.c:812 earmelf_fbsd.c:812 earmelf_fuchsia.c:813
#: earmelf_linux.c:813 earmelf_linux_eabi.c:813 earmelf_linux_fdpiceabi.c:813
#: earmelf_nacl.c:813 earmelf_nbsd.c:812 earmelf_phoenix.c:813
#: earmelf_vxworks.c:848 earmelfb.c:812 earmelfb_fbsd.c:812
#: earmelfb_fuchsia.c:813 earmelfb_linux.c:813 earmelfb_linux_eabi.c:813
#: earmelfb_linux_fdpiceabi.c:813 earmelfb_nacl.c:813 earmelfb_nbsd.c:812
#: earmnto.c:787 earmsymbian.c:812 eavr1.c:409 eavr2.c:409 eavr25.c:409
#: eavr3.c:409 eavr31.c:409 eavr35.c:409 eavr4.c:409 eavr5.c:409 eavr51.c:409
#: eavr6.c:409 eavrtiny.c:409 eavrxmega1.c:409 eavrxmega2.c:409
#: eavrxmega3.c:409 eavrxmega4.c:409 eavrxmega5.c:409 eavrxmega6.c:409
#: eavrxmega7.c:409 ecriself.c:201 ecrislinux.c:233 ecskyelf.c:445
#: ecskyelf_linux.c:502 ed10velf.c:186 eelf32_sparc.c:258
#: eelf32_sparc_sol2.c:389 eelf32_sparc_vxworks.c:295 eelf32_spu.c:919
#: eelf32_tic6x_be.c:369 eelf32_tic6x_elf_be.c:369 eelf32_tic6x_elf_le.c:369
#: eelf32_tic6x_le.c:369 eelf32_tic6x_linux_be.c:369
#: eelf32_tic6x_linux_le.c:369 eelf32_x86_64.c:5195 eelf32am33lin.c:232
#: eelf32b4300.c:473 eelf32bfin.c:250 eelf32bfinfd.c:275 eelf32bmip.c:473
#: eelf32bmipn32.c:487 eelf32bsmip.c:487 eelf32btsmip.c:473
#: eelf32btsmip_fbsd.c:473 eelf32btsmipn32.c:473 eelf32btsmipn32_fbsd.c:473
#: eelf32cr16.c:336 eelf32crx.c:223 eelf32ebmip.c:473 eelf32ebmipvxworks.c:508
#: eelf32elmip.c:473 eelf32elmipvxworks.c:508 eelf32epiphany.c:201
#: eelf32epiphany_4x4.c:188 eelf32frvfd.c:257 eelf32ip2k.c:201
#: eelf32l4300.c:473 eelf32lm32.c:201 eelf32lm32fd.c:257 eelf32lmip.c:473
#: eelf32lppc.c:521 eelf32lppclinux.c:521 eelf32lppcnto.c:521
#: eelf32lppcsim.c:521 eelf32lr5900.c:442 eelf32lr5900n32.c:441
#: eelf32lriscv.c:312 eelf32lriscv_ilp32.c:312 eelf32lriscv_ilp32f.c:312
#: eelf32lsmip.c:473 eelf32ltsmip.c:473 eelf32ltsmip_fbsd.c:473
#: eelf32ltsmipn32.c:473 eelf32ltsmipn32_fbsd.c:473 eelf32m32c.c:212
#: eelf32mb_linux.c:258 eelf32mbel_linux.c:258 eelf32mcore.c:207
#: eelf32mep.c:186 eelf32metag.c:507 eelf32microblaze.c:186
#: eelf32microblazeel.c:186 eelf32mipswindiss.c:416 eelf32moxie.c:201
#: eelf32or1k.c:202 eelf32or1k_linux.c:258 eelf32ppc.c:521 eelf32ppc_fbsd.c:521
#: eelf32ppclinux.c:521 eelf32ppcnto.c:521 eelf32ppcsim.c:521
#: eelf32ppcvxworks.c:495 eelf32ppcwindiss.c:521 eelf32rl78.c:201
#: eelf32rx.c:229 eelf32rx_linux.c:214 eelf32tilegx.c:258 eelf32tilegx_be.c:258
#: eelf32tilepro.c:258 eelf32vax.c:232 eelf32visium.c:186 eelf32xc16x.c:186
#: eelf32xc16xl.c:186 eelf32xc16xs.c:186 eelf32xstormy16.c:197
#: eelf32xtensa.c:2179 eelf32z80.c:213 eelf64_aix.c:232 eelf64_ia64.c:289
#: eelf64_ia64_fbsd.c:289 eelf64_s390.c:328 eelf64_sparc.c:258
#: eelf64_sparc_fbsd.c:258 eelf64_sparc_sol2.c:389 eelf64alpha.c:351
#: eelf64alpha_fbsd.c:351 eelf64alpha_nbsd.c:351 eelf64bmip.c:487
#: eelf64bpf.c:186 eelf64btsmip.c:473 eelf64btsmip_fbsd.c:473 eelf64hppa.c:202
#: eelf64lppc.c:970 eelf64lppc_fbsd.c:970 eelf64lriscv.c:312
#: eelf64lriscv_lp64.c:312 eelf64lriscv_lp64f.c:312 eelf64ltsmip.c:473
#: eelf64ltsmip_fbsd.c:473 eelf64mmix.c:4009 eelf64ppc.c:970
#: eelf64ppc_fbsd.c:970 eelf64rdos.c:283 eelf64tilegx.c:258
#: eelf64tilegx_be.c:258 eelf_i386.c:4817 eelf_i386_be.c:256
#: eelf_i386_fbsd.c:292 eelf_i386_ldso.c:267 eelf_i386_sol2.c:423
#: eelf_i386_vxworks.c:319 eelf_iamcu.c:4795 eelf_k1om.c:5151
#: eelf_k1om_fbsd.c:5131 eelf_l1om.c:5151 eelf_l1om_fbsd.c:5131 eelf_s390.c:258
#: eelf_x86_64.c:5195 eelf_x86_64_cloudabi.c:292 eelf_x86_64_fbsd.c:292
#: eelf_x86_64_sol2.c:423 eh8300elf.c:201 eh8300elf_linux.c:201
#: eh8300helf.c:201 eh8300helf_linux.c:201 eh8300hnelf.c:201 eh8300self.c:201
#: eh8300self_linux.c:201 eh8300snelf.c:201 eh8300sxelf.c:201
#: eh8300sxelf_linux.c:201 eh8300sxnelf.c:201 ehppa64linux.c:232 ehppaelf.c:469
#: ehppalinux.c:541 ehppanbsd.c:541 ehppaobsd.c:541 ei386lynx.c:247
#: ei386moss.c:247 ei386nto.c:247 em32relf.c:201 em32relf_linux.c:257
#: em32rlelf.c:201 em32rlelf_linux.c:257 em68hc11elf.c:471 em68hc11elfb.c:471
#: em68hc12elf.c:471 em68hc12elfb.c:471 em68kelf.c:415 em68kelfnbsd.c:415
#: emn10300.c:232 ends32belf.c:322 ends32belf16m.c:322 ends32belf_linux.c:345
#: ends32elf.c:322 ends32elf16m.c:322 ends32elf_linux.c:345 enios2elf.c:488
#: enios2linux.c:519 epruelf.c:207 escore3_elf.c:253 escore7_elf.c:253
#: eshelf.c:232 eshelf_fd.c:258 eshelf_linux.c:258 eshelf_nbsd.c:232
#: eshelf_nto.c:232 eshelf_uclinux.c:232 eshelf_vxworks.c:269 eshlelf.c:232
#: eshlelf_fd.c:258 eshlelf_linux.c:258 eshlelf_nbsd.c:232 eshlelf_nto.c:232
#: eshlelf_vxworks.c:269 ev850.c:233 ev850_rh850.c:233
msgid "%F%P: invalid --compress-debug-sections option: `%s'\n"
msgstr ""

#: eaarch64cloudabi.c:621 eaarch64cloudabib.c:621 eaarch64elf.c:620
#: eaarch64elf32.c:620 eaarch64elf32b.c:620 eaarch64elfb.c:620
#: eaarch64fbsd.c:621 eaarch64fbsdb.c:621 eaarch64linux.c:621
#: eaarch64linux32.c:621 eaarch64linux32b.c:621 eaarch64linuxb.c:621
#: earcelf.c:253 earclinux.c:309 earclinux_nps.c:309 earmelf.c:863
#: earmelf_fbsd.c:863 earmelf_fuchsia.c:864 earmelf_linux.c:864
#: earmelf_linux_eabi.c:864 earmelf_linux_fdpiceabi.c:864 earmelf_nacl.c:864
#: earmelf_nbsd.c:863 earmelf_phoenix.c:864 earmelf_vxworks.c:899
#: earmelfb.c:863 earmelfb_fbsd.c:863 earmelfb_fuchsia.c:864
#: earmelfb_linux.c:864 earmelfb_linux_eabi.c:864
#: earmelfb_linux_fdpiceabi.c:864 earmelfb_nacl.c:864 earmelfb_nbsd.c:863
#: earmnto.c:838 earmsymbian.c:863 ecrislinux.c:284 ecskyelf_linux.c:553
#: eelf32_sparc.c:309 eelf32_sparc_sol2.c:440 eelf32_sparc_vxworks.c:346
#: eelf32_tic6x_be.c:420 eelf32_tic6x_elf_be.c:420 eelf32_tic6x_elf_le.c:420
#: eelf32_tic6x_le.c:420 eelf32_tic6x_linux_be.c:420
#: eelf32_tic6x_linux_le.c:420 eelf32_x86_64.c:5246 eelf32am33lin.c:283
#: eelf32b4300.c:524 eelf32bfin.c:301 eelf32bfinfd.c:326 eelf32bmip.c:524
#: eelf32bmipn32.c:538 eelf32bsmip.c:538 eelf32btsmip.c:524
#: eelf32btsmip_fbsd.c:524 eelf32btsmipn32.c:524 eelf32btsmipn32_fbsd.c:524
#: eelf32ebmip.c:524 eelf32ebmipvxworks.c:559 eelf32elmip.c:524
#: eelf32elmipvxworks.c:559 eelf32frvfd.c:308 eelf32l4300.c:524
#: eelf32lm32fd.c:308 eelf32lmip.c:524 eelf32lppc.c:572 eelf32lppclinux.c:572
#: eelf32lppcnto.c:572 eelf32lppcsim.c:572 eelf32lriscv.c:363
#: eelf32lriscv_ilp32.c:363 eelf32lriscv_ilp32f.c:363 eelf32lsmip.c:524
#: eelf32ltsmip.c:524 eelf32ltsmip_fbsd.c:524 eelf32ltsmipn32.c:524
#: eelf32ltsmipn32_fbsd.c:524 eelf32mb_linux.c:309 eelf32mbel_linux.c:309
#: eelf32metag.c:558 eelf32or1k_linux.c:309 eelf32ppc.c:572
#: eelf32ppc_fbsd.c:572 eelf32ppclinux.c:572 eelf32ppcnto.c:572
#: eelf32ppcsim.c:572 eelf32ppcvxworks.c:546 eelf32ppcwindiss.c:572
#: eelf32tilegx.c:309 eelf32tilegx_be.c:309 eelf32tilepro.c:309 eelf32vax.c:283
#: eelf32xtensa.c:2230 eelf64_aix.c:283 eelf64_ia64.c:340
#: eelf64_ia64_fbsd.c:340 eelf64_s390.c:379 eelf64_sparc.c:309
#: eelf64_sparc_fbsd.c:309 eelf64_sparc_sol2.c:440 eelf64alpha.c:402
#: eelf64alpha_fbsd.c:402 eelf64alpha_nbsd.c:402 eelf64bmip.c:538
#: eelf64btsmip.c:524 eelf64btsmip_fbsd.c:524 eelf64hppa.c:253
#: eelf64lppc.c:1021 eelf64lppc_fbsd.c:1021 eelf64lriscv.c:363
#: eelf64lriscv_lp64.c:363 eelf64lriscv_lp64f.c:363 eelf64ltsmip.c:524
#: eelf64ltsmip_fbsd.c:524 eelf64mmix.c:4060 eelf64ppc.c:1021
#: eelf64ppc_fbsd.c:1021 eelf64rdos.c:334 eelf64tilegx.c:309
#: eelf64tilegx_be.c:309 eelf_i386.c:4868 eelf_i386_be.c:307
#: eelf_i386_fbsd.c:343 eelf_i386_ldso.c:318 eelf_i386_sol2.c:474
#: eelf_i386_vxworks.c:370 eelf_iamcu.c:4846 eelf_k1om.c:5202
#: eelf_k1om_fbsd.c:5182 eelf_l1om.c:5202 eelf_l1om_fbsd.c:5182 eelf_s390.c:309
#: eelf_x86_64.c:5246 eelf_x86_64_cloudabi.c:343 eelf_x86_64_fbsd.c:343
#: eelf_x86_64_sol2.c:474 ehppa64linux.c:283 ehppalinux.c:592 ehppanbsd.c:592
#: ehppaobsd.c:592 ei386lynx.c:298 ei386moss.c:298 ei386nto.c:298
#: em32relf_linux.c:308 em32rlelf_linux.c:308 em68kelf.c:466 em68kelfnbsd.c:466
#: emn10300.c:283 ends32belf_linux.c:396 ends32elf_linux.c:396
#: enios2linux.c:570 escore3_elf.c:304 escore7_elf.c:304 eshelf.c:283
#: eshelf_fd.c:309 eshelf_linux.c:309 eshelf_nbsd.c:283 eshelf_nto.c:283
#: eshelf_uclinux.c:283 eshelf_vxworks.c:320 eshlelf.c:283 eshlelf_fd.c:309
#: eshlelf_linux.c:309 eshlelf_nbsd.c:283 eshlelf_nto.c:283
#: eshlelf_vxworks.c:320
msgid "%F%P: invalid hash style `%s'\n"
msgstr ""

#: eaarch64cloudabi.c:637 eaarch64cloudabib.c:637 eaarch64elf.c:636
#: eaarch64elf32.c:636 eaarch64elf32b.c:636 eaarch64elfb.c:636
#: eaarch64fbsd.c:637 eaarch64fbsdb.c:637 eaarch64linux.c:637
#: eaarch64linux32.c:637 eaarch64linux32b.c:637 eaarch64linuxb.c:637
#: earcelf.c:269 earclinux.c:325 earclinux_nps.c:325 earcv2elf.c:202
#: earcv2elfx.c:202 earmelf.c:879 earmelf_fbsd.c:879 earmelf_fuchsia.c:880
#: earmelf_linux.c:880 earmelf_linux_eabi.c:880 earmelf_linux_fdpiceabi.c:880
#: earmelf_nacl.c:880 earmelf_nbsd.c:879 earmelf_phoenix.c:880
#: earmelf_vxworks.c:915 earmelfb.c:879 earmelfb_fbsd.c:879
#: earmelfb_fuchsia.c:880 earmelfb_linux.c:880 earmelfb_linux_eabi.c:880
#: earmelfb_linux_fdpiceabi.c:880 earmelfb_nacl.c:880 earmelfb_nbsd.c:879
#: earmnto.c:854 earmsymbian.c:879 eavr1.c:425 eavr2.c:425 eavr25.c:425
#: eavr3.c:425 eavr31.c:425 eavr35.c:425 eavr4.c:425 eavr5.c:425 eavr51.c:425
#: eavr6.c:425 eavrtiny.c:425 eavrxmega1.c:425 eavrxmega2.c:425
#: eavrxmega3.c:425 eavrxmega4.c:425 eavrxmega5.c:425 eavrxmega6.c:425
#: eavrxmega7.c:425 ecriself.c:217 ecrislinux.c:300 ecskyelf.c:461
#: ecskyelf_linux.c:569 ed10velf.c:202 eelf32_sparc.c:325
#: eelf32_sparc_sol2.c:456 eelf32_sparc_vxworks.c:362 eelf32_spu.c:935
#: eelf32_tic6x_be.c:436 eelf32_tic6x_elf_be.c:436 eelf32_tic6x_elf_le.c:436
#: eelf32_tic6x_le.c:436 eelf32_tic6x_linux_be.c:436
#: eelf32_tic6x_linux_le.c:436 eelf32_x86_64.c:5262 eelf32am33lin.c:299
#: eelf32b4300.c:540 eelf32bfin.c:317 eelf32bfinfd.c:342 eelf32bmip.c:540
#: eelf32bmipn32.c:554 eelf32bsmip.c:554 eelf32btsmip.c:540
#: eelf32btsmip_fbsd.c:540 eelf32btsmipn32.c:540 eelf32btsmipn32_fbsd.c:540
#: eelf32cr16.c:352 eelf32crx.c:239 eelf32ebmip.c:540 eelf32ebmipvxworks.c:575
#: eelf32elmip.c:540 eelf32elmipvxworks.c:575 eelf32epiphany.c:217
#: eelf32epiphany_4x4.c:204 eelf32frvfd.c:324 eelf32ip2k.c:217
#: eelf32l4300.c:540 eelf32lm32.c:217 eelf32lm32fd.c:324 eelf32lmip.c:540
#: eelf32lppc.c:588 eelf32lppclinux.c:588 eelf32lppcnto.c:588
#: eelf32lppcsim.c:588 eelf32lr5900.c:458 eelf32lr5900n32.c:457
#: eelf32lriscv.c:379 eelf32lriscv_ilp32.c:379 eelf32lriscv_ilp32f.c:379
#: eelf32lsmip.c:540 eelf32ltsmip.c:540 eelf32ltsmip_fbsd.c:540
#: eelf32ltsmipn32.c:540 eelf32ltsmipn32_fbsd.c:540 eelf32m32c.c:228
#: eelf32mb_linux.c:325 eelf32mbel_linux.c:325 eelf32mcore.c:223
#: eelf32mep.c:202 eelf32metag.c:574 eelf32microblaze.c:202
#: eelf32microblazeel.c:202 eelf32mipswindiss.c:432 eelf32moxie.c:217
#: eelf32or1k.c:218 eelf32or1k_linux.c:325 eelf32ppc.c:588 eelf32ppc_fbsd.c:588
#: eelf32ppclinux.c:588 eelf32ppcnto.c:588 eelf32ppcsim.c:588
#: eelf32ppcvxworks.c:562 eelf32ppcwindiss.c:588 eelf32rl78.c:217
#: eelf32rx.c:245 eelf32rx_linux.c:230 eelf32tilegx.c:325 eelf32tilegx_be.c:325
#: eelf32tilepro.c:325 eelf32vax.c:299 eelf32visium.c:202 eelf32xc16x.c:202
#: eelf32xc16xl.c:202 eelf32xc16xs.c:202 eelf32xstormy16.c:213
#: eelf32xtensa.c:2246 eelf32z80.c:229 eelf64_aix.c:299 eelf64_ia64.c:356
#: eelf64_ia64_fbsd.c:356 eelf64_s390.c:395 eelf64_sparc.c:325
#: eelf64_sparc_fbsd.c:325 eelf64_sparc_sol2.c:456 eelf64alpha.c:418
#: eelf64alpha_fbsd.c:418 eelf64alpha_nbsd.c:418 eelf64bmip.c:554
#: eelf64bpf.c:202 eelf64btsmip.c:540 eelf64btsmip_fbsd.c:540 eelf64hppa.c:269
#: eelf64lppc.c:1037 eelf64lppc_fbsd.c:1037 eelf64lriscv.c:379
#: eelf64lriscv_lp64.c:379 eelf64lriscv_lp64f.c:379 eelf64ltsmip.c:540
#: eelf64ltsmip_fbsd.c:540 eelf64mmix.c:4076 eelf64ppc.c:1037
#: eelf64ppc_fbsd.c:1037 eelf64rdos.c:350 eelf64tilegx.c:325
#: eelf64tilegx_be.c:325 eelf_i386.c:4884 eelf_i386_be.c:323
#: eelf_i386_fbsd.c:359 eelf_i386_ldso.c:334 eelf_i386_sol2.c:490
#: eelf_i386_vxworks.c:386 eelf_iamcu.c:4862 eelf_k1om.c:5218
#: eelf_k1om_fbsd.c:5198 eelf_l1om.c:5218 eelf_l1om_fbsd.c:5198 eelf_s390.c:325
#: eelf_x86_64.c:5262 eelf_x86_64_cloudabi.c:359 eelf_x86_64_fbsd.c:359
#: eelf_x86_64_sol2.c:490 eh8300elf.c:217 eh8300elf_linux.c:217
#: eh8300helf.c:217 eh8300helf_linux.c:217 eh8300hnelf.c:217 eh8300self.c:217
#: eh8300self_linux.c:217 eh8300snelf.c:217 eh8300sxelf.c:217
#: eh8300sxelf_linux.c:217 eh8300sxnelf.c:217 ehppa64linux.c:299 ehppaelf.c:485
#: ehppalinux.c:608 ehppanbsd.c:608 ehppaobsd.c:608 ei386lynx.c:314
#: ei386moss.c:314 ei386nto.c:314 em32relf.c:217 em32relf_linux.c:324
#: em32rlelf.c:217 em32rlelf_linux.c:324 em68hc11elf.c:487 em68hc11elfb.c:487
#: em68hc12elf.c:487 em68hc12elfb.c:487 em68kelf.c:482 em68kelfnbsd.c:482
#: emn10300.c:299 ends32belf.c:338 ends32belf16m.c:338 ends32belf_linux.c:412
#: ends32elf.c:338 ends32elf16m.c:338 ends32elf_linux.c:412 enios2elf.c:504
#: enios2linux.c:586 epruelf.c:223 escore3_elf.c:320 escore7_elf.c:320
#: eshelf.c:299 eshelf_fd.c:325 eshelf_linux.c:325 eshelf_nbsd.c:299
#: eshelf_nto.c:299 eshelf_uclinux.c:299 eshelf_vxworks.c:336 eshlelf.c:299
#: eshlelf_fd.c:325 eshlelf_linux.c:325 eshlelf_nbsd.c:299 eshlelf_nto.c:299
#: eshlelf_vxworks.c:336 ev850.c:249 ev850_rh850.c:249
msgid "%F%P: invalid maximum page size `%s'\n"
msgstr ""

#: eaarch64cloudabi.c:646 eaarch64cloudabib.c:646 eaarch64elf.c:645
#: eaarch64elf32.c:645 eaarch64elf32b.c:645 eaarch64elfb.c:645
#: eaarch64fbsd.c:646 eaarch64fbsdb.c:646 eaarch64linux.c:646
#: eaarch64linux32.c:646 eaarch64linux32b.c:646 eaarch64linuxb.c:646
#: earcelf.c:278 earclinux.c:334 earclinux_nps.c:334 earcv2elf.c:211
#: earcv2elfx.c:211 earmelf.c:888 earmelf_fbsd.c:888 earmelf_fuchsia.c:889
#: earmelf_linux.c:889 earmelf_linux_eabi.c:889 earmelf_linux_fdpiceabi.c:889
#: earmelf_nacl.c:889 earmelf_nbsd.c:888 earmelf_phoenix.c:889
#: earmelf_vxworks.c:924 earmelfb.c:888 earmelfb_fbsd.c:888
#: earmelfb_fuchsia.c:889 earmelfb_linux.c:889 earmelfb_linux_eabi.c:889
#: earmelfb_linux_fdpiceabi.c:889 earmelfb_nacl.c:889 earmelfb_nbsd.c:888
#: earmnto.c:863 earmsymbian.c:888 eavr1.c:434 eavr2.c:434 eavr25.c:434
#: eavr3.c:434 eavr31.c:434 eavr35.c:434 eavr4.c:434 eavr5.c:434 eavr51.c:434
#: eavr6.c:434 eavrtiny.c:434 eavrxmega1.c:434 eavrxmega2.c:434
#: eavrxmega3.c:434 eavrxmega4.c:434 eavrxmega5.c:434 eavrxmega6.c:434
#: eavrxmega7.c:434 ecriself.c:226 ecrislinux.c:309 ecskyelf.c:470
#: ecskyelf_linux.c:578 ed10velf.c:211 eelf32_sparc.c:334
#: eelf32_sparc_sol2.c:465 eelf32_sparc_vxworks.c:371 eelf32_spu.c:944
#: eelf32_tic6x_be.c:445 eelf32_tic6x_elf_be.c:445 eelf32_tic6x_elf_le.c:445
#: eelf32_tic6x_le.c:445 eelf32_tic6x_linux_be.c:445
#: eelf32_tic6x_linux_le.c:445 eelf32_x86_64.c:5271 eelf32am33lin.c:308
#: eelf32b4300.c:549 eelf32bfin.c:326 eelf32bfinfd.c:351 eelf32bmip.c:549
#: eelf32bmipn32.c:563 eelf32bsmip.c:563 eelf32btsmip.c:549
#: eelf32btsmip_fbsd.c:549 eelf32btsmipn32.c:549 eelf32btsmipn32_fbsd.c:549
#: eelf32cr16.c:361 eelf32crx.c:248 eelf32ebmip.c:549 eelf32ebmipvxworks.c:584
#: eelf32elmip.c:549 eelf32elmipvxworks.c:584 eelf32epiphany.c:226
#: eelf32epiphany_4x4.c:213 eelf32frvfd.c:333 eelf32ip2k.c:226
#: eelf32l4300.c:549 eelf32lm32.c:226 eelf32lm32fd.c:333 eelf32lmip.c:549
#: eelf32lppc.c:597 eelf32lppclinux.c:597 eelf32lppcnto.c:597
#: eelf32lppcsim.c:597 eelf32lr5900.c:467 eelf32lr5900n32.c:466
#: eelf32lriscv.c:388 eelf32lriscv_ilp32.c:388 eelf32lriscv_ilp32f.c:388
#: eelf32lsmip.c:549 eelf32ltsmip.c:549 eelf32ltsmip_fbsd.c:549
#: eelf32ltsmipn32.c:549 eelf32ltsmipn32_fbsd.c:549 eelf32m32c.c:237
#: eelf32mb_linux.c:334 eelf32mbel_linux.c:334 eelf32mcore.c:232
#: eelf32mep.c:211 eelf32metag.c:583 eelf32microblaze.c:211
#: eelf32microblazeel.c:211 eelf32mipswindiss.c:441 eelf32moxie.c:226
#: eelf32or1k.c:227 eelf32or1k_linux.c:334 eelf32ppc.c:597 eelf32ppc_fbsd.c:597
#: eelf32ppclinux.c:597 eelf32ppcnto.c:597 eelf32ppcsim.c:597
#: eelf32ppcvxworks.c:571 eelf32ppcwindiss.c:597 eelf32rl78.c:226
#: eelf32rx.c:254 eelf32rx_linux.c:239 eelf32tilegx.c:334 eelf32tilegx_be.c:334
#: eelf32tilepro.c:334 eelf32vax.c:308 eelf32visium.c:211 eelf32xc16x.c:211
#: eelf32xc16xl.c:211 eelf32xc16xs.c:211 eelf32xstormy16.c:222
#: eelf32xtensa.c:2255 eelf32z80.c:238 eelf64_aix.c:308 eelf64_ia64.c:365
#: eelf64_ia64_fbsd.c:365 eelf64_s390.c:404 eelf64_sparc.c:334
#: eelf64_sparc_fbsd.c:334 eelf64_sparc_sol2.c:465 eelf64alpha.c:427
#: eelf64alpha_fbsd.c:427 eelf64alpha_nbsd.c:427 eelf64bmip.c:563
#: eelf64bpf.c:211 eelf64btsmip.c:549 eelf64btsmip_fbsd.c:549 eelf64hppa.c:278
#: eelf64lppc.c:1046 eelf64lppc_fbsd.c:1046 eelf64lriscv.c:388
#: eelf64lriscv_lp64.c:388 eelf64lriscv_lp64f.c:388 eelf64ltsmip.c:549
#: eelf64ltsmip_fbsd.c:549 eelf64mmix.c:4085 eelf64ppc.c:1046
#: eelf64ppc_fbsd.c:1046 eelf64rdos.c:359 eelf64tilegx.c:334
#: eelf64tilegx_be.c:334 eelf_i386.c:4893 eelf_i386_be.c:332
#: eelf_i386_fbsd.c:368 eelf_i386_ldso.c:343 eelf_i386_sol2.c:499
#: eelf_i386_vxworks.c:395 eelf_iamcu.c:4871 eelf_k1om.c:5227
#: eelf_k1om_fbsd.c:5207 eelf_l1om.c:5227 eelf_l1om_fbsd.c:5207 eelf_s390.c:334
#: eelf_x86_64.c:5271 eelf_x86_64_cloudabi.c:368 eelf_x86_64_fbsd.c:368
#: eelf_x86_64_sol2.c:499 eh8300elf.c:226 eh8300elf_linux.c:226
#: eh8300helf.c:226 eh8300helf_linux.c:226 eh8300hnelf.c:226 eh8300self.c:226
#: eh8300self_linux.c:226 eh8300snelf.c:226 eh8300sxelf.c:226
#: eh8300sxelf_linux.c:226 eh8300sxnelf.c:226 ehppa64linux.c:308 ehppaelf.c:494
#: ehppalinux.c:617 ehppanbsd.c:617 ehppaobsd.c:617 ei386lynx.c:323
#: ei386moss.c:323 ei386nto.c:323 em32relf.c:226 em32relf_linux.c:333
#: em32rlelf.c:226 em32rlelf_linux.c:333 em68hc11elf.c:496 em68hc11elfb.c:496
#: em68hc12elf.c:496 em68hc12elfb.c:496 em68kelf.c:491 em68kelfnbsd.c:491
#: emn10300.c:308 ends32belf.c:347 ends32belf16m.c:347 ends32belf_linux.c:421
#: ends32elf.c:347 ends32elf16m.c:347 ends32elf_linux.c:421 enios2elf.c:513
#: enios2linux.c:595 epruelf.c:232 escore3_elf.c:329 escore7_elf.c:329
#: eshelf.c:308 eshelf_fd.c:334 eshelf_linux.c:334 eshelf_nbsd.c:308
#: eshelf_nto.c:308 eshelf_uclinux.c:308 eshelf_vxworks.c:345 eshlelf.c:308
#: eshlelf_fd.c:334 eshlelf_linux.c:334 eshlelf_nbsd.c:308 eshlelf_nto.c:308
#: eshlelf_vxworks.c:345 ev850.c:258 ev850_rh850.c:258
msgid "%F%P: invalid common page size `%s'\n"
msgstr ""

#: eaarch64cloudabi.c:654 eaarch64cloudabib.c:654 eaarch64elf.c:653
#: eaarch64elf32.c:653 eaarch64elf32b.c:653 eaarch64elfb.c:653
#: eaarch64fbsd.c:654 eaarch64fbsdb.c:654 eaarch64linux.c:654
#: eaarch64linux32.c:654 eaarch64linux32b.c:654 eaarch64linuxb.c:654
#: earcelf.c:286 earclinux.c:342 earclinux_nps.c:342 earcv2elf.c:219
#: earcv2elfx.c:219 earmelf.c:896 earmelf_fbsd.c:896 earmelf_fuchsia.c:897
#: earmelf_linux.c:897 earmelf_linux_eabi.c:897 earmelf_linux_fdpiceabi.c:897
#: earmelf_nacl.c:897 earmelf_nbsd.c:896 earmelf_phoenix.c:897
#: earmelf_vxworks.c:932 earmelfb.c:896 earmelfb_fbsd.c:896
#: earmelfb_fuchsia.c:897 earmelfb_linux.c:897 earmelfb_linux_eabi.c:897
#: earmelfb_linux_fdpiceabi.c:897 earmelfb_nacl.c:897 earmelfb_nbsd.c:896
#: earmnto.c:871 earmsymbian.c:896 eavr1.c:442 eavr2.c:442 eavr25.c:442
#: eavr3.c:442 eavr31.c:442 eavr35.c:442 eavr4.c:442 eavr5.c:442 eavr51.c:442
#: eavr6.c:442 eavrtiny.c:442 eavrxmega1.c:442 eavrxmega2.c:442
#: eavrxmega3.c:442 eavrxmega4.c:442 eavrxmega5.c:442 eavrxmega6.c:442
#: eavrxmega7.c:442 ecriself.c:234 ecrislinux.c:317 ecskyelf.c:478
#: ecskyelf_linux.c:586 ed10velf.c:219 eelf32_sparc.c:342
#: eelf32_sparc_sol2.c:473 eelf32_sparc_vxworks.c:379 eelf32_spu.c:952
#: eelf32_tic6x_be.c:453 eelf32_tic6x_elf_be.c:453 eelf32_tic6x_elf_le.c:453
#: eelf32_tic6x_le.c:453 eelf32_tic6x_linux_be.c:453
#: eelf32_tic6x_linux_le.c:453 eelf32_x86_64.c:5279 eelf32am33lin.c:316
#: eelf32b4300.c:557 eelf32bfin.c:334 eelf32bfinfd.c:359 eelf32bmip.c:557
#: eelf32bmipn32.c:571 eelf32bsmip.c:571 eelf32btsmip.c:557
#: eelf32btsmip_fbsd.c:557 eelf32btsmipn32.c:557 eelf32btsmipn32_fbsd.c:557
#: eelf32cr16.c:369 eelf32crx.c:256 eelf32ebmip.c:557 eelf32ebmipvxworks.c:592
#: eelf32elmip.c:557 eelf32elmipvxworks.c:592 eelf32epiphany.c:234
#: eelf32epiphany_4x4.c:221 eelf32frvfd.c:341 eelf32ip2k.c:234
#: eelf32l4300.c:557 eelf32lm32.c:234 eelf32lm32fd.c:341 eelf32lmip.c:557
#: eelf32lppc.c:605 eelf32lppclinux.c:605 eelf32lppcnto.c:605
#: eelf32lppcsim.c:605 eelf32lr5900.c:475 eelf32lr5900n32.c:474
#: eelf32lriscv.c:396 eelf32lriscv_ilp32.c:396 eelf32lriscv_ilp32f.c:396
#: eelf32lsmip.c:557 eelf32ltsmip.c:557 eelf32ltsmip_fbsd.c:557
#: eelf32ltsmipn32.c:557 eelf32ltsmipn32_fbsd.c:557 eelf32m32c.c:245
#: eelf32mb_linux.c:342 eelf32mbel_linux.c:342 eelf32mcore.c:240
#: eelf32mep.c:219 eelf32metag.c:591 eelf32microblaze.c:219
#: eelf32microblazeel.c:219 eelf32mipswindiss.c:449 eelf32moxie.c:234
#: eelf32or1k.c:235 eelf32or1k_linux.c:342 eelf32ppc.c:605 eelf32ppc_fbsd.c:605
#: eelf32ppclinux.c:605 eelf32ppcnto.c:605 eelf32ppcsim.c:605
#: eelf32ppcvxworks.c:579 eelf32ppcwindiss.c:605 eelf32rl78.c:234
#: eelf32rx.c:262 eelf32rx_linux.c:247 eelf32tilegx.c:342 eelf32tilegx_be.c:342
#: eelf32tilepro.c:342 eelf32vax.c:316 eelf32visium.c:219 eelf32xc16x.c:219
#: eelf32xc16xl.c:219 eelf32xc16xs.c:219 eelf32xstormy16.c:230
#: eelf32xtensa.c:2263 eelf32z80.c:246 eelf64_aix.c:316 eelf64_ia64.c:373
#: eelf64_ia64_fbsd.c:373 eelf64_s390.c:412 eelf64_sparc.c:342
#: eelf64_sparc_fbsd.c:342 eelf64_sparc_sol2.c:473 eelf64alpha.c:435
#: eelf64alpha_fbsd.c:435 eelf64alpha_nbsd.c:435 eelf64bmip.c:571
#: eelf64bpf.c:219 eelf64btsmip.c:557 eelf64btsmip_fbsd.c:557 eelf64hppa.c:286
#: eelf64lppc.c:1054 eelf64lppc_fbsd.c:1054 eelf64lriscv.c:396
#: eelf64lriscv_lp64.c:396 eelf64lriscv_lp64f.c:396 eelf64ltsmip.c:557
#: eelf64ltsmip_fbsd.c:557 eelf64mmix.c:4093 eelf64ppc.c:1054
#: eelf64ppc_fbsd.c:1054 eelf64rdos.c:367 eelf64tilegx.c:342
#: eelf64tilegx_be.c:342 eelf_i386.c:4901 eelf_i386_be.c:340
#: eelf_i386_fbsd.c:376 eelf_i386_ldso.c:351 eelf_i386_sol2.c:507
#: eelf_i386_vxworks.c:403 eelf_iamcu.c:4879 eelf_k1om.c:5235
#: eelf_k1om_fbsd.c:5215 eelf_l1om.c:5235 eelf_l1om_fbsd.c:5215 eelf_s390.c:342
#: eelf_x86_64.c:5279 eelf_x86_64_cloudabi.c:376 eelf_x86_64_fbsd.c:376
#: eelf_x86_64_sol2.c:507 eh8300elf.c:234 eh8300elf_linux.c:234
#: eh8300helf.c:234 eh8300helf_linux.c:234 eh8300hnelf.c:234 eh8300self.c:234
#: eh8300self_linux.c:234 eh8300snelf.c:234 eh8300sxelf.c:234
#: eh8300sxelf_linux.c:234 eh8300sxnelf.c:234 ehppa64linux.c:316 ehppaelf.c:502
#: ehppalinux.c:625 ehppanbsd.c:625 ehppaobsd.c:625 ei386lynx.c:331
#: ei386moss.c:331 ei386nto.c:331 em32relf.c:234 em32relf_linux.c:341
#: em32rlelf.c:234 em32rlelf_linux.c:341 em68hc11elf.c:504 em68hc11elfb.c:504
#: em68hc12elf.c:504 em68hc12elfb.c:504 em68kelf.c:499 em68kelfnbsd.c:499
#: emn10300.c:316 ends32belf.c:355 ends32belf16m.c:355 ends32belf_linux.c:429
#: ends32elf.c:355 ends32elf16m.c:355 ends32elf_linux.c:429 enios2elf.c:521
#: enios2linux.c:603 epruelf.c:240 escore3_elf.c:337 escore7_elf.c:337
#: eshelf.c:316 eshelf_fd.c:342 eshelf_linux.c:342 eshelf_nbsd.c:316
#: eshelf_nto.c:316 eshelf_uclinux.c:316 eshelf_vxworks.c:353 eshlelf.c:316
#: eshlelf_fd.c:342 eshlelf_linux.c:342 eshlelf_nbsd.c:316 eshlelf_nto.c:316
#: eshlelf_vxworks.c:353 ev850.c:266 ev850_rh850.c:266
msgid "%F%P: invalid stack size `%s'\n"
msgstr ""

#: eaarch64cloudabi.c:689 eaarch64cloudabib.c:689 eaarch64elf.c:688
#: eaarch64elf32.c:688 eaarch64elf32b.c:688 eaarch64elfb.c:688
#: eaarch64fbsd.c:689 eaarch64fbsdb.c:689 eaarch64linux.c:689
#: eaarch64linux32.c:689 eaarch64linux32b.c:689 eaarch64linuxb.c:689
#: earcelf.c:321 earclinux.c:377 earclinux_nps.c:377 earcv2elf.c:254
#: earcv2elfx.c:254 earmelf.c:931 earmelf_fbsd.c:931 earmelf_fuchsia.c:932
#: earmelf_linux.c:932 earmelf_linux_eabi.c:932 earmelf_linux_fdpiceabi.c:932
#: earmelf_nacl.c:932 earmelf_nbsd.c:931 earmelf_phoenix.c:932
#: earmelf_vxworks.c:967 earmelfb.c:931 earmelfb_fbsd.c:931
#: earmelfb_fuchsia.c:932 earmelfb_linux.c:932 earmelfb_linux_eabi.c:932
#: earmelfb_linux_fdpiceabi.c:932 earmelfb_nacl.c:932 earmelfb_nbsd.c:931
#: earmnto.c:906 earmsymbian.c:931 eavr1.c:477 eavr2.c:477 eavr25.c:477
#: eavr3.c:477 eavr31.c:477 eavr35.c:477 eavr4.c:477 eavr5.c:477 eavr51.c:477
#: eavr6.c:477 eavrtiny.c:477 eavrxmega1.c:477 eavrxmega2.c:477
#: eavrxmega3.c:477 eavrxmega4.c:477 eavrxmega5.c:477 eavrxmega6.c:477
#: eavrxmega7.c:477 ecriself.c:269 ecrislinux.c:352 ecskyelf.c:513
#: ecskyelf_linux.c:621 ed10velf.c:254 eelf32_sparc.c:377
#: eelf32_sparc_sol2.c:508 eelf32_sparc_vxworks.c:414 eelf32_spu.c:987
#: eelf32_tic6x_be.c:488 eelf32_tic6x_elf_be.c:488 eelf32_tic6x_elf_le.c:488
#: eelf32_tic6x_le.c:488 eelf32_tic6x_linux_be.c:488
#: eelf32_tic6x_linux_le.c:488 eelf32_x86_64.c:5314 eelf32am33lin.c:351
#: eelf32b4300.c:592 eelf32bfin.c:369 eelf32bfinfd.c:394 eelf32bmip.c:592
#: eelf32bmipn32.c:606 eelf32bsmip.c:606 eelf32btsmip.c:592
#: eelf32btsmip_fbsd.c:592 eelf32btsmipn32.c:592 eelf32btsmipn32_fbsd.c:592
#: eelf32cr16.c:404 eelf32crx.c:291 eelf32ebmip.c:592 eelf32ebmipvxworks.c:627
#: eelf32elmip.c:592 eelf32elmipvxworks.c:627 eelf32epiphany.c:269
#: eelf32epiphany_4x4.c:256 eelf32frvfd.c:376 eelf32ip2k.c:269
#: eelf32l4300.c:592 eelf32lm32.c:269 eelf32lm32fd.c:376 eelf32lmip.c:592
#: eelf32lppc.c:640 eelf32lppclinux.c:640 eelf32lppcnto.c:640
#: eelf32lppcsim.c:640 eelf32lr5900.c:510 eelf32lr5900n32.c:509
#: eelf32lriscv.c:431 eelf32lriscv_ilp32.c:431 eelf32lriscv_ilp32f.c:431
#: eelf32lsmip.c:592 eelf32ltsmip.c:592 eelf32ltsmip_fbsd.c:592
#: eelf32ltsmipn32.c:592 eelf32ltsmipn32_fbsd.c:592 eelf32m32c.c:280
#: eelf32mb_linux.c:377 eelf32mbel_linux.c:377 eelf32mcore.c:275
#: eelf32mep.c:254 eelf32metag.c:626 eelf32microblaze.c:254
#: eelf32microblazeel.c:254 eelf32mipswindiss.c:484 eelf32moxie.c:269
#: eelf32or1k.c:270 eelf32or1k_linux.c:377 eelf32ppc.c:640 eelf32ppc_fbsd.c:640
#: eelf32ppclinux.c:640 eelf32ppcnto.c:640 eelf32ppcsim.c:640
#: eelf32ppcvxworks.c:614 eelf32ppcwindiss.c:640 eelf32rl78.c:269
#: eelf32rx.c:297 eelf32rx_linux.c:282 eelf32tilegx.c:377 eelf32tilegx_be.c:377
#: eelf32tilepro.c:377 eelf32vax.c:351 eelf32visium.c:254 eelf32xc16x.c:254
#: eelf32xc16xl.c:254 eelf32xc16xs.c:254 eelf32xstormy16.c:265
#: eelf32xtensa.c:2298 eelf32z80.c:281 eelf64_aix.c:351 eelf64_ia64.c:408
#: eelf64_ia64_fbsd.c:408 eelf64_s390.c:447 eelf64_sparc.c:377
#: eelf64_sparc_fbsd.c:377 eelf64_sparc_sol2.c:508 eelf64alpha.c:470
#: eelf64alpha_fbsd.c:470 eelf64alpha_nbsd.c:470 eelf64bmip.c:606
#: eelf64bpf.c:254 eelf64btsmip.c:592 eelf64btsmip_fbsd.c:592 eelf64hppa.c:321
#: eelf64lppc.c:1089 eelf64lppc_fbsd.c:1089 eelf64lriscv.c:431
#: eelf64lriscv_lp64.c:431 eelf64lriscv_lp64f.c:431 eelf64ltsmip.c:592
#: eelf64ltsmip_fbsd.c:592 eelf64mmix.c:4128 eelf64ppc.c:1089
#: eelf64ppc_fbsd.c:1089 eelf64rdos.c:402 eelf64tilegx.c:377
#: eelf64tilegx_be.c:377 eelf_i386.c:4936 eelf_i386_be.c:375
#: eelf_i386_fbsd.c:411 eelf_i386_ldso.c:386 eelf_i386_sol2.c:542
#: eelf_i386_vxworks.c:438 eelf_iamcu.c:4914 eelf_k1om.c:5270
#: eelf_k1om_fbsd.c:5250 eelf_l1om.c:5270 eelf_l1om_fbsd.c:5250 eelf_s390.c:377
#: eelf_x86_64.c:5314 eelf_x86_64_cloudabi.c:411 eelf_x86_64_fbsd.c:411
#: eelf_x86_64_sol2.c:542 eh8300elf.c:269 eh8300elf_linux.c:269
#: eh8300helf.c:269 eh8300helf_linux.c:269 eh8300hnelf.c:269 eh8300self.c:269
#: eh8300self_linux.c:269 eh8300snelf.c:269 eh8300sxelf.c:269
#: eh8300sxelf_linux.c:269 eh8300sxnelf.c:269 ehppa64linux.c:351 ehppaelf.c:537
#: ehppalinux.c:660 ehppanbsd.c:660 ehppaobsd.c:660 ei386lynx.c:366
#: ei386moss.c:366 ei386nto.c:366 em32relf.c:269 em32relf_linux.c:376
#: em32rlelf.c:269 em32rlelf_linux.c:376 em68hc11elf.c:539 em68hc11elfb.c:539
#: em68hc12elf.c:539 em68hc12elfb.c:539 em68kelf.c:534 em68kelfnbsd.c:534
#: emn10300.c:351 ends32belf.c:390 ends32belf16m.c:390 ends32belf_linux.c:464
#: ends32elf.c:390 ends32elf16m.c:390 ends32elf_linux.c:464 enios2elf.c:556
#: enios2linux.c:638 epruelf.c:275 escore3_elf.c:372 escore7_elf.c:372
#: eshelf.c:351 eshelf_fd.c:377 eshelf_linux.c:377 eshelf_nbsd.c:351
#: eshelf_nto.c:351 eshelf_uclinux.c:351 eshelf_vxworks.c:388 eshlelf.c:351
#: eshlelf_fd.c:377 eshlelf_linux.c:377 eshlelf_nbsd.c:351 eshlelf_nto.c:351
#: eshlelf_vxworks.c:388 ev850.c:301 ev850_rh850.c:301
msgid ""
"%F%P: invalid visibility in `-z %s'; must be default, internal, hidden, or "
"protected"
msgstr ""

#: eaarch64cloudabi.c:758 eaarch64cloudabib.c:758 eaarch64elf.c:753
#: eaarch64elf32.c:753 eaarch64elf32b.c:753 eaarch64elfb.c:753
#: eaarch64fbsd.c:758 eaarch64fbsdb.c:758 eaarch64linux.c:758
#: eaarch64linux32.c:758 eaarch64linux32b.c:758 eaarch64linuxb.c:758
#: earcelf.c:377 earclinux.c:437 earclinux_nps.c:437 earcv2elf.c:259
#: earcv2elfx.c:259 earmelf.c:987 earmelf_fbsd.c:987 earmelf_fuchsia.c:992
#: earmelf_linux.c:992 earmelf_linux_eabi.c:992 earmelf_linux_fdpiceabi.c:992
#: earmelf_nacl.c:992 earmelf_nbsd.c:987 earmelf_phoenix.c:992
#: earmelf_vxworks.c:1023 earmelfb.c:987 earmelfb_fbsd.c:987
#: earmelfb_fuchsia.c:992 earmelfb_linux.c:992 earmelfb_linux_eabi.c:992
#: earmelfb_linux_fdpiceabi.c:992 earmelfb_nacl.c:992 earmelfb_nbsd.c:987
#: earmnto.c:962 earmsymbian.c:987 eavr1.c:482 eavr2.c:482 eavr25.c:482
#: eavr3.c:482 eavr31.c:482 eavr35.c:482 eavr4.c:482 eavr5.c:482 eavr51.c:482
#: eavr6.c:482 eavrtiny.c:482 eavrxmega1.c:482 eavrxmega2.c:482
#: eavrxmega3.c:482 eavrxmega4.c:482 eavrxmega5.c:482 eavrxmega6.c:482
#: eavrxmega7.c:482 ecriself.c:274 ecrislinux.c:412 ecskyelf.c:518
#: ecskyelf_linux.c:681 ed10velf.c:259 eelf32_sparc.c:437
#: eelf32_sparc_sol2.c:568 eelf32_sparc_vxworks.c:474 eelf32_spu.c:992
#: eelf32_tic6x_be.c:544 eelf32_tic6x_elf_be.c:544 eelf32_tic6x_elf_le.c:544
#: eelf32_tic6x_le.c:544 eelf32_tic6x_linux_be.c:544
#: eelf32_tic6x_linux_le.c:544 eelf32_x86_64.c:5454 eelf32am33lin.c:407
#: eelf32b4300.c:652 eelf32bfin.c:425 eelf32bfinfd.c:450 eelf32bmip.c:652
#: eelf32bmipn32.c:666 eelf32bsmip.c:666 eelf32btsmip.c:652
#: eelf32btsmip_fbsd.c:652 eelf32btsmipn32.c:652 eelf32btsmipn32_fbsd.c:652
#: eelf32cr16.c:409 eelf32crx.c:296 eelf32ebmip.c:652 eelf32ebmipvxworks.c:687
#: eelf32elmip.c:652 eelf32elmipvxworks.c:687 eelf32epiphany.c:274
#: eelf32epiphany_4x4.c:261 eelf32frvfd.c:432 eelf32ip2k.c:274
#: eelf32l4300.c:652 eelf32lm32.c:274 eelf32lm32fd.c:432 eelf32lmip.c:652
#: eelf32lppc.c:706 eelf32lppclinux.c:706 eelf32lppcnto.c:706
#: eelf32lppcsim.c:706 eelf32lr5900.c:515 eelf32lr5900n32.c:514
#: eelf32lriscv.c:491 eelf32lriscv_ilp32.c:491 eelf32lriscv_ilp32f.c:491
#: eelf32lsmip.c:652 eelf32ltsmip.c:652 eelf32ltsmip_fbsd.c:652
#: eelf32ltsmipn32.c:652 eelf32ltsmipn32_fbsd.c:652 eelf32m32c.c:285
#: eelf32mb_linux.c:437 eelf32mbel_linux.c:437 eelf32mcore.c:280
#: eelf32mep.c:259 eelf32metag.c:686 eelf32microblaze.c:259
#: eelf32microblazeel.c:259 eelf32mipswindiss.c:489 eelf32moxie.c:274
#: eelf32or1k.c:275 eelf32or1k_linux.c:437 eelf32ppc.c:706 eelf32ppc_fbsd.c:706
#: eelf32ppclinux.c:706 eelf32ppcnto.c:706 eelf32ppcsim.c:706
#: eelf32ppcvxworks.c:680 eelf32ppcwindiss.c:706 eelf32rl78.c:274
#: eelf32rx.c:302 eelf32rx_linux.c:287 eelf32tilegx.c:437 eelf32tilegx_be.c:437
#: eelf32tilepro.c:437 eelf32vax.c:407 eelf32visium.c:259 eelf32xc16x.c:259
#: eelf32xc16xl.c:259 eelf32xc16xs.c:259 eelf32xstormy16.c:270
#: eelf32xtensa.c:2358 eelf32z80.c:286 eelf64_aix.c:407 eelf64_ia64.c:464
#: eelf64_ia64_fbsd.c:464 eelf64_s390.c:507 eelf64_sparc.c:437
#: eelf64_sparc_fbsd.c:437 eelf64_sparc_sol2.c:568 eelf64alpha.c:530
#: eelf64alpha_fbsd.c:530 eelf64alpha_nbsd.c:530 eelf64bmip.c:666
#: eelf64bpf.c:259 eelf64btsmip.c:652 eelf64btsmip_fbsd.c:652 eelf64hppa.c:377
#: eelf64lppc.c:1155 eelf64lppc_fbsd.c:1155 eelf64lriscv.c:491
#: eelf64lriscv_lp64.c:491 eelf64lriscv_lp64f.c:491 eelf64ltsmip.c:652
#: eelf64ltsmip_fbsd.c:652 eelf64mmix.c:4184 eelf64ppc.c:1155
#: eelf64ppc_fbsd.c:1155 eelf64rdos.c:462 eelf64tilegx.c:437
#: eelf64tilegx_be.c:437 eelf_i386.c:5073 eelf_i386_be.c:474
#: eelf_i386_fbsd.c:548 eelf_i386_ldso.c:489 eelf_i386_sol2.c:645
#: eelf_i386_vxworks.c:541 eelf_iamcu.c:5017 eelf_k1om.c:5373
#: eelf_k1om_fbsd.c:5353 eelf_l1om.c:5373 eelf_l1om_fbsd.c:5353 eelf_s390.c:437
#: eelf_x86_64.c:5457 eelf_x86_64_cloudabi.c:554 eelf_x86_64_fbsd.c:554
#: eelf_x86_64_sol2.c:685 eh8300elf.c:274 eh8300elf_linux.c:274
#: eh8300helf.c:274 eh8300helf_linux.c:274 eh8300hnelf.c:274 eh8300self.c:274
#: eh8300self_linux.c:274 eh8300snelf.c:274 eh8300sxelf.c:274
#: eh8300sxelf_linux.c:274 eh8300sxnelf.c:274 ehppa64linux.c:407 ehppaelf.c:542
#: ehppalinux.c:720 ehppanbsd.c:720 ehppaobsd.c:720 ei386lynx.c:422
#: ei386moss.c:422 ei386nto.c:422 em32relf.c:274 em32relf_linux.c:432
#: em32rlelf.c:274 em32rlelf_linux.c:432 em68hc11elf.c:544 em68hc11elfb.c:544
#: em68hc12elf.c:544 em68hc12elfb.c:544 em68kelf.c:594 em68kelfnbsd.c:594
#: emn10300.c:407 ends32belf.c:395 ends32belf16m.c:395 ends32belf_linux.c:524
#: ends32elf.c:395 ends32elf16m.c:395 ends32elf_linux.c:524 enios2elf.c:561
#: enios2linux.c:698 epruelf.c:280 escore3_elf.c:428 escore7_elf.c:428
#: eshelf.c:407 eshelf_fd.c:437 eshelf_linux.c:437 eshelf_nbsd.c:407
#: eshelf_nto.c:407 eshelf_uclinux.c:407 eshelf_vxworks.c:444 eshlelf.c:407
#: eshlelf_fd.c:437 eshlelf_linux.c:437 eshlelf_nbsd.c:407 eshlelf_nto.c:407
#: eshlelf_vxworks.c:444 ev850.c:306 ev850_rh850.c:306
msgid "%P: warning: -z %s ignored\n"
msgstr ""

#: eaarch64cloudabi.c:792 eaarch64cloudabib.c:792 eaarch64elf.c:787
#: eaarch64elf32.c:787 eaarch64elf32b.c:787 eaarch64elfb.c:787
#: eaarch64fbsd.c:792 eaarch64fbsdb.c:792 eaarch64linux.c:792
#: eaarch64linux32.c:792 eaarch64linux32b.c:792 eaarch64linuxb.c:792
msgid "%P: error: unrecognized option for --fix-cortex-a53-843419: %s\n"
msgstr ""

#: eaarch64cloudabi.c:821 eaarch64cloudabib.c:821 eaarch64elf.c:816
#: eaarch64elf32.c:816 eaarch64elf32b.c:816 eaarch64elfb.c:816
#: eaarch64fbsd.c:821 eaarch64fbsdb.c:821 eaarch64linux.c:821
#: eaarch64linux32.c:821 eaarch64linux32b.c:821 eaarch64linuxb.c:821
#: earmelf.c:1124 earmelf_fbsd.c:1124 earmelf_fuchsia.c:1129
#: earmelf_linux.c:1129 earmelf_linux_eabi.c:1129
#: earmelf_linux_fdpiceabi.c:1129 earmelf_nacl.c:1129 earmelf_nbsd.c:1124
#: earmelf_phoenix.c:1129 earmelf_vxworks.c:1164 earmelfb.c:1124
#: earmelfb_fbsd.c:1124 earmelfb_fuchsia.c:1129 earmelfb_linux.c:1129
#: earmelfb_linux_eabi.c:1129 earmelfb_linux_fdpiceabi.c:1129
#: earmelfb_nacl.c:1129 earmelfb_nbsd.c:1124 earmnto.c:1099 earmsymbian.c:1124
#, c-format
msgid ""
"  --no-enum-size-warning      Don't warn about objects with incompatible\n"
"                                enum sizes\n"
msgstr ""

#: eaarch64cloudabi.c:823 eaarch64cloudabib.c:823 eaarch64elf.c:818
#: eaarch64elf32.c:818 eaarch64elf32b.c:818 eaarch64elfb.c:818
#: eaarch64fbsd.c:823 eaarch64fbsdb.c:823 eaarch64linux.c:823
#: eaarch64linux32.c:823 eaarch64linux32b.c:823 eaarch64linuxb.c:823
#: earmelf.c:1126 earmelf_fbsd.c:1126 earmelf_fuchsia.c:1131
#: earmelf_linux.c:1131 earmelf_linux_eabi.c:1131
#: earmelf_linux_fdpiceabi.c:1131 earmelf_nacl.c:1131 earmelf_nbsd.c:1126
#: earmelf_phoenix.c:1131 earmelf_vxworks.c:1166 earmelfb.c:1126
#: earmelfb_fbsd.c:1126 earmelfb_fuchsia.c:1131 earmelfb_linux.c:1131
#: earmelfb_linux_eabi.c:1131 earmelfb_linux_fdpiceabi.c:1131
#: earmelfb_nacl.c:1131 earmelfb_nbsd.c:1126 earmnto.c:1101 earmsymbian.c:1126
#, c-format
msgid ""
"  --no-wchar-size-warning     Don't warn about objects with incompatible\n"
"                                wchar_t sizes\n"
msgstr ""

#: eaarch64cloudabi.c:825 eaarch64cloudabib.c:825 eaarch64elf.c:820
#: eaarch64elf32.c:820 eaarch64elf32b.c:820 eaarch64elfb.c:820
#: eaarch64fbsd.c:825 eaarch64fbsdb.c:825 eaarch64linux.c:825
#: eaarch64linux32.c:825 eaarch64linux32b.c:825 eaarch64linuxb.c:825
#: earmelf.c:1128 earmelf_fbsd.c:1128 earmelf_fuchsia.c:1133
#: earmelf_linux.c:1133 earmelf_linux_eabi.c:1133
#: earmelf_linux_fdpiceabi.c:1133 earmelf_nacl.c:1133 earmelf_nbsd.c:1128
#: earmelf_phoenix.c:1133 earmelf_vxworks.c:1168 earmelfb.c:1128
#: earmelfb_fbsd.c:1128 earmelfb_fuchsia.c:1133 earmelfb_linux.c:1133
#: earmelfb_linux_eabi.c:1133 earmelfb_linux_fdpiceabi.c:1133
#: earmelfb_nacl.c:1133 earmelfb_nbsd.c:1128 earmnto.c:1103 earmsymbian.c:1128
#, c-format
msgid ""
"  --pic-veneer                Always generate PIC interworking veneers\n"
msgstr ""

#: eaarch64cloudabi.c:826 eaarch64cloudabib.c:826 eaarch64elf.c:821
#: eaarch64elf32.c:821 eaarch64elf32b.c:821 eaarch64elfb.c:821
#: eaarch64fbsd.c:826 eaarch64fbsdb.c:826 eaarch64linux.c:826
#: eaarch64linux32.c:826 eaarch64linux32b.c:826 eaarch64linuxb.c:826
#: earmelf.c:1135 earmelf_fbsd.c:1135 earmelf_fuchsia.c:1140
#: earmelf_linux.c:1140 earmelf_linux_eabi.c:1140
#: earmelf_linux_fdpiceabi.c:1140 earmelf_nacl.c:1140 earmelf_nbsd.c:1135
#: earmelf_phoenix.c:1140 earmelf_vxworks.c:1175 earmelfb.c:1135
#: earmelfb_fbsd.c:1135 earmelfb_fuchsia.c:1140 earmelfb_linux.c:1140
#: earmelfb_linux_eabi.c:1140 earmelfb_linux_fdpiceabi.c:1140
#: earmelfb_nacl.c:1140 earmelfb_nbsd.c:1135 earmnto.c:1110 earmsymbian.c:1135
#, c-format
msgid ""
"  --stub-group-size=N         Maximum size of a group of input sections "
"that\n"
"                                can be handled by one stub section.  A "
"negative\n"
"                                value locates all stubs after their "
"branches\n"
"                                (with a group size of -N), while a positive\n"
"                                value allows two groups of input sections, "
"one\n"
"                                before, and one after each stub section.\n"
"                                Values of +/-1 indicate the linker should\n"
"                                choose suitable defaults.\n"
msgstr ""

#: eaarch64cloudabi.c:835 eaarch64cloudabib.c:835 eaarch64elf.c:830
#: eaarch64elf32.c:830 eaarch64elf32b.c:830 eaarch64elfb.c:830
#: eaarch64fbsd.c:835 eaarch64fbsdb.c:835 eaarch64linux.c:835
#: eaarch64linux32.c:835 eaarch64linux32b.c:835 eaarch64linuxb.c:835
#, c-format
msgid "  --fix-cortex-a53-835769      Fix erratum 835769\n"
msgstr ""

#: eaarch64cloudabi.c:836 eaarch64cloudabib.c:836 eaarch64elf.c:831
#: eaarch64elf32.c:831 eaarch64elf32b.c:831 eaarch64elfb.c:831
#: eaarch64fbsd.c:836 eaarch64fbsdb.c:836 eaarch64linux.c:836
#: eaarch64linux32.c:836 eaarch64linux32b.c:836 eaarch64linuxb.c:836
#, c-format
msgid ""
"  --fix-cortex-a53-843419[=full|adr|adrp]      Fix erratum 843419 and "
"optionally specify which workaround to use.\n"
"                                               full (default): Use both ADRP "
"and ADR workaround, this will \n"
"                                                 increase the size of your "
"binaries.\n"
"                                               adr: Only use the ADR "
"workaround, this will not cause any increase\n"
"                                                 in binary size but linking "
"will fail if the referenced address is\n"
"                                                 out of range of an ADR "
"instruction.  This will remove the need of using\n"
"                                                 a veneer and results in "
"both performance and size benefits.\n"
"                                               adrp: Use only the ADRP "
"workaround, this will never rewrite your ADRP\n"
"                                                 instruction into an ADR.  "
"As such the workaround will always use a\n"
"                                                 veneer and this will give "
"you both a performance and size overhead.\n"
msgstr ""

#: eaarch64cloudabi.c:847 eaarch64cloudabib.c:847 eaarch64elf.c:842
#: eaarch64elf32.c:842 eaarch64elf32b.c:842 eaarch64elfb.c:842
#: eaarch64fbsd.c:847 eaarch64fbsdb.c:847 eaarch64linux.c:847
#: eaarch64linux32.c:847 eaarch64linux32b.c:847 eaarch64linuxb.c:847
#, c-format
msgid ""
"  --no-apply-dynamic-relocs    Do not apply link-time values for dynamic "
"relocations\n"
msgstr ""

#: eaarch64cloudabi.c:848 eaarch64cloudabib.c:848 eaarch64elf.c:843
#: eaarch64elf32.c:843 eaarch64elf32b.c:843 eaarch64elfb.c:843
#: eaarch64fbsd.c:848 eaarch64fbsdb.c:848 eaarch64linux.c:848
#: eaarch64linux32.c:848 eaarch64linux32b.c:848 eaarch64linuxb.c:848
#, c-format
msgid ""
"  -z force-bti                  Turn on Branch Target Identification "
"mechanism and generate PLTs with BTI. Generate warnings for missing BTI on "
"inputs\n"
msgstr ""

#: eaarch64cloudabi.c:849 eaarch64cloudabib.c:849 eaarch64elf.c:844
#: eaarch64elf32.c:844 eaarch64elf32b.c:844 eaarch64elfb.c:844
#: eaarch64fbsd.c:849 eaarch64fbsdb.c:849 eaarch64linux.c:849
#: eaarch64linux32.c:849 eaarch64linux32b.c:849 eaarch64linuxb.c:849
#, c-format
msgid ""
"  -z pac-plt                    Protect PLTs with Pointer Authentication.\n"
msgstr ""

#: eaix5ppc.c:317 eaix5rs6.c:317 eaixppc.c:317 eaixrs6.c:317 eppcmacos.c:317
msgid "%F%P: cannot open %s\n"
msgstr ""

#: eaix5ppc.c:364 eaix5rs6.c:364 eaixppc.c:364 eaixrs6.c:364 eppcmacos.c:364
msgid "%F%P: cannot read %s\n"
msgstr ""

#: eaix5ppc.c:392 eaix5rs6.c:392 eaixppc.c:392 eaixrs6.c:392 eppcmacos.c:392
msgid "%P: warning: ignoring invalid -D number %s\n"
msgstr ""

#: eaix5ppc.c:400 eaix5rs6.c:400 eaixppc.c:400 eaixrs6.c:400 eppcmacos.c:400
msgid "%P: warning: ignoring invalid -H number %s\n"
msgstr ""

#: eaix5ppc.c:512 eaix5rs6.c:512 eaixppc.c:512 eaixrs6.c:512 eppcmacos.c:512
msgid "%P: warning: ignoring invalid -bmaxdata number %s\n"
msgstr ""

#: eaix5ppc.c:521 eaix5rs6.c:521 eaixppc.c:521 eaixrs6.c:521 eppcmacos.c:521
msgid "%P: warning: ignoring invalid -bmaxstack number %s\n"
msgstr ""

#: eaix5ppc.c:534 eaix5rs6.c:534 eaixppc.c:534 eaixrs6.c:534 eppcmacos.c:534
msgid "%P: warning: ignoring invalid module type %s\n"
msgstr ""

#: eaix5ppc.c:564 eaix5rs6.c:564 eaixppc.c:564 eaixrs6.c:564 eppcmacos.c:564
msgid "%P: warning: ignoring invalid -pD number %s\n"
msgstr ""

#: eaix5ppc.c:587 eaix5rs6.c:587 eaixppc.c:587 eaixrs6.c:587 eppcmacos.c:587
msgid "%P: warning: ignoring invalid -pT number %s\n"
msgstr ""

#: eaix5ppc.c:716 eaix5rs6.c:716 eaixppc.c:716 eaixrs6.c:716 eppcmacos.c:716
msgid "%F%P: bfd_xcoff_link_record_set failed: %E\n"
msgstr ""

#: eaix5ppc.c:746 eaix5rs6.c:746 eaixppc.c:746 eaixrs6.c:746 eppcmacos.c:746
msgid "%F%P: bfd_link_hash_lookup of export symbol failed: %E\n"
msgstr ""

#: eaix5ppc.c:748 eaix5rs6.c:748 eaixppc.c:748 eaixrs6.c:748 eppcmacos.c:748
msgid "%F%P: bfd_xcoff_export_symbol failed: %E\n"
msgstr ""

#: eaix5ppc.c:854 eaix5rs6.c:854 eaixppc.c:854 eaixrs6.c:854 eppcmacos.c:854
msgid "%F%P: can't find output section %s\n"
msgstr ""

#: eaix5ppc.c:891 eaix5rs6.c:891 eaixppc.c:891 eaixrs6.c:891 eppcmacos.c:891
msgid "%F%P: can't find %s in output section\n"
msgstr ""

#: eaix5ppc.c:958 eaix5rs6.c:958 eaixppc.c:958 eaixrs6.c:958 eppcmacos.c:958
msgid "%P: can't find required output section %s\n"
msgstr ""

#: eaix5ppc.c:1167 eaix5rs6.c:1167 eaixppc.c:1167 eaixrs6.c:1167
#: eppcmacos.c:1167
msgid "%F%P:%s:%d: #! ([member]) is not supported in import files\n"
msgstr ""

#: eaix5ppc.c:1184 eaix5rs6.c:1184 eaixppc.c:1184 eaixrs6.c:1184
#: eppcmacos.c:1184
msgid "%F%P: could not parse import path: %E\n"
msgstr ""

#: eaix5ppc.c:1194 eaix5ppc.c:1206 eaix5rs6.c:1194 eaix5rs6.c:1206
#: eaixppc.c:1194 eaixppc.c:1206 eaixrs6.c:1194 eaixrs6.c:1206 eppcmacos.c:1194
#: eppcmacos.c:1206
msgid "%P:%s:%d: warning: syntax error in import file\n"
msgstr ""

#: eaix5ppc.c:1241 eaix5rs6.c:1241 eaixppc.c:1241 eaixrs6.c:1241
#: eppcmacos.c:1241
msgid "%P:%s%d: warning: syntax error in import/export file\n"
msgstr ""

#: eaix5ppc.c:1259 eaix5rs6.c:1259 eaixppc.c:1259 eaixrs6.c:1259
#: eppcmacos.c:1259
msgid "%P:%s:%d: warning: syntax error in import/export file\n"
msgstr ""

#: eaix5ppc.c:1294 eaix5rs6.c:1294 eaixppc.c:1294 eaixrs6.c:1294
#: eppcmacos.c:1294
msgid "%X%P:%s:%d: failed to import symbol %s: %E\n"
msgstr ""

#: eaix5ppc.c:1304 eaix5rs6.c:1304 eaixppc.c:1304 eaixrs6.c:1304
#: eppcmacos.c:1304
msgid "%P:%s:%d: warning: ignoring unterminated last line\n"
msgstr ""

#: eaix5ppc.c:1339 eaix5rs6.c:1339 eaixppc.c:1339 eaixrs6.c:1339
#: eppcmacos.c:1339
msgid "%F%P: only relocations against symbols are permitted\n"
msgstr ""

#: eaix5ppc.c:1342 eaix5rs6.c:1342 eaixppc.c:1342 eaixrs6.c:1342
#: eppcmacos.c:1342
msgid "%F%P: bfd_xcoff_link_count_reloc failed: %E\n"
msgstr ""

#: ealphavms.c:167 eelf64_ia64_vms.c:167
#, c-format
msgid ""
"  --identification <string>          Set the identification of the output\n"
msgstr ""

#: earm_wince_pe.c:399 earmpe.c:399 ei386pe.c:399 ei386pe_posix.c:399
#: ei386pep.c:383 emcorepe.c:399 eshpe.c:399
#, c-format
msgid ""
"  --base_file <basefile>             Generate a base file for relocatable "
"DLLs\n"
msgstr ""

#: earm_wince_pe.c:400 earmpe.c:400 ei386pe.c:400 ei386pe_posix.c:400
#: ei386pep.c:384 emcorepe.c:400 eshpe.c:400
#, c-format
msgid ""
"  --dll                              Set image base to the default for DLLs\n"
msgstr ""

#: earm_wince_pe.c:401 earmpe.c:401 ei386pe.c:401 ei386pe_posix.c:401
#: ei386pep.c:385 emcorepe.c:401 eshpe.c:401
#, c-format
msgid "  --file-alignment <size>            Set file alignment\n"
msgstr ""

#: earm_wince_pe.c:402 earmpe.c:402 ei386pe.c:402 ei386pe_posix.c:402
#: ei386pep.c:386 emcorepe.c:402 eshpe.c:402
#, c-format
msgid "  --heap <size>                      Set initial size of the heap\n"
msgstr ""

#: earm_wince_pe.c:403 earmpe.c:403 ei386pe.c:403 ei386pe_posix.c:403
#: ei386pep.c:387 emcorepe.c:403 eshpe.c:403
#, c-format
msgid ""
"  --image-base <address>             Set start address of the executable\n"
msgstr ""

#: earm_wince_pe.c:404 earmpe.c:404 ei386pe.c:404 ei386pe_posix.c:404
#: ei386pep.c:388 emcorepe.c:404 eshpe.c:404
#, c-format
msgid ""
"  --major-image-version <number>     Set version number of the executable\n"
msgstr ""

#: earm_wince_pe.c:405 earmpe.c:405 ei386pe.c:405 ei386pe_posix.c:405
#: ei386pep.c:389 emcorepe.c:405 eshpe.c:405
#, c-format
msgid "  --major-os-version <number>        Set minimum required OS version\n"
msgstr ""

#: earm_wince_pe.c:406 earmpe.c:406 ei386pe.c:406 ei386pe_posix.c:406
#: ei386pep.c:390 emcorepe.c:406 eshpe.c:406
#, c-format
msgid ""
"  --major-subsystem-version <number> Set minimum required OS subsystem "
"version\n"
msgstr ""

#: earm_wince_pe.c:407 earmpe.c:407 ei386pe.c:407 ei386pe_posix.c:407
#: ei386pep.c:391 emcorepe.c:407 eshpe.c:407
#, c-format
msgid ""
"  --minor-image-version <number>     Set revision number of the executable\n"
msgstr ""

#: earm_wince_pe.c:408 earmpe.c:408 ei386pe.c:408 ei386pe_posix.c:408
#: ei386pep.c:392 emcorepe.c:408 eshpe.c:408
#, c-format
msgid "  --minor-os-version <number>        Set minimum required OS revision\n"
msgstr ""

#: earm_wince_pe.c:409 earmpe.c:409 ei386pe.c:409 ei386pe_posix.c:409
#: ei386pep.c:393 emcorepe.c:409 eshpe.c:409
#, c-format
msgid ""
"  --minor-subsystem-version <number> Set minimum required OS subsystem "
"revision\n"
msgstr ""

#: earm_wince_pe.c:410 earmpe.c:410 ei386pe.c:410 ei386pe_posix.c:410
#: ei386pep.c:394 emcorepe.c:410 eshpe.c:410
#, c-format
msgid "  --section-alignment <size>         Set section alignment\n"
msgstr ""

#: earm_wince_pe.c:411 earmpe.c:411 ei386pe.c:411 ei386pe_posix.c:411
#: ei386pep.c:395 emcorepe.c:411 eshpe.c:411
#, c-format
msgid "  --stack <size>                     Set size of the initial stack\n"
msgstr ""

#: earm_wince_pe.c:412 earmpe.c:412 ei386pe.c:412 ei386pe_posix.c:412
#: ei386pep.c:396 emcorepe.c:412 eshpe.c:412
#, c-format
msgid ""
"  --subsystem <name>[:<version>]     Set required OS subsystem [& version]\n"
msgstr ""

#: earm_wince_pe.c:413 earmpe.c:413 ei386pe.c:413 ei386pe_posix.c:413
#: ei386pep.c:397 emcorepe.c:413 eshpe.c:413
#, c-format
msgid ""
"  --support-old-code                 Support interworking with old code\n"
msgstr ""

#: earm_wince_pe.c:414 earmpe.c:414 ei386pe.c:414 ei386pe_posix.c:414
#: ei386pep.c:398 emcorepe.c:414 eshpe.c:414
#, c-format
msgid ""
"  --[no-]leading-underscore          Set explicit symbol underscore prefix "
"mode\n"
msgstr ""

#: earm_wince_pe.c:415 earmpe.c:415 ei386pe.c:415 ei386pe_posix.c:415
#: emcorepe.c:415 eshpe.c:415
#, c-format
msgid ""
"  --thumb-entry=<symbol>             Set the entry point to be Thumb "
"<symbol>\n"
msgstr ""

#: earm_wince_pe.c:416 earmpe.c:416 ei386pe.c:416 ei386pe_posix.c:416
#: emcorepe.c:416 eshpe.c:416
#, c-format
msgid ""
"  --[no-]insert-timestamp            Use a real timestamp rather than zero "
"(default).\n"
msgstr ""

#: earm_wince_pe.c:417 earmpe.c:417 ei386pe.c:417 ei386pe_posix.c:417
#: ei386pep.c:400 emcorepe.c:417 eshpe.c:417
#, c-format
msgid ""
"                                     This makes binaries non-deterministic\n"
msgstr ""

#: earm_wince_pe.c:419 earmpe.c:419 ei386pe.c:419 ei386pe_posix.c:419
#: ei386pep.c:402 emcorepe.c:419 eshpe.c:419
#, c-format
msgid ""
"  --add-stdcall-alias                Export symbols with and without @nn\n"
msgstr ""

#: earm_wince_pe.c:420 earmpe.c:420 ei386pe.c:420 ei386pe_posix.c:420
#: ei386pep.c:403 emcorepe.c:420 eshpe.c:420
#, c-format
msgid "  --disable-stdcall-fixup            Don't link _sym to _sym@nn\n"
msgstr ""

#: earm_wince_pe.c:421 earmpe.c:421 ei386pe.c:421 ei386pe_posix.c:421
#: ei386pep.c:404 emcorepe.c:421 eshpe.c:421
#, c-format
msgid ""
"  --enable-stdcall-fixup             Link _sym to _sym@nn without warnings\n"
msgstr ""

#: earm_wince_pe.c:422 earmpe.c:422 ei386pe.c:422 ei386pe_posix.c:422
#: ei386pep.c:405 emcorepe.c:422 eshpe.c:422
#, c-format
msgid ""
"  --exclude-symbols sym,sym,...      Exclude symbols from automatic export\n"
msgstr ""

#: earm_wince_pe.c:423 earmpe.c:423 ei386pe.c:423 ei386pe_posix.c:423
#: ei386pep.c:406 emcorepe.c:423 eshpe.c:423
#, c-format
msgid ""
"  --exclude-all-symbols              Exclude all symbols from automatic "
"export\n"
msgstr ""

#: earm_wince_pe.c:424 earmpe.c:424 ei386pe.c:424 ei386pe_posix.c:424
#: ei386pep.c:407 emcorepe.c:424 eshpe.c:424
#, c-format
msgid ""
"  --exclude-libs lib,lib,...         Exclude libraries from automatic "
"export\n"
msgstr ""

#: earm_wince_pe.c:425 earmpe.c:425 ei386pe.c:425 ei386pe_posix.c:425
#: ei386pep.c:408 emcorepe.c:425 eshpe.c:425
#, c-format
msgid "  --exclude-modules-for-implib mod,mod,...\n"
msgstr ""

#: earm_wince_pe.c:426 earmpe.c:426 ei386pe.c:426 ei386pe_posix.c:426
#: ei386pep.c:409 emcorepe.c:426 eshpe.c:426
#, c-format
msgid ""
"                                     Exclude objects, archive members from "
"auto\n"
msgstr ""

#: earm_wince_pe.c:427 earmpe.c:427 ei386pe.c:427 ei386pe_posix.c:427
#: emcorepe.c:427 eshpe.c:427
#, c-format
msgid ""
"                                     export, place into import library "
"instead.\n"
msgstr ""

#: earm_wince_pe.c:428 earmpe.c:428 ei386pe.c:428 ei386pe_posix.c:428
#: ei386pep.c:411 emcorepe.c:428 eshpe.c:428
#, c-format
msgid ""
"  --export-all-symbols               Automatically export all globals to "
"DLL\n"
msgstr ""

#: earm_wince_pe.c:429 earmpe.c:429 ei386pe.c:429 ei386pe_posix.c:429
#: ei386pep.c:412 emcorepe.c:429 eshpe.c:429
#, c-format
msgid "  --kill-at                          Remove @nn from exported symbols\n"
msgstr ""

#: earm_wince_pe.c:430 earmpe.c:430 ei386pe.c:430 ei386pe_posix.c:430
#: ei386pep.c:413 emcorepe.c:430 eshpe.c:430
#, c-format
msgid ""
"  --output-def <file>                Generate a .DEF file for the built DLL\n"
msgstr ""

#: earm_wince_pe.c:431 earmpe.c:431 ei386pe.c:431 ei386pe_posix.c:431
#: ei386pep.c:414 emcorepe.c:431 eshpe.c:431
#, c-format
msgid "  --warn-duplicate-exports           Warn about duplicate exports\n"
msgstr ""

#: earm_wince_pe.c:432 earmpe.c:432 ei386pe.c:432 ei386pe_posix.c:432
#: emcorepe.c:432 eshpe.c:432
#, c-format
msgid ""
"  --compat-implib                    Create backward compatible import "
"libs;\n"
"                                       create __imp_<SYMBOL> as well.\n"
msgstr ""

#: earm_wince_pe.c:433 earmpe.c:433 ei386pe.c:433 ei386pe_posix.c:433
#: emcorepe.c:433 eshpe.c:433
#, c-format
msgid ""
"  --enable-auto-image-base[=<address>] Automatically choose image base for "
"DLLs\n"
"                                       (optionally starting with address) "
"unless\n"
"                                       specifically set with --image-base\n"
msgstr ""

#: earm_wince_pe.c:434 earmpe.c:434 ei386pe.c:434 ei386pe_posix.c:434
#: emcorepe.c:434 eshpe.c:434
#, c-format
msgid ""
"  --disable-auto-image-base          Do not auto-choose image base. "
"(default)\n"
msgstr ""

#: earm_wince_pe.c:435 earmpe.c:435 ei386pe.c:435 ei386pe_posix.c:435
#: ei386pep.c:418 emcorepe.c:435 eshpe.c:435
#, c-format
msgid ""
"  --dll-search-prefix=<string>       When linking dynamically to a dll "
"without\n"
"                                       an importlib, use <string><basename>."
"dll\n"
"                                       in preference to lib<basename>.dll \n"
msgstr ""

#: earm_wince_pe.c:436 earmpe.c:436 ei386pe.c:436 ei386pe_posix.c:436
#: ei386pep.c:419 emcorepe.c:436 eshpe.c:436
#, c-format
msgid ""
"  --enable-auto-import               Do sophisticated linking of _sym to\n"
"                                       __imp_sym for DATA references\n"
msgstr ""

#: earm_wince_pe.c:437 earmpe.c:437 ei386pe.c:437 ei386pe_posix.c:437
#: ei386pep.c:420 emcorepe.c:437 eshpe.c:437
#, c-format
msgid ""
"  --disable-auto-import              Do not auto-import DATA items from "
"DLLs\n"
msgstr ""

#: earm_wince_pe.c:438 earmpe.c:438 ei386pe.c:438 ei386pe_posix.c:438
#: emcorepe.c:438 eshpe.c:438
#, c-format
msgid ""
"  --enable-runtime-pseudo-reloc      Work around auto-import limitations by\n"
"                                       adding pseudo-relocations resolved "
"at\n"
"                                       runtime.\n"
msgstr ""

#: earm_wince_pe.c:439 earmpe.c:439 ei386pe.c:439 ei386pe_posix.c:439
#: emcorepe.c:439 eshpe.c:439
#, c-format
msgid ""
"  --disable-runtime-pseudo-reloc     Do not add runtime pseudo-relocations "
"for\n"
"                                       auto-imported DATA.\n"
msgstr ""

#: earm_wince_pe.c:440 earmpe.c:440 ei386pe.c:440 ei386pe_posix.c:440
#: emcorepe.c:440 eshpe.c:440
#, c-format
msgid ""
"  --enable-extra-pe-debug            Enable verbose debug output when "
"building\n"
"                                       or linking to DLLs (esp. auto-"
"import)\n"
msgstr ""

#: earm_wince_pe.c:442 earmpe.c:442 ei386pe.c:442 ei386pe_posix.c:442
#: emcorepe.c:442 eshpe.c:442
#, c-format
msgid ""
"  --large-address-aware              Executable supports virtual addresses\n"
"                                       greater than 2 gigabytes\n"
msgstr ""

#: earm_wince_pe.c:443 earmpe.c:443 ei386pe.c:443 ei386pe_posix.c:443
#: emcorepe.c:443 eshpe.c:443
#, c-format
msgid ""
"  --disable-large-address-aware      Executable does not support virtual\n"
"                                       addresses greater than 2 gigabytes\n"
msgstr ""

#: earm_wince_pe.c:444 earmpe.c:444 ei386pe.c:444 ei386pe_posix.c:444
#: ei386pep.c:424 emcorepe.c:444 eshpe.c:444
#, c-format
msgid ""
"  --enable-long-section-names        Use long COFF section names even in\n"
"                                       executable image files\n"
msgstr ""

#: earm_wince_pe.c:445 earmpe.c:445 ei386pe.c:445 ei386pe_posix.c:445
#: ei386pep.c:425 emcorepe.c:445 eshpe.c:445
#, c-format
msgid ""
"  --disable-long-section-names       Never use long COFF section names, "
"even\n"
"                                       in object files\n"
msgstr ""

#: earm_wince_pe.c:446 earmpe.c:446 ei386pe.c:446 ei386pe_posix.c:446
#: ei386pep.c:427 emcorepe.c:446 eshpe.c:446
#, c-format
msgid ""
"  --[disable-]dynamicbase            Image base address may be relocated "
"using\n"
"                                       address space layout randomization "
"(ASLR)\n"
msgstr ""

#: earm_wince_pe.c:447 earmpe.c:447 ei386pe.c:447 ei386pe_posix.c:447
#: ei386pep.c:428 emcorepe.c:447 eshpe.c:447
#, c-format
msgid "  --enable-reloc-section             Create the base relocation table\n"
msgstr ""

#: earm_wince_pe.c:448 earmpe.c:448 ei386pe.c:448 ei386pe_posix.c:448
#: ei386pep.c:429 emcorepe.c:448 eshpe.c:448
#, c-format
msgid ""
"  --disable-reloc-section            Do not create the base relocation "
"table\n"
msgstr ""

#: earm_wince_pe.c:449 earmpe.c:449 ei386pe.c:449 ei386pe_posix.c:449
#: ei386pep.c:430 emcorepe.c:449 eshpe.c:449
#, c-format
msgid ""
"  --[disable-]forceinteg             Code integrity checks are enforced\n"
msgstr ""

#: earm_wince_pe.c:450 earmpe.c:450 ei386pe.c:450 ei386pe_posix.c:450
#: ei386pep.c:431 emcorepe.c:450 eshpe.c:450
#, c-format
msgid ""
"  --[disable-]nxcompat               Image is compatible with data "
"execution\n"
"                                       prevention\n"
msgstr ""

#: earm_wince_pe.c:451 earmpe.c:451 ei386pe.c:451 ei386pe_posix.c:451
#: ei386pep.c:432 emcorepe.c:451 eshpe.c:451
#, c-format
msgid ""
"  --[disable-]no-isolation           Image understands isolation but do not\n"
"                                       isolate the image\n"
msgstr ""

#: earm_wince_pe.c:452 earmpe.c:452 ei386pe.c:452 ei386pe_posix.c:452
#: emcorepe.c:452 eshpe.c:452
#, c-format
msgid ""
"  --[disable-]no-seh                 Image does not use SEH. No SE handler "
"may\n"
"                                       be called in this image\n"
msgstr ""

#: earm_wince_pe.c:453 earmpe.c:453 ei386pe.c:453 ei386pe_posix.c:453
#: ei386pep.c:434 emcorepe.c:453 eshpe.c:453
#, c-format
msgid "  --[disable-]no-bind                Do not bind this image\n"
msgstr ""

#: earm_wince_pe.c:454 earmpe.c:454 ei386pe.c:454 ei386pe_posix.c:454
#: ei386pep.c:435 emcorepe.c:454 eshpe.c:454
#, c-format
msgid "  --[disable-]wdmdriver              Driver uses the WDM model\n"
msgstr ""

#: earm_wince_pe.c:455 earmpe.c:455 ei386pe.c:455 ei386pe_posix.c:455
#: ei386pep.c:436 emcorepe.c:455 eshpe.c:455
#, c-format
msgid "  --[disable-]tsaware                Image is Terminal Server aware\n"
msgstr ""

#: earm_wince_pe.c:456 earmpe.c:456 ei386pe.c:456 ei386pe_posix.c:456
#: ei386pep.c:437 emcorepe.c:456 eshpe.c:456
#, c-format
msgid "  --build-id[=STYLE]                 Generate build ID\n"
msgstr ""

#: earm_wince_pe.c:584 earmpe.c:584 ei386beos.c:205 ei386pe.c:584
#: ei386pe_posix.c:584 ei386pep.c:562 emcorepe.c:584 eshpe.c:584
msgid "%P: warning: bad version number in -subsystem option\n"
msgstr ""

#: earm_wince_pe.c:609 earmpe.c:609 ei386beos.c:222 ei386pe.c:609
#: ei386pe_posix.c:609 ei386pep.c:587 emcorepe.c:609 eshpe.c:609
msgid "%F%P: invalid subsystem type %s\n"
msgstr ""

#: earm_wince_pe.c:630 earmpe.c:630 ei386beos.c:233 ei386pe.c:630
#: ei386pe_posix.c:630 ei386pep.c:608 emcorepe.c:630 eshpe.c:630
msgid "%F%P: invalid hex number for PE parameter '%s'\n"
msgstr ""

#: earm_wince_pe.c:647 earmpe.c:647 ei386beos.c:250 ei386pe.c:647
#: ei386pe_posix.c:647 ei386pep.c:625 emcorepe.c:647 eshpe.c:647
msgid "%F%P: strange hex info for PE parameter '%s'\n"
msgstr ""

#: earm_wince_pe.c:663 earmpe.c:663 eelf32mcore.c:286 ei386beos.c:266
#: ei386pe.c:663 ei386pe_posix.c:663 ei386pep.c:642 emcorepe.c:663 eshpe.c:663
msgid "%F%P: cannot open base file %s\n"
msgstr ""

#: earm_wince_pe.c:986 earmpe.c:986 ei386beos.c:362 ei386pe.c:986
#: ei386pe_posix.c:986 ei386pep.c:952 emcorepe.c:986 eshpe.c:986
msgid "%P: warning, file alignment > section alignment\n"
msgstr ""

#: earm_wince_pe.c:999 earmpe.c:999 ei386pe.c:999 ei386pe_posix.c:999
#: emcorepe.c:999 eshpe.c:999
msgid ""
"%P: warning: --export-dynamic is not supported for PE targets, did you mean "
"--export-all-symbols?\n"
msgstr ""

#: earm_wince_pe.c:1044 earmpe.c:1044 ei386pe.c:1044 ei386pe_posix.c:1044
#: emcorepe.c:1044 eshpe.c:1044
msgid "%P: warning: resolving %s by linking to %s\n"
msgstr ""

#: earm_wince_pe.c:1049 earmpe.c:1049 ei386pe.c:1049 ei386pe_posix.c:1049
#: ei386pep.c:1038 ei386pep.c:1065 emcorepe.c:1049 eshpe.c:1049
msgid "Use --enable-stdcall-fixup to disable these warnings\n"
msgstr ""

#: earm_wince_pe.c:1050 earmpe.c:1050 ei386pe.c:1050 ei386pe_posix.c:1050
#: ei386pep.c:1039 ei386pep.c:1066 emcorepe.c:1050 eshpe.c:1050
msgid "Use --disable-stdcall-fixup to disable these fixups\n"
msgstr ""

#: earm_wince_pe.c:1119 earmpe.c:1119 ei386pe.c:1119 ei386pe_posix.c:1119
#: ei386pep.c:1117 emcorepe.c:1119 eshpe.c:1119
msgid "%P: %C: cannot get section contents - auto-import exception\n"
msgstr ""

#: earm_wince_pe.c:1204 earmpe.c:1204 ei386pe.c:1204 ei386pe_posix.c:1204
#: ei386pep.c:1211 emcorepe.c:1204 eshpe.c:1204
msgid "%P: warning: .buildid section discarded, --build-id ignored\n"
msgstr ""

#: earm_wince_pe.c:1301 earmpe.c:1301 ei386pe.c:1301 ei386pe_posix.c:1301
#: ei386pep.c:1308 emcorepe.c:1301 eshpe.c:1301
msgid "%P: warning: cannot create .buildid section, --build-id ignored\n"
msgstr ""

#: earm_wince_pe.c:1355 earmpe.c:1355 ei386pe.c:1355 ei386pe_posix.c:1355
#: ei386pep.c:1363 emcorepe.c:1355 eshpe.c:1355
msgid "%F%P: cannot perform PE operations on non PE output file '%pB'\n"
msgstr ""

#: earm_wince_pe.c:1498 earmpe.c:1498 ei386pe.c:1498 ei386pe_posix.c:1498
#: ei386pep.c:1487 emcorepe.c:1498 eshpe.c:1498
msgid "%X%P: unable to process relocs: %E\n"
msgstr ""

#: earm_wince_pe.c:1742 earmpe.c:1742 ei386pe.c:1742 ei386pe_posix.c:1742
#: emcorepe.c:1742 eshpe.c:1742
#, c-format
msgid "%P: errors encountered processing file %s for interworking\n"
msgstr ""

#: earm_wince_pe.c:1909 earmelf.c:520 earmelf_fbsd.c:520 earmelf_fuchsia.c:521
#: earmelf_linux.c:521 earmelf_linux_eabi.c:521 earmelf_linux_fdpiceabi.c:521
#: earmelf_nacl.c:521 earmelf_nbsd.c:520 earmelf_phoenix.c:521
#: earmelf_vxworks.c:520 earmelfb.c:520 earmelfb_fbsd.c:520
#: earmelfb_fuchsia.c:521 earmelfb_linux.c:521 earmelfb_linux_eabi.c:521
#: earmelfb_linux_fdpiceabi.c:521 earmelfb_nacl.c:521 earmelfb_nbsd.c:520
#: earmnto.c:520 earmpe.c:1909 earmsymbian.c:520 ei386pe.c:1909
#: ei386pe_posix.c:1909 emcorepe.c:1909 eshpe.c:1909
msgid "%P: warning: '--thumb-entry %s' is overriding '-e %s'\n"
msgstr ""

#: earm_wince_pe.c:1914 earmelf.c:525 earmelf_fbsd.c:525 earmelf_fuchsia.c:526
#: earmelf_linux.c:526 earmelf_linux_eabi.c:526 earmelf_linux_fdpiceabi.c:526
#: earmelf_nacl.c:526 earmelf_nbsd.c:525 earmelf_phoenix.c:526
#: earmelf_vxworks.c:525 earmelfb.c:525 earmelfb_fbsd.c:525
#: earmelfb_fuchsia.c:526 earmelfb_linux.c:526 earmelfb_linux_eabi.c:526
#: earmelfb_linux_fdpiceabi.c:526 earmelfb_nacl.c:526 earmelfb_nbsd.c:525
#: earmnto.c:525 earmpe.c:1914 earmsymbian.c:525 ei386pe.c:1914
#: ei386pe_posix.c:1914 emcorepe.c:1914 eshpe.c:1914
msgid "%P: warning: cannot find thumb start symbol %s\n"
msgstr ""

#: earmelf.c:138 earmelf_fbsd.c:138 earmelf_fuchsia.c:139 earmelf_linux.c:139
#: earmelf_linux_eabi.c:139 earmelf_linux_fdpiceabi.c:139 earmelf_nacl.c:139
#: earmelf_nbsd.c:138 earmelf_phoenix.c:139 earmelf_vxworks.c:138
#: earmelfb.c:138 earmelfb_fbsd.c:138 earmelfb_fuchsia.c:139
#: earmelfb_linux.c:139 earmelfb_linux_eabi.c:139
#: earmelfb_linux_fdpiceabi.c:139 earmelfb_nacl.c:139 earmelfb_nbsd.c:138
#: earmnto.c:138 earmsymbian.c:138 ei386beos.c:615
#, c-format
msgid "%P: errors encountered processing file %s\n"
msgstr ""

#: earmelf.c:551 earmelf_fbsd.c:551 earmelf_fuchsia.c:552 earmelf_linux.c:552
#: earmelf_linux_eabi.c:552 earmelf_linux_fdpiceabi.c:552 earmelf_nacl.c:552
#: earmelf_nbsd.c:551 earmelf_phoenix.c:552 earmelf_vxworks.c:551
#: earmelfb.c:551 earmelfb_fbsd.c:551 earmelfb_fuchsia.c:552
#: earmelfb_linux.c:552 earmelfb_linux_eabi.c:552
#: earmelfb_linux_fdpiceabi.c:552 earmelfb_nacl.c:552 earmelfb_nbsd.c:551
#: earmnto.c:551 earmsymbian.c:551
msgid "%F%P: %s: can't open: %E\n"
msgstr ""

#: earmelf.c:554 earmelf_fbsd.c:554 earmelf_fuchsia.c:555 earmelf_linux.c:555
#: earmelf_linux_eabi.c:555 earmelf_linux_fdpiceabi.c:555 earmelf_nacl.c:555
#: earmelf_nbsd.c:554 earmelf_phoenix.c:555 earmelf_vxworks.c:554
#: earmelfb.c:554 earmelfb_fbsd.c:554 earmelfb_fuchsia.c:555
#: earmelfb_linux.c:555 earmelfb_linux_eabi.c:555
#: earmelfb_linux_fdpiceabi.c:555 earmelfb_nacl.c:555 earmelfb_nbsd.c:554
#: earmnto.c:554 earmsymbian.c:554
msgid "%F%P: %s: not a relocatable file: %E\n"
msgstr ""

#: earmelf.c:1034 earmelf_fbsd.c:1034 earmelf_fuchsia.c:1039
#: earmelf_linux.c:1039 earmelf_linux_eabi.c:1039
#: earmelf_linux_fdpiceabi.c:1039 earmelf_nacl.c:1039 earmelf_nbsd.c:1034
#: earmelf_phoenix.c:1039 earmelf_vxworks.c:1070 earmelfb.c:1034
#: earmelfb_fbsd.c:1034 earmelfb_fuchsia.c:1039 earmelfb_linux.c:1039
#: earmelfb_linux_eabi.c:1039 earmelfb_linux_fdpiceabi.c:1039
#: earmelfb_nacl.c:1039 earmelfb_nbsd.c:1034 earmnto.c:1009 earmsymbian.c:1034
msgid "%P: unrecognized VFP11 fix type '%s'\n"
msgstr ""

#: earmelf.c:1047 earmelf_fbsd.c:1047 earmelf_fuchsia.c:1052
#: earmelf_linux.c:1052 earmelf_linux_eabi.c:1052
#: earmelf_linux_fdpiceabi.c:1052 earmelf_nacl.c:1052 earmelf_nbsd.c:1047
#: earmelf_phoenix.c:1052 earmelf_vxworks.c:1083 earmelfb.c:1047
#: earmelfb_fbsd.c:1047 earmelfb_fuchsia.c:1052 earmelfb_linux.c:1052
#: earmelfb_linux_eabi.c:1052 earmelfb_linux_fdpiceabi.c:1052
#: earmelfb_nacl.c:1052 earmelfb_nbsd.c:1047 earmnto.c:1022 earmsymbian.c:1047
msgid "%P: unrecognized STM32L4XX fix type '%s'\n"
msgstr ""

#: earmelf.c:1114 earmelf_fbsd.c:1114 earmelf_fuchsia.c:1119
#: earmelf_linux.c:1119 earmelf_linux_eabi.c:1119
#: earmelf_linux_fdpiceabi.c:1119 earmelf_nacl.c:1119 earmelf_nbsd.c:1114
#: earmelf_phoenix.c:1119 earmelf_vxworks.c:1154 earmelfb.c:1114
#: earmelfb_fbsd.c:1114 earmelfb_fuchsia.c:1119 earmelfb_linux.c:1119
#: earmelfb_linux_eabi.c:1119 earmelfb_linux_fdpiceabi.c:1119
#: earmelfb_nacl.c:1119 earmelfb_nbsd.c:1114 earmnto.c:1089 earmsymbian.c:1114
#, c-format
msgid ""
"  --thumb-entry=<sym>         Set the entry point to be Thumb symbol <sym>\n"
msgstr ""

#: earmelf.c:1115 earmelf_fbsd.c:1115 earmelf_fuchsia.c:1120
#: earmelf_linux.c:1120 earmelf_linux_eabi.c:1120
#: earmelf_linux_fdpiceabi.c:1120 earmelf_nacl.c:1120 earmelf_nbsd.c:1115
#: earmelf_phoenix.c:1120 earmelf_vxworks.c:1155 earmelfb.c:1115
#: earmelfb_fbsd.c:1115 earmelfb_fuchsia.c:1120 earmelfb_linux.c:1120
#: earmelfb_linux_eabi.c:1120 earmelfb_linux_fdpiceabi.c:1120
#: earmelfb_nacl.c:1120 earmelfb_nbsd.c:1115 earmnto.c:1090 earmsymbian.c:1115
#, c-format
msgid "  --be8                       Output BE8 format image\n"
msgstr ""

#: earmelf.c:1116 earmelf_fbsd.c:1116 earmelf_fuchsia.c:1121
#: earmelf_linux.c:1121 earmelf_linux_eabi.c:1121
#: earmelf_linux_fdpiceabi.c:1121 earmelf_nacl.c:1121 earmelf_nbsd.c:1116
#: earmelf_phoenix.c:1121 earmelf_vxworks.c:1156 earmelfb.c:1116
#: earmelfb_fbsd.c:1116 earmelfb_fuchsia.c:1121 earmelfb_linux.c:1121
#: earmelfb_linux_eabi.c:1121 earmelfb_linux_fdpiceabi.c:1121
#: earmelfb_nacl.c:1121 earmelfb_nbsd.c:1116 earmnto.c:1091 earmsymbian.c:1116
#, c-format
msgid "  --target1-rel               Interpret R_ARM_TARGET1 as R_ARM_REL32\n"
msgstr ""

#: earmelf.c:1117 earmelf_fbsd.c:1117 earmelf_fuchsia.c:1122
#: earmelf_linux.c:1122 earmelf_linux_eabi.c:1122
#: earmelf_linux_fdpiceabi.c:1122 earmelf_nacl.c:1122 earmelf_nbsd.c:1117
#: earmelf_phoenix.c:1122 earmelf_vxworks.c:1157 earmelfb.c:1117
#: earmelfb_fbsd.c:1117 earmelfb_fuchsia.c:1122 earmelfb_linux.c:1122
#: earmelfb_linux_eabi.c:1122 earmelfb_linux_fdpiceabi.c:1122
#: earmelfb_nacl.c:1122 earmelfb_nbsd.c:1117 earmnto.c:1092 earmsymbian.c:1117
#, c-format
msgid "  --target1-abs               Interpret R_ARM_TARGET1 as R_ARM_ABS32\n"
msgstr ""

#: earmelf.c:1118 earmelf_fbsd.c:1118 earmelf_fuchsia.c:1123
#: earmelf_linux.c:1123 earmelf_linux_eabi.c:1123
#: earmelf_linux_fdpiceabi.c:1123 earmelf_nacl.c:1123 earmelf_nbsd.c:1118
#: earmelf_phoenix.c:1123 earmelf_vxworks.c:1158 earmelfb.c:1118
#: earmelfb_fbsd.c:1118 earmelfb_fuchsia.c:1123 earmelfb_linux.c:1123
#: earmelfb_linux_eabi.c:1123 earmelfb_linux_fdpiceabi.c:1123
#: earmelfb_nacl.c:1123 earmelfb_nbsd.c:1118 earmnto.c:1093 earmsymbian.c:1118
#, c-format
msgid "  --target2=<type>            Specify definition of R_ARM_TARGET2\n"
msgstr ""

#: earmelf.c:1119 earmelf_fbsd.c:1119 earmelf_fuchsia.c:1124
#: earmelf_linux.c:1124 earmelf_linux_eabi.c:1124
#: earmelf_linux_fdpiceabi.c:1124 earmelf_nacl.c:1124 earmelf_nbsd.c:1119
#: earmelf_phoenix.c:1124 earmelf_vxworks.c:1159 earmelfb.c:1119
#: earmelfb_fbsd.c:1119 earmelfb_fuchsia.c:1124 earmelfb_linux.c:1124
#: earmelfb_linux_eabi.c:1124 earmelfb_linux_fdpiceabi.c:1124
#: earmelfb_nacl.c:1124 earmelfb_nbsd.c:1119 earmnto.c:1094 earmsymbian.c:1119
#, c-format
msgid "  --fix-v4bx                  Rewrite BX rn as MOV pc, rn for ARMv4\n"
msgstr ""

#: earmelf.c:1120 earmelf_fbsd.c:1120 earmelf_fuchsia.c:1125
#: earmelf_linux.c:1125 earmelf_linux_eabi.c:1125
#: earmelf_linux_fdpiceabi.c:1125 earmelf_nacl.c:1125 earmelf_nbsd.c:1120
#: earmelf_phoenix.c:1125 earmelf_vxworks.c:1160 earmelfb.c:1120
#: earmelfb_fbsd.c:1120 earmelfb_fuchsia.c:1125 earmelfb_linux.c:1125
#: earmelfb_linux_eabi.c:1125 earmelfb_linux_fdpiceabi.c:1125
#: earmelfb_nacl.c:1125 earmelfb_nbsd.c:1120 earmnto.c:1095 earmsymbian.c:1120
#, c-format
msgid ""
"  --fix-v4bx-interworking     Rewrite BX rn branch to ARMv4 interworking "
"veneer\n"
msgstr ""

#: earmelf.c:1121 earmelf_fbsd.c:1121 earmelf_fuchsia.c:1126
#: earmelf_linux.c:1126 earmelf_linux_eabi.c:1126
#: earmelf_linux_fdpiceabi.c:1126 earmelf_nacl.c:1126 earmelf_nbsd.c:1121
#: earmelf_phoenix.c:1126 earmelf_vxworks.c:1161 earmelfb.c:1121
#: earmelfb_fbsd.c:1121 earmelfb_fuchsia.c:1126 earmelfb_linux.c:1126
#: earmelfb_linux_eabi.c:1126 earmelfb_linux_fdpiceabi.c:1126
#: earmelfb_nacl.c:1126 earmelfb_nbsd.c:1121 earmnto.c:1096 earmsymbian.c:1121
#, c-format
msgid "  --use-blx                   Enable use of BLX instructions\n"
msgstr ""

#: earmelf.c:1122 earmelf_fbsd.c:1122 earmelf_fuchsia.c:1127
#: earmelf_linux.c:1127 earmelf_linux_eabi.c:1127
#: earmelf_linux_fdpiceabi.c:1127 earmelf_nacl.c:1127 earmelf_nbsd.c:1122
#: earmelf_phoenix.c:1127 earmelf_vxworks.c:1162 earmelfb.c:1122
#: earmelfb_fbsd.c:1122 earmelfb_fuchsia.c:1127 earmelfb_linux.c:1127
#: earmelfb_linux_eabi.c:1127 earmelfb_linux_fdpiceabi.c:1127
#: earmelfb_nacl.c:1127 earmelfb_nbsd.c:1122 earmnto.c:1097 earmsymbian.c:1122
#, c-format
msgid "  --vfp11-denorm-fix          Specify how to fix VFP11 denorm erratum\n"
msgstr ""

#: earmelf.c:1123 earmelf_fbsd.c:1123 earmelf_fuchsia.c:1128
#: earmelf_linux.c:1128 earmelf_linux_eabi.c:1128
#: earmelf_linux_fdpiceabi.c:1128 earmelf_nacl.c:1128 earmelf_nbsd.c:1123
#: earmelf_phoenix.c:1128 earmelf_vxworks.c:1163 earmelfb.c:1123
#: earmelfb_fbsd.c:1123 earmelfb_fuchsia.c:1128 earmelfb_linux.c:1128
#: earmelfb_linux_eabi.c:1128 earmelfb_linux_fdpiceabi.c:1128
#: earmelfb_nacl.c:1128 earmelfb_nbsd.c:1123 earmnto.c:1098 earmsymbian.c:1123
#, c-format
msgid ""
"  --fix-stm32l4xx-629360      Specify how to fix STM32L4XX 629360 erratum\n"
msgstr ""

#: earmelf.c:1129 earmelf_fbsd.c:1129 earmelf_fuchsia.c:1134
#: earmelf_linux.c:1134 earmelf_linux_eabi.c:1134
#: earmelf_linux_fdpiceabi.c:1134 earmelf_nacl.c:1134 earmelf_nbsd.c:1129
#: earmelf_phoenix.c:1134 earmelf_vxworks.c:1169 earmelfb.c:1129
#: earmelfb_fbsd.c:1129 earmelfb_fuchsia.c:1134 earmelfb_linux.c:1134
#: earmelfb_linux_eabi.c:1134 earmelfb_linux_fdpiceabi.c:1134
#: earmelfb_nacl.c:1134 earmelfb_nbsd.c:1129 earmnto.c:1104 earmsymbian.c:1129
#, c-format
msgid ""
"  --long-plt                  Generate long .plt entries\n"
"                              to handle large .plt/.got displacements\n"
msgstr ""

#: earmelf.c:1131 earmelf_fbsd.c:1131 earmelf_fuchsia.c:1136
#: earmelf_linux.c:1136 earmelf_linux_eabi.c:1136
#: earmelf_linux_fdpiceabi.c:1136 earmelf_nacl.c:1136 earmelf_nbsd.c:1131
#: earmelf_phoenix.c:1136 earmelf_vxworks.c:1171 earmelfb.c:1131
#: earmelfb_fbsd.c:1131 earmelfb_fuchsia.c:1136 earmelfb_linux.c:1136
#: earmelfb_linux_eabi.c:1136 earmelfb_linux_fdpiceabi.c:1136
#: earmelfb_nacl.c:1136 earmelfb_nbsd.c:1131 earmnto.c:1106 earmsymbian.c:1131
#, c-format
msgid ""
"  --cmse-implib               Make import library to be a secure gateway "
"import\n"
"                                library as per ARMv8-M Security Extensions\n"
msgstr ""

#: earmelf.c:1133 earmelf_fbsd.c:1133 earmelf_fuchsia.c:1138
#: earmelf_linux.c:1138 earmelf_linux_eabi.c:1138
#: earmelf_linux_fdpiceabi.c:1138 earmelf_nacl.c:1138 earmelf_nbsd.c:1133
#: earmelf_phoenix.c:1138 earmelf_vxworks.c:1173 earmelfb.c:1133
#: earmelfb_fbsd.c:1133 earmelfb_fuchsia.c:1138 earmelfb_linux.c:1138
#: earmelfb_linux_eabi.c:1138 earmelfb_linux_fdpiceabi.c:1138
#: earmelfb_nacl.c:1138 earmelfb_nbsd.c:1133 earmnto.c:1108 earmsymbian.c:1133
#, c-format
msgid ""
"  --in-implib                 Import library whose symbols address must\n"
"                                remain stable\n"
msgstr ""

#: earmelf.c:1144 earmelf_fbsd.c:1144 earmelf_fuchsia.c:1149
#: earmelf_linux.c:1149 earmelf_linux_eabi.c:1149
#: earmelf_linux_fdpiceabi.c:1149 earmelf_nacl.c:1149 earmelf_nbsd.c:1144
#: earmelf_phoenix.c:1149 earmelf_vxworks.c:1184 earmelfb.c:1144
#: earmelfb_fbsd.c:1144 earmelfb_fuchsia.c:1149 earmelfb_linux.c:1149
#: earmelfb_linux_eabi.c:1149 earmelfb_linux_fdpiceabi.c:1149
#: earmelfb_nacl.c:1149 earmelfb_nbsd.c:1144 earmnto.c:1119 earmsymbian.c:1144
#, c-format
msgid ""
"  --[no-]fix-cortex-a8        Disable/enable Cortex-A8 Thumb-2 branch "
"erratum fix\n"
msgstr ""

#: earmelf.c:1145 earmelf_fbsd.c:1145 earmelf_fuchsia.c:1150
#: earmelf_linux.c:1150 earmelf_linux_eabi.c:1150
#: earmelf_linux_fdpiceabi.c:1150 earmelf_nacl.c:1150 earmelf_nbsd.c:1145
#: earmelf_phoenix.c:1150 earmelf_vxworks.c:1185 earmelfb.c:1145
#: earmelfb_fbsd.c:1145 earmelfb_fuchsia.c:1150 earmelfb_linux.c:1150
#: earmelfb_linux_eabi.c:1150 earmelfb_linux_fdpiceabi.c:1150
#: earmelfb_nacl.c:1150 earmelfb_nbsd.c:1145 earmnto.c:1120 earmsymbian.c:1145
#, c-format
msgid "  --no-merge-exidx-entries    Disable merging exidx entries\n"
msgstr ""

#: earmelf.c:1146 earmelf_fbsd.c:1146 earmelf_fuchsia.c:1151
#: earmelf_linux.c:1151 earmelf_linux_eabi.c:1151
#: earmelf_linux_fdpiceabi.c:1151 earmelf_nacl.c:1151 earmelf_nbsd.c:1146
#: earmelf_phoenix.c:1151 earmelf_vxworks.c:1186 earmelfb.c:1146
#: earmelfb_fbsd.c:1146 earmelfb_fuchsia.c:1151 earmelfb_linux.c:1151
#: earmelfb_linux_eabi.c:1151 earmelfb_linux_fdpiceabi.c:1151
#: earmelfb_nacl.c:1151 earmelfb_nbsd.c:1146 earmnto.c:1121 earmsymbian.c:1146
#, c-format
msgid ""
"  --[no-]fix-arm1176          Disable/enable ARM1176 BLX immediate erratum "
"fix\n"
msgstr ""

#: earmelf_vxworks.c:600 eelf32_sparc_vxworks.c:71 eelf32ebmipvxworks.c:267
#: eelf32elmipvxworks.c:267 eelf32ppcvxworks.c:236 eelf_i386_vxworks.c:95
#: eshelf_vxworks.c:71 eshlelf_vxworks.c:71
msgid "%X%P: cannot create dynamic sections %E\n"
msgstr ""

#: earmelf_vxworks.c:606 eelf32_sparc_vxworks.c:77 eelf32ebmipvxworks.c:273
#: eelf32elmipvxworks.c:273 eelf32ppcvxworks.c:242 eelf_i386_vxworks.c:101
#: eshelf_vxworks.c:77 eshlelf_vxworks.c:77
msgid "%X%P: dynamic sections created in non-dynamic link\n"
msgstr ""

#: earmelf_vxworks.c:1188 eelf32_sparc_vxworks.c:491 eelf32ebmipvxworks.c:749
#: eelf32elmipvxworks.c:749 eelf32ppcvxworks.c:814 eelf_i386_vxworks.c:568
#: eshelf_vxworks.c:461 eshlelf_vxworks.c:461
#, c-format
msgid "  --force-dynamic             Always create dynamic sections\n"
msgstr ""

#: eavr1.c:122 eavr2.c:122 eavr25.c:122 eavr3.c:122 eavr31.c:122 eavr35.c:122
#: eavr4.c:122 eavr5.c:122 eavr51.c:122 eavr6.c:122 eavrtiny.c:122
#: eavrxmega1.c:122 eavrxmega2.c:122 eavrxmega3.c:122 eavrxmega4.c:122
#: eavrxmega5.c:122 eavrxmega6.c:122 eavrxmega7.c:122
msgid "%X%P: can not setup the input section list: %E\n"
msgstr ""

#: eavr1.c:157 eavr2.c:157 eavr25.c:157 eavr3.c:157 eavr31.c:157 eavr35.c:157
#: eavr4.c:157 eavr5.c:157 eavr51.c:157 eavr6.c:157 eavrtiny.c:157
#: eavrxmega1.c:157 eavrxmega2.c:157 eavrxmega3.c:157 eavrxmega4.c:157
#: eavrxmega5.c:157 eavrxmega6.c:157 eavrxmega7.c:157
msgid "%X%P: can not create stub BFD: %E\n"
msgstr ""

#: eavr1.c:531 eavr2.c:531 eavr25.c:531 eavr3.c:531 eavr31.c:531 eavr35.c:531
#: eavr4.c:531 eavr5.c:531 eavr51.c:531 eavr6.c:531 eavrtiny.c:531
#: eavrxmega1.c:531 eavrxmega2.c:531 eavrxmega3.c:531 eavrxmega4.c:531
#: eavrxmega5.c:531 eavrxmega6.c:531 eavrxmega7.c:531
#, c-format
msgid ""
"  --pmem-wrap-around=<val>    Make the linker relaxation machine assume that "
"a\n"
"                                program counter wrap-around occurs at "
"address\n"
"                                <val>.  Supported values: 8k, 16k, 32k and "
"64k.\n"
msgstr ""

#: eavr1.c:537 eavr2.c:537 eavr25.c:537 eavr3.c:537 eavr31.c:537 eavr35.c:537
#: eavr4.c:537 eavr5.c:537 eavr51.c:537 eavr6.c:537 eavrtiny.c:537
#: eavrxmega1.c:537 eavrxmega2.c:537 eavrxmega3.c:537 eavrxmega4.c:537
#: eavrxmega5.c:537 eavrxmega6.c:537 eavrxmega7.c:537
#, c-format
msgid ""
"  --no-call-ret-replacement   The relaxation machine normally will\n"
"                                substitute two immediately following call/"
"ret\n"
"                                instructions by a single jump instruction.\n"
"                                This option disables this optimization.\n"
msgstr ""

#: eavr1.c:545 eavr2.c:545 eavr25.c:545 eavr3.c:545 eavr31.c:545 eavr35.c:545
#: eavr4.c:545 eavr5.c:545 eavr51.c:545 eavr6.c:545 eavrtiny.c:545
#: eavrxmega1.c:545 eavrxmega2.c:545 eavrxmega3.c:545 eavrxmega4.c:545
#: eavrxmega5.c:545 eavrxmega6.c:545 eavrxmega7.c:545
#, c-format
msgid ""
"  --no-stubs                  If the linker detects to attempt to access\n"
"                                an instruction beyond 128k by a reloc that\n"
"                                is limited to 128k max, it inserts a jump\n"
"                                stub. You can de-active this with this "
"switch.\n"
msgstr ""

#: eavr1.c:553 eavr2.c:553 eavr25.c:553 eavr3.c:553 eavr31.c:553 eavr35.c:553
#: eavr4.c:553 eavr5.c:553 eavr51.c:553 eavr6.c:553 eavrtiny.c:553
#: eavrxmega1.c:553 eavrxmega2.c:553 eavrxmega3.c:553 eavrxmega4.c:553
#: eavrxmega5.c:553 eavrxmega6.c:553 eavrxmega7.c:553
#, c-format
msgid "  --debug-stubs               Used for debugging avr-ld.\n"
msgstr ""

#: eavr1.c:555 eavr2.c:555 eavr25.c:555 eavr3.c:555 eavr31.c:555 eavr35.c:555
#: eavr4.c:555 eavr5.c:555 eavr51.c:555 eavr6.c:555 eavrtiny.c:555
#: eavrxmega1.c:555 eavrxmega2.c:555 eavrxmega3.c:555 eavrxmega4.c:555
#: eavrxmega5.c:555 eavrxmega6.c:555 eavrxmega7.c:555
#, c-format
msgid "  --debug-relax               Used for debugging avr-ld.\n"
msgstr ""

#: ecskyelf.c:275 ecskyelf_linux.c:275
msgid "%X%P: cannot size stub section: %E\n"
msgstr ""

#: ecskyelf.c:292 ecskyelf_linux.c:292
msgid "%X%P: cannot build stubs: %E\n"
msgstr ""

#: ecskyelf.c:548 ecskyelf_linux.c:711
#, c-format
msgid ""
"  --[no-]branch-stub          Disable/enable use of stubs to expand branch\n"
"                                instructions that cannot reach the target.\n"
msgstr ""

#: ecskyelf.c:552 ecskyelf_linux.c:715
#, c-format
msgid ""
"  --stub-group-size=N         Maximum size of a group of input sections\n"
"                                handled by one stub section.\n"
msgstr ""

#: ed30v_e.c:73 ed30v_o.c:73 ed30velf.c:73 eelf32_dlx.c:73 eelf32fr30.c:73
#: eelf32frv.c:73 eelf32ft32.c:73 eelf32iq10.c:73 eelf32iq2000.c:73
#: eelf32mt.c:73 em9s12zelf.c:73 emn10200.c:73 emoxiebox.c:73 emsp430X.c:98
#: emsp430elf.c:98 epjelf.c:73 epjlelf.c:73 exgateelf.c:73
msgid "%X%P: can not size group sections: %E\n"
msgstr ""

#: eelf32_spu.c:255 ev850.c:73 ev850_rh850.c:73
msgid "%X%P: can not create note section: %E\n"
msgstr ""

#: eelf32_spu.c:344
msgid "%F%P: no built-in overlay manager\n"
msgstr ""

#: eelf32_spu.c:354
msgid "%X%P: can not open built-in overlay manager: %E\n"
msgstr ""

#: eelf32_spu.c:360
msgid "%X%P: can not load built-in overlay manager: %E\n"
msgstr ""

#: eelf32_spu.c:420
msgid "%X%P: can not find overlays: %E\n"
msgstr ""

#: eelf32_spu.c:427
msgid "%P: --auto-overlay ignored with user overlay script\n"
msgstr ""

#: eelf32_spu.c:448
msgid "%X%P: can not size overlay stubs: %E\n"
msgstr ""

#: eelf32_spu.c:521
msgid "%F%P: can not open script: %E\n"
msgstr ""

#: eelf32_spu.c:568
msgid "%X%P: %pA exceeds local store range\n"
msgstr ""

#: eelf32_spu.c:571
msgid "%P: --auto-overlay ignored with zero local store range\n"
msgstr ""

#: eelf32_spu.c:675
#, c-format
msgid "running: %s \"%s\" \"%s\" \"%s\" \"%s\"\n"
msgstr ""

#: eelf32_spu.c:1025
msgid "%F%P: invalid --local-store address range `%s'\n"
msgstr ""

#: eelf32_spu.c:1061
msgid "%F%P: invalid --num-lines/--num-regions `%u'\n"
msgstr ""

#: eelf32_spu.c:1066
msgid "%F%P: invalid --line-size/--region-size `%u'\n"
msgstr ""

#: eelf32_spu.c:1087
msgid "%F%P: invalid --num-lines/--num-regions `%s'\n"
msgstr ""

#: eelf32_spu.c:1100
msgid "%F%P: invalid --line-size/--region-size `%s'\n"
msgstr ""

#: eelf32_spu.c:1109
msgid "%F%P: invalid --fixed-space value `%s'\n"
msgstr ""

#: eelf32_spu.c:1118
msgid "%F%P: invalid --reserved-space value `%s'\n"
msgstr ""

#: eelf32_spu.c:1127
msgid "%F%P: invalid --extra-stack-space value `%s'\n"
msgstr ""

#: eelf32_spu.c:1164
#, c-format
msgid "  --plugin                    Make SPU plugin\n"
msgstr ""

#: eelf32_spu.c:1166
#, c-format
msgid "  --no-overlays               No overlay handling\n"
msgstr ""

#: eelf32_spu.c:1168
#, c-format
msgid ""
"  --compact-stubs             Use smaller and possibly slower call stubs\n"
msgstr ""

#: eelf32_spu.c:1170
#, c-format
msgid "  --emit-stub-syms            Add symbols on overlay call stubs\n"
msgstr ""

#: eelf32_spu.c:1172
#, c-format
msgid ""
"  --extra-overlay-stubs       Add stubs on all calls out of overlay regions\n"
msgstr ""

#: eelf32_spu.c:1174
#, c-format
msgid "  --local-store=lo:hi         Valid address range\n"
msgstr ""

#: eelf32_spu.c:1176
#, c-format
msgid "  --stack-analysis            Estimate maximum stack requirement\n"
msgstr ""

#: eelf32_spu.c:1178
#, c-format
msgid ""
"  --emit-stack-syms           Add sym giving stack needed for each func\n"
msgstr ""

#: eelf32_spu.c:1180
#, c-format
msgid ""
"  --auto-overlay [=filename]  Create an overlay script in filename if\n"
"                                executable does not fit in local store\n"
msgstr ""

#: eelf32_spu.c:1183
#, c-format
msgid "  --auto-relink               Rerun linker using auto-overlay script\n"
msgstr ""

#: eelf32_spu.c:1185
#, c-format
msgid ""
"  --overlay-rodata            Place read-only data with associated function\n"
"                                code in overlays\n"
msgstr ""

#: eelf32_spu.c:1188
#, c-format
msgid "  --num-regions               Number of overlay buffers (default 1)\n"
msgstr ""

#: eelf32_spu.c:1190
#, c-format
msgid ""
"  --region-size               Size of overlay buffers (default 0, auto)\n"
msgstr ""

#: eelf32_spu.c:1192
#, c-format
msgid ""
"  --fixed-space=bytes         Local store for non-overlay code and data\n"
msgstr ""

#: eelf32_spu.c:1194
#, c-format
msgid ""
"  --reserved-space=bytes      Local store for stack and heap.  If not "
"specified\n"
"                                ld will estimate stack size and assume no "
"heap\n"
msgstr ""

#: eelf32_spu.c:1197
#, c-format
msgid ""
"  --extra-stack-space=bytes   Space for negative sp access (default 2000) "
"if\n"
"                                --reserved-space not given\n"
msgstr ""

#: eelf32_spu.c:1200
#, c-format
msgid "  --soft-icache               Generate software icache overlays\n"
msgstr ""

#: eelf32_spu.c:1202
#, c-format
msgid ""
"  --num-lines                 Number of soft-icache lines (default 32)\n"
msgstr ""

#: eelf32_spu.c:1204
#, c-format
msgid "  --line-size                 Size of soft-icache lines (default 1k)\n"
msgstr ""

#: eelf32_spu.c:1206
#, c-format
msgid "  --non-ia-text               Allow non-icache code in icache lines\n"
msgstr ""

#: eelf32_spu.c:1208
#, c-format
msgid "  --lrlive-analysis           Scan function prologue for lr liveness\n"
msgstr ""

#: eelf32_tic6x_be.c:88 eelf32_tic6x_elf_be.c:88 eelf32_tic6x_elf_le.c:88
#: eelf32_tic6x_le.c:88 eelf32_tic6x_linux_be.c:88 eelf32_tic6x_linux_le.c:88
msgid "%F%P: invalid --dsbt-index %d, outside DSBT size\n"
msgstr ""

#: eelf32_tic6x_be.c:554 eelf32_tic6x_elf_be.c:554 eelf32_tic6x_elf_le.c:554
#: eelf32_tic6x_le.c:554 eelf32_tic6x_linux_be.c:554
#: eelf32_tic6x_linux_le.c:554
msgid "%F%P: invalid --dsbt-index %s\n"
msgstr ""

#: eelf32_tic6x_be.c:564 eelf32_tic6x_elf_be.c:564 eelf32_tic6x_elf_le.c:564
#: eelf32_tic6x_le.c:564 eelf32_tic6x_linux_be.c:564
#: eelf32_tic6x_linux_le.c:564
msgid "%F%P: invalid --dsbt-size %s\n"
msgstr ""

#: eelf32_tic6x_be.c:580 eelf32_tic6x_elf_be.c:580 eelf32_tic6x_elf_le.c:580
#: eelf32_tic6x_le.c:580 eelf32_tic6x_linux_be.c:580
#: eelf32_tic6x_linux_le.c:580
#, c-format
msgid ""
"  --dsbt-index <index>    Use this as the DSBT index for the output object\n"
msgstr ""

#: eelf32_tic6x_be.c:581 eelf32_tic6x_elf_be.c:581 eelf32_tic6x_elf_le.c:581
#: eelf32_tic6x_le.c:581 eelf32_tic6x_linux_be.c:581
#: eelf32_tic6x_linux_le.c:581
#, c-format
msgid ""
"  --dsbt-size <index>     Use this as the number of entries in the DSBT "
"table\n"
msgstr ""

#: eelf32_tic6x_be.c:582 eelf32_tic6x_elf_be.c:582 eelf32_tic6x_elf_le.c:582
#: eelf32_tic6x_le.c:582 eelf32_tic6x_linux_be.c:582
#: eelf32_tic6x_linux_le.c:582
#, c-format
msgid "  --no-merge-exidx-entries\n"
msgstr ""

#: eelf32_tic6x_be.c:583 eelf32_tic6x_elf_be.c:583 eelf32_tic6x_elf_le.c:583
#: eelf32_tic6x_le.c:583 eelf32_tic6x_linux_be.c:583
#: eelf32_tic6x_linux_le.c:583
#, c-format
msgid "                          Disable merging exidx entries\n"
msgstr ""

#: eelf32_x86_64.c:5402 eelf_i386.c:5021 eelf_i386_be.c:456
#: eelf_i386_fbsd.c:496 eelf_i386_ldso.c:471 eelf_i386_sol2.c:627
#: eelf_i386_vxworks.c:523 eelf_iamcu.c:4999 eelf_k1om.c:5355
#: eelf_k1om_fbsd.c:5335 eelf_l1om.c:5355 eelf_l1om_fbsd.c:5335
#: eelf_x86_64.c:5402 eelf_x86_64_cloudabi.c:499 eelf_x86_64_fbsd.c:499
#: eelf_x86_64_sol2.c:630
msgid "%F%P: invalid number for -z call-nop=prefix-: %s\n"
msgstr ""

#: eelf32_x86_64.c:5411 eelf_i386.c:5030 eelf_i386_be.c:465
#: eelf_i386_fbsd.c:505 eelf_i386_ldso.c:480 eelf_i386_sol2.c:636
#: eelf_i386_vxworks.c:532 eelf_iamcu.c:5008 eelf_k1om.c:5364
#: eelf_k1om_fbsd.c:5344 eelf_l1om.c:5364 eelf_l1om_fbsd.c:5344
#: eelf_x86_64.c:5411 eelf_x86_64_cloudabi.c:508 eelf_x86_64_fbsd.c:508
#: eelf_x86_64_sol2.c:639
msgid "%F%P: invalid number for -z call-nop=suffix-: %s\n"
msgstr ""

#: eelf32_x86_64.c:5416 eelf_i386.c:5035 eelf_i386_be.c:470
#: eelf_i386_fbsd.c:510 eelf_i386_ldso.c:485 eelf_i386_sol2.c:641
#: eelf_i386_vxworks.c:537 eelf_iamcu.c:5013 eelf_k1om.c:5369
#: eelf_k1om_fbsd.c:5349 eelf_l1om.c:5369 eelf_l1om_fbsd.c:5349
#: eelf_x86_64.c:5416 eelf_x86_64_cloudabi.c:513 eelf_x86_64_fbsd.c:513
#: eelf_x86_64_sol2.c:644
msgid "%F%P: unsupported option: -z %s\n"
msgstr ""

#: eelf32_x86_64.c:5438 eelf_i386.c:5057 eelf_i386_fbsd.c:532
#: eelf_x86_64.c:5438 eelf_x86_64_cloudabi.c:535 eelf_x86_64_fbsd.c:535
#: eelf_x86_64_sol2.c:666
msgid "%F%P: invalid option for -z cet-report=: %s\n"
msgstr ""

#: eelf32_x86_64.c:5449 eelf_i386.c:5068 eelf_i386_fbsd.c:543
#: eelf_x86_64.c:5449 eelf_x86_64_cloudabi.c:546 eelf_x86_64_fbsd.c:546
#: eelf_x86_64_sol2.c:677
msgid "%F%P: invalid x86-64 ISA level: %s\n"
msgstr ""

#: eelf32_x86_64.c:5486 eelf_i386.c:5105 eelf_i386_be.c:486
#: eelf_i386_fbsd.c:580 eelf_i386_ldso.c:510 eelf_i386_sol2.c:666
#: eelf_i386_vxworks.c:558 eelf_iamcu.c:5038 eelf_k1om.c:5394
#: eelf_k1om_fbsd.c:5374 eelf_l1om.c:5394 eelf_l1om_fbsd.c:5374
#: eelf_x86_64.c:5489 eelf_x86_64_cloudabi.c:586 eelf_x86_64_fbsd.c:586
#: eelf_x86_64_sol2.c:717
#, c-format
msgid ""
"  -z noextern-protected-data  Do not treat protected data symbol as "
"external\n"
msgstr ""

#: eelf32_x86_64.c:5489 eelf32lppc.c:806 eelf32lppclinux.c:806
#: eelf32lppcnto.c:806 eelf32lppcsim.c:806 eelf32ppc.c:806 eelf32ppc_fbsd.c:806
#: eelf32ppclinux.c:806 eelf32ppcnto.c:806 eelf32ppcsim.c:806
#: eelf32ppcvxworks.c:784 eelf32ppcwindiss.c:806 eelf64lppc.c:1330
#: eelf64lppc_fbsd.c:1330 eelf64ppc.c:1330 eelf64ppc_fbsd.c:1330
#: eelf_i386.c:5108 eelf_i386_be.c:489 eelf_i386_fbsd.c:583
#: eelf_i386_ldso.c:513 eelf_i386_sol2.c:669 eelf_i386_vxworks.c:561
#: eelf_iamcu.c:5041 eelf_k1om.c:5397 eelf_k1om_fbsd.c:5377 eelf_l1om.c:5397
#: eelf_l1om_fbsd.c:5377 eelf_x86_64.c:5492 eelf_x86_64_cloudabi.c:589
#: eelf_x86_64_fbsd.c:589 eelf_x86_64_sol2.c:720
#, c-format
msgid ""
"  -z dynamic-undefined-weak   Make undefined weak symbols dynamic\n"
"  -z nodynamic-undefined-weak Do not make undefined weak symbols dynamic\n"
msgstr ""

#: eelf32_x86_64.c:5493 eelf_x86_64.c:5496 eelf_x86_64_cloudabi.c:593
#: eelf_x86_64_fbsd.c:593 eelf_x86_64_sol2.c:724
#, c-format
msgid "  -z noreloc-overflow         Disable relocation overflow check\n"
msgstr ""

#: eelf32_x86_64.c:5496 eelf_i386.c:5112 eelf_i386_be.c:493
#: eelf_i386_fbsd.c:587 eelf_i386_ldso.c:517 eelf_i386_sol2.c:673
#: eelf_i386_vxworks.c:565 eelf_iamcu.c:5045 eelf_k1om.c:5401
#: eelf_k1om_fbsd.c:5381 eelf_l1om.c:5401 eelf_l1om_fbsd.c:5381
#: eelf_x86_64.c:5499 eelf_x86_64_cloudabi.c:596 eelf_x86_64_fbsd.c:596
#: eelf_x86_64_sol2.c:727
#, c-format
msgid "  -z call-nop=PADDING         Use PADDING as 1-byte NOP for branch\n"
msgstr ""

#: eelf32_x86_64.c:5499 eelf_i386.c:5115 eelf_i386_fbsd.c:590
#: eelf_x86_64.c:5502 eelf_x86_64_cloudabi.c:599 eelf_x86_64_fbsd.c:599
#: eelf_x86_64_sol2.c:730
#, c-format
msgid "  -z ibtplt                   Generate IBT-enabled PLT entries\n"
msgstr ""

#: eelf32_x86_64.c:5501 eelf_i386.c:5117 eelf_i386_fbsd.c:592
#: eelf_x86_64.c:5504 eelf_x86_64_cloudabi.c:601 eelf_x86_64_fbsd.c:601
#: eelf_x86_64_sol2.c:732
#, c-format
msgid "  -z ibt                      Generate GNU_PROPERTY_X86_FEATURE_1_IBT\n"
msgstr ""

#: eelf32_x86_64.c:5503 eelf_i386.c:5119 eelf_i386_fbsd.c:594
#: eelf_x86_64.c:5506 eelf_x86_64_cloudabi.c:603 eelf_x86_64_fbsd.c:603
#: eelf_x86_64_sol2.c:734
#, c-format
msgid ""
"  -z shstk                    Generate GNU_PROPERTY_X86_FEATURE_1_SHSTK\n"
msgstr ""

#: eelf32_x86_64.c:5505 eelf_i386.c:5121 eelf_i386_fbsd.c:596
#: eelf_x86_64.c:5508 eelf_x86_64_cloudabi.c:605 eelf_x86_64_fbsd.c:605
#: eelf_x86_64_sol2.c:736
#, c-format
msgid ""
"  -z cet-report=[none|warning|error] (default: none)\n"
"                              Report missing IBT and SHSTK properties\n"
msgstr ""

#: eelf32_x86_64.c:5509 eelf_i386.c:5125 eelf_i386_fbsd.c:600
#: eelf_x86_64.c:5512 eelf_x86_64_cloudabi.c:609 eelf_x86_64_fbsd.c:609
#: eelf_x86_64_sol2.c:740
#, c-format
msgid ""
"  -z x86-64-{baseline|v[234]} Mark x86-64-{baseline|v[234]} ISA level as "
"needed\n"
msgstr ""

#: eelf32b4300.c:689 eelf32bmip.c:689 eelf32bmipn32.c:703 eelf32bsmip.c:703
#: eelf32btsmip.c:689 eelf32btsmip_fbsd.c:689 eelf32btsmipn32.c:689
#: eelf32btsmipn32_fbsd.c:689 eelf32ebmip.c:689 eelf32ebmipvxworks.c:728
#: eelf32elmip.c:689 eelf32elmipvxworks.c:728 eelf32l4300.c:689
#: eelf32lmip.c:689 eelf32lr5900.c:552 eelf32lr5900n32.c:551 eelf32lsmip.c:689
#: eelf32ltsmip.c:689 eelf32ltsmip_fbsd.c:689 eelf32ltsmipn32.c:689
#: eelf32ltsmipn32_fbsd.c:689 eelf32mipswindiss.c:526 eelf64bmip.c:703
#: eelf64btsmip.c:689 eelf64btsmip_fbsd.c:689 eelf64ltsmip.c:689
#: eelf64ltsmip_fbsd.c:689
#, c-format
msgid ""
"  --insn32                    Only generate 32-bit microMIPS instructions\n"
msgstr ""

#: eelf32b4300.c:692 eelf32bmip.c:692 eelf32bmipn32.c:706 eelf32bsmip.c:706
#: eelf32btsmip.c:692 eelf32btsmip_fbsd.c:692 eelf32btsmipn32.c:692
#: eelf32btsmipn32_fbsd.c:692 eelf32ebmip.c:692 eelf32ebmipvxworks.c:731
#: eelf32elmip.c:692 eelf32elmipvxworks.c:731 eelf32l4300.c:692
#: eelf32lmip.c:692 eelf32lr5900.c:555 eelf32lr5900n32.c:554 eelf32lsmip.c:692
#: eelf32ltsmip.c:692 eelf32ltsmip_fbsd.c:692 eelf32ltsmipn32.c:692
#: eelf32ltsmipn32_fbsd.c:692 eelf32mipswindiss.c:529 eelf64bmip.c:706
#: eelf64btsmip.c:692 eelf64btsmip_fbsd.c:692 eelf64ltsmip.c:692
#: eelf64ltsmip_fbsd.c:692
#, c-format
msgid "  --no-insn32                 Generate all microMIPS instructions\n"
msgstr ""

#: eelf32b4300.c:695 eelf32bmip.c:695 eelf32bmipn32.c:709 eelf32bsmip.c:709
#: eelf32btsmip.c:695 eelf32btsmip_fbsd.c:695 eelf32btsmipn32.c:695
#: eelf32btsmipn32_fbsd.c:695 eelf32ebmip.c:695 eelf32ebmipvxworks.c:734
#: eelf32elmip.c:695 eelf32elmipvxworks.c:734 eelf32l4300.c:695
#: eelf32lmip.c:695 eelf32lr5900.c:558 eelf32lr5900n32.c:557 eelf32lsmip.c:695
#: eelf32ltsmip.c:695 eelf32ltsmip_fbsd.c:695 eelf32ltsmipn32.c:695
#: eelf32ltsmipn32_fbsd.c:695 eelf32mipswindiss.c:532 eelf64bmip.c:709
#: eelf64btsmip.c:695 eelf64btsmip_fbsd.c:695 eelf64ltsmip.c:695
#: eelf64ltsmip_fbsd.c:695
#, c-format
msgid ""
"  --ignore-branch-isa         Accept invalid branch relocations requiring\n"
"                              an ISA mode switch\n"
msgstr ""

#: eelf32b4300.c:699 eelf32bmip.c:699 eelf32bmipn32.c:713 eelf32bsmip.c:713
#: eelf32btsmip.c:699 eelf32btsmip_fbsd.c:699 eelf32btsmipn32.c:699
#: eelf32btsmipn32_fbsd.c:699 eelf32ebmip.c:699 eelf32ebmipvxworks.c:738
#: eelf32elmip.c:699 eelf32elmipvxworks.c:738 eelf32l4300.c:699
#: eelf32lmip.c:699 eelf32lr5900.c:562 eelf32lr5900n32.c:561 eelf32lsmip.c:699
#: eelf32ltsmip.c:699 eelf32ltsmip_fbsd.c:699 eelf32ltsmipn32.c:699
#: eelf32ltsmipn32_fbsd.c:699 eelf32mipswindiss.c:536 eelf64bmip.c:713
#: eelf64btsmip.c:699 eelf64btsmip_fbsd.c:699 eelf64ltsmip.c:699
#: eelf64ltsmip_fbsd.c:699
#, c-format
msgid ""
"  --no-ignore-branch-isa      Reject invalid branch relocations requiring\n"
"                              an ISA mode switch\n"
msgstr ""

#: eelf32b4300.c:703 eelf32bmip.c:703 eelf32bmipn32.c:717 eelf32bsmip.c:717
#: eelf32btsmip.c:703 eelf32btsmip_fbsd.c:703 eelf32btsmipn32.c:703
#: eelf32btsmipn32_fbsd.c:703 eelf32ebmip.c:703 eelf32ebmipvxworks.c:742
#: eelf32elmip.c:703 eelf32elmipvxworks.c:742 eelf32l4300.c:703
#: eelf32lmip.c:703 eelf32lr5900.c:566 eelf32lr5900n32.c:565 eelf32lsmip.c:703
#: eelf32ltsmip.c:703 eelf32ltsmip_fbsd.c:703 eelf32ltsmipn32.c:703
#: eelf32ltsmipn32_fbsd.c:703 eelf32mipswindiss.c:540 eelf64bmip.c:717
#: eelf64btsmip.c:703 eelf64btsmip_fbsd.c:703 eelf64ltsmip.c:703
#: eelf64ltsmip_fbsd.c:703
#, c-format
msgid ""
"  --compact-branches          Generate compact branches/jumps for MIPS R6\n"
msgstr ""

#: eelf32b4300.c:706 eelf32bmip.c:706 eelf32bmipn32.c:720 eelf32bsmip.c:720
#: eelf32btsmip.c:706 eelf32btsmip_fbsd.c:706 eelf32btsmipn32.c:706
#: eelf32btsmipn32_fbsd.c:706 eelf32ebmip.c:706 eelf32ebmipvxworks.c:745
#: eelf32elmip.c:706 eelf32elmipvxworks.c:745 eelf32l4300.c:706
#: eelf32lmip.c:706 eelf32lr5900.c:569 eelf32lr5900n32.c:568 eelf32lsmip.c:706
#: eelf32ltsmip.c:706 eelf32ltsmip_fbsd.c:706 eelf32ltsmipn32.c:706
#: eelf32ltsmipn32_fbsd.c:706 eelf32mipswindiss.c:543 eelf64bmip.c:720
#: eelf64btsmip.c:706 eelf64btsmip_fbsd.c:706 eelf64ltsmip.c:706
#: eelf64ltsmip_fbsd.c:706
#, c-format
msgid ""
"  --no-compact-branches       Generate delay slot branches/jumps for MIPS "
"R6\n"
msgstr ""

#: eelf32bfin.c:445 eelf32bfinfd.c:470
#, c-format
msgid "  --code-in-l1                Put code in L1\n"
msgstr ""

#: eelf32bfin.c:447 eelf32bfinfd.c:472
#, c-format
msgid "  --data-in-l1                Put data in L1\n"
msgstr ""

#: eelf32cr16.c:85
msgid ""
"%F%P: %pB: all input objects must be COFF or ELF for --embedded-relocs\n"
msgstr ""

#: eelf32cr16.c:109 em68kelf.c:113 em68kelfnbsd.c:113
msgid "%F%P: %pB: can not create .emreloc section: %E\n"
msgstr ""

#: eelf32cr16.c:128 em68kelf.c:134 em68kelfnbsd.c:134
msgid "%X%P: %pB: section %s has relocs; can not use --embedded-relocs\n"
msgstr ""

#: eelf32cr16.c:184 em68kelf.c:177 em68kelfnbsd.c:177
msgid "%X%P: %pB: can not create runtime reloc information: %E\n"
msgstr ""

#: eelf32cr16.c:187 em68kelf.c:181 em68kelfnbsd.c:181
msgid "%X%P: %pB: can not create runtime reloc information: %s\n"
msgstr ""

#: eelf32lppc.c:96 eelf32lppclinux.c:96 eelf32lppcnto.c:96 eelf32lppcsim.c:96
#: eelf32ppc.c:96 eelf32ppc_fbsd.c:96 eelf32ppclinux.c:96 eelf32ppcnto.c:96
#: eelf32ppcsim.c:96 eelf32ppcwindiss.c:96
msgid "%X%P: select_plt_layout problem %E\n"
msgstr ""

#: eelf32lppc.c:160 eelf32lppclinux.c:160 eelf32lppcnto.c:160
#: eelf32lppcsim.c:160 eelf32ppc.c:160 eelf32ppc_fbsd.c:160
#: eelf32ppclinux.c:160 eelf32ppcnto.c:160 eelf32ppcsim.c:160
#: eelf32ppcvxworks.c:105 eelf32ppcwindiss.c:160 eelf64lppc.c:321
#: eelf64lppc_fbsd.c:321 eelf64ppc.c:321 eelf64ppc_fbsd.c:321
msgid "%X%P: inline PLT: %E\n"
msgstr ""

#: eelf32lppc.c:168 eelf32lppclinux.c:168 eelf32lppcnto.c:168
#: eelf32lppcsim.c:168 eelf32ppc.c:168 eelf32ppc_fbsd.c:168
#: eelf32ppclinux.c:168 eelf32ppcnto.c:168 eelf32ppcsim.c:168
#: eelf32ppcvxworks.c:113 eelf32ppcwindiss.c:168 eelf64lppc.c:325
#: eelf64lppc.c:344 eelf64lppc_fbsd.c:325 eelf64lppc_fbsd.c:344 eelf64ppc.c:325
#: eelf64ppc.c:344 eelf64ppc_fbsd.c:325 eelf64ppc_fbsd.c:344
msgid "%X%P: TLS problem %E\n"
msgstr ""

#: eelf32lppc.c:255 eelf32lppclinux.c:255 eelf32lppcnto.c:255
#: eelf32lppcsim.c:255 eelf32ppc.c:255 eelf32ppc_fbsd.c:255
#: eelf32ppclinux.c:255 eelf32ppcnto.c:255 eelf32ppcsim.c:255
#: eelf32ppcvxworks.c:200 eelf32ppcwindiss.c:255
msgid "%X%P: ppc_finish_symbols problem %E\n"
msgstr ""

#: eelf32lppc.c:747 eelf32lppclinux.c:747 eelf32lppcnto.c:747
#: eelf32lppcsim.c:747 eelf32ppc.c:747 eelf32ppc_fbsd.c:747
#: eelf32ppclinux.c:747 eelf32ppcnto.c:747 eelf32ppcsim.c:747
#: eelf32ppcvxworks.c:721 eelf32ppcwindiss.c:747 eelf64lppc.c:1197
#: eelf64lppc_fbsd.c:1197 eelf64ppc.c:1197 eelf64ppc_fbsd.c:1197
msgid "%F%P: invalid --plt-align `%s'\n"
msgstr ""

#: eelf32lppc.c:780 eelf32lppclinux.c:780 eelf32lppcnto.c:780
#: eelf32lppcsim.c:780 eelf32ppc.c:780 eelf32ppc_fbsd.c:780
#: eelf32ppclinux.c:780 eelf32ppcnto.c:780 eelf32ppcsim.c:780
#: eelf32ppcvxworks.c:754 eelf32ppcwindiss.c:780
msgid "%F%P: invalid pagesize `%s'\n"
msgstr ""

#: eelf32lppc.c:810 eelf32lppclinux.c:810 eelf32lppcnto.c:810
#: eelf32lppcsim.c:810 eelf32ppc.c:810 eelf32ppc_fbsd.c:810
#: eelf32ppclinux.c:810 eelf32ppcnto.c:810 eelf32ppcsim.c:810
#: eelf32ppcvxworks.c:788 eelf32ppcwindiss.c:810 eelf64lppc.c:1377
#: eelf64lppc_fbsd.c:1377 eelf64ppc.c:1377 eelf64ppc_fbsd.c:1377
#, c-format
msgid "  --emit-stub-syms            Label linker stubs with a symbol\n"
msgstr ""

#: eelf32lppc.c:813 eelf32lppclinux.c:813 eelf32lppcnto.c:813
#: eelf32lppcsim.c:813 eelf32ppc.c:813 eelf32ppc_fbsd.c:813
#: eelf32ppclinux.c:813 eelf32ppcnto.c:813 eelf32ppcsim.c:813
#: eelf32ppcvxworks.c:791 eelf32ppcwindiss.c:813 eelf64lppc.c:1380
#: eelf64lppc_fbsd.c:1380 eelf64ppc.c:1380 eelf64ppc_fbsd.c:1380
#, c-format
msgid "  --no-emit-stub-syms         Don't label linker stubs with a symbol\n"
msgstr ""

#: eelf32lppc.c:816 eelf32lppclinux.c:816 eelf32lppcnto.c:816
#: eelf32lppcsim.c:816 eelf32ppc.c:816 eelf32ppc_fbsd.c:816
#: eelf32ppclinux.c:816 eelf32ppcnto.c:816 eelf32ppcsim.c:816
#: eelf32ppcvxworks.c:794 eelf32ppcwindiss.c:816 eelf64lppc.c:1400
#: eelf64lppc_fbsd.c:1400 eelf64ppc.c:1400 eelf64ppc_fbsd.c:1400
#, c-format
msgid "  --no-tls-optimize           Don't try to optimize TLS accesses\n"
msgstr ""

#: eelf32lppc.c:819 eelf32lppclinux.c:819 eelf32lppcnto.c:819
#: eelf32lppcsim.c:819 eelf32ppc.c:819 eelf32ppc_fbsd.c:819
#: eelf32ppclinux.c:819 eelf32ppcnto.c:819 eelf32ppcsim.c:819
#: eelf32ppcvxworks.c:797 eelf32ppcwindiss.c:819 eelf64lppc.c:1406
#: eelf64lppc_fbsd.c:1406 eelf64ppc.c:1406 eelf64ppc_fbsd.c:1406
#, c-format
msgid "  --no-tls-get-addr-optimize  Don't use a special __tls_get_addr call\n"
msgstr ""

#: eelf32lppc.c:822 eelf32lppclinux.c:822 eelf32lppcnto.c:822
#: eelf32lppcsim.c:822 eelf32ppc.c:822 eelf32ppc_fbsd.c:822
#: eelf32ppclinux.c:822 eelf32ppcnto.c:822 eelf32ppcsim.c:822
#: eelf32ppcwindiss.c:822
#, c-format
msgid "  --secure-plt                Use new-style PLT if possible\n"
msgstr ""

#: eelf32lppc.c:825 eelf32lppclinux.c:825 eelf32lppcnto.c:825
#: eelf32lppcsim.c:825 eelf32ppc.c:825 eelf32ppc_fbsd.c:825
#: eelf32ppclinux.c:825 eelf32ppcnto.c:825 eelf32ppcsim.c:825
#: eelf32ppcwindiss.c:825
#, c-format
msgid "  --bss-plt                   Force old-style BSS PLT\n"
msgstr ""

#: eelf32lppc.c:828 eelf32lppclinux.c:828 eelf32lppcnto.c:828
#: eelf32lppcsim.c:828 eelf32ppc.c:828 eelf32ppc_fbsd.c:828
#: eelf32ppclinux.c:828 eelf32ppcnto.c:828 eelf32ppcsim.c:828
#: eelf32ppcwindiss.c:828
#, c-format
msgid "  --plt-align                 Align PLT call stubs to fit cache lines\n"
msgstr ""

#: eelf32lppc.c:831 eelf32lppclinux.c:831 eelf32lppcnto.c:831
#: eelf32lppcsim.c:831 eelf32ppc.c:831 eelf32ppc_fbsd.c:831
#: eelf32ppclinux.c:831 eelf32ppcnto.c:831 eelf32ppcsim.c:831
#: eelf32ppcwindiss.c:831 eelf64lppc.c:1359 eelf64lppc_fbsd.c:1359
#: eelf64ppc.c:1359 eelf64ppc_fbsd.c:1359
#, c-format
msgid "  --no-plt-align              Dont't align individual PLT call stubs\n"
msgstr ""

#: eelf32lppc.c:834 eelf32lppclinux.c:834 eelf32lppcnto.c:834
#: eelf32lppcsim.c:834 eelf32ppc.c:834 eelf32ppc_fbsd.c:834
#: eelf32ppclinux.c:834 eelf32ppcnto.c:834 eelf32ppcsim.c:834
#: eelf32ppcwindiss.c:834 eelf64lppc.c:1418 eelf64lppc_fbsd.c:1418
#: eelf64ppc.c:1418 eelf64ppc_fbsd.c:1418
#, c-format
msgid ""
"  --no-inline-optimize        Don't convert inline PLT to direct calls\n"
msgstr ""

#: eelf32lppc.c:837 eelf32lppclinux.c:837 eelf32lppcnto.c:837
#: eelf32lppcsim.c:837 eelf32ppc.c:837 eelf32ppc_fbsd.c:837
#: eelf32ppclinux.c:837 eelf32ppcnto.c:837 eelf32ppcsim.c:837
#: eelf32ppcwindiss.c:837
#, c-format
msgid "  --sdata-got                 Force GOT location just before .sdata\n"
msgstr ""

#: eelf32lppc.c:840 eelf32lppclinux.c:840 eelf32lppcnto.c:840
#: eelf32lppcsim.c:840 eelf32ppc.c:840 eelf32ppc_fbsd.c:840
#: eelf32ppclinux.c:840 eelf32ppcnto.c:840 eelf32ppcsim.c:840
#: eelf32ppcvxworks.c:800 eelf32ppcwindiss.c:840
#, c-format
msgid ""
"  --ppc476-workaround [=pagesize]\n"
"                              Avoid a cache bug on ppc476\n"
msgstr ""

#: eelf32lppc.c:844 eelf32lppclinux.c:844 eelf32lppcnto.c:844
#: eelf32lppcsim.c:844 eelf32ppc.c:844 eelf32ppc_fbsd.c:844
#: eelf32ppclinux.c:844 eelf32ppcnto.c:844 eelf32ppcsim.c:844
#: eelf32ppcvxworks.c:804 eelf32ppcwindiss.c:844
#, c-format
msgid "  --no-ppc476-workaround      Disable workaround\n"
msgstr ""

#: eelf32lppc.c:847 eelf32lppclinux.c:847 eelf32lppcnto.c:847
#: eelf32lppcsim.c:847 eelf32ppc.c:847 eelf32ppc_fbsd.c:847
#: eelf32ppclinux.c:847 eelf32ppcnto.c:847 eelf32ppcsim.c:847
#: eelf32ppcvxworks.c:807 eelf32ppcwindiss.c:847
#, c-format
msgid "  --no-pic-fixup              Don't edit non-pic to pic\n"
msgstr ""

#: eelf32lppc.c:850 eelf32lppclinux.c:850 eelf32lppcnto.c:850
#: eelf32lppcsim.c:850 eelf32ppc.c:850 eelf32ppc_fbsd.c:850
#: eelf32ppclinux.c:850 eelf32ppcnto.c:850 eelf32ppcsim.c:850
#: eelf32ppcvxworks.c:810 eelf32ppcwindiss.c:850
#, c-format
msgid ""
"  --vle-reloc-fixup           Correct old object file 16A/16D relocation\n"
msgstr ""

#: eelf32mcore.c:299
#, c-format
msgid ""
"  --base_file <basefile>      Generate a base file for relocatable DLLs\n"
msgstr ""

#: eelf32metag.c:708 eelf64lppc.c:1334 eelf64lppc_fbsd.c:1334 eelf64ppc.c:1334
#: eelf64ppc_fbsd.c:1334 ehppaelf.c:572 ehppalinux.c:750 ehppanbsd.c:750
#: ehppaobsd.c:750
#, c-format
msgid ""
"  --stub-group-size=N         Maximum size of a group of input sections "
"that\n"
"                                can be handled by one stub section.  A "
"negative\n"
"                                value locates all stubs before their "
"branches\n"
"                                (with a group size of -N), while a positive\n"
"                                value allows two groups of input sections, "
"one\n"
"                                before, and one after each stub section.\n"
"                                Values of +/-1 indicate the linker should\n"
"                                choose suitable defaults.\n"
msgstr ""

#: eelf32rx.c:331
#, c-format
msgid ""
"  --no-flag-mismatch-warnings Don't warn about objects with incompatible\n"
"                                endian or dsp settings\n"
msgstr ""

#: eelf32rx.c:333
#, c-format
msgid ""
"  --flag-mismatch-warnings    Warn about objects with incompatible\n"
"                                endian, dsp or ABI settings\n"
msgstr ""

#: eelf32rx.c:335
#, c-format
msgid ""
"  --ignore-lma                Ignore segment LMAs [default]\n"
"                                (for Renesas Tools compatibility)\n"
msgstr ""

#: eelf32rx.c:337
#, c-format
msgid "  --no-ignore-lma             Don't ignore segment LMAs\n"
msgstr ""

#: eelf32xtensa.c:149
msgid "file already has property tables"
msgstr ""

#: eelf32xtensa.c:159
msgid "failed to read section contents"
msgstr ""

#: eelf32xtensa.c:171
msgid "could not create new section"
msgstr ""

#: eelf32xtensa.c:187
msgid "could not allocate section contents"
msgstr ""

#: eelf32xtensa.c:206
msgid "out of memory"
msgstr ""

#: eelf32xtensa.c:304
msgid ""
"%P: warning: failed to convert %s table in %pB (%s); subsequent disassembly "
"may be incomplete\n"
msgstr ""

#: eelf32xtensa.c:424
msgid "%F%P: %pB: cannot read contents of section %pA\n"
msgstr ""

#: eelf32xtensa.c:435
msgid "%P: %pB: warning: incompatible Xtensa configuration (%s)\n"
msgstr ""

#: eelf32xtensa.c:439
msgid "%P: %pB: warning: cannot parse .xtensa.info section\n"
msgstr ""

#: eelf32xtensa.c:465
msgid "%F%P: little endian output does not match Xtensa configuration\n"
msgstr ""

#: eelf32xtensa.c:471
msgid "%F%P: big endian output does not match Xtensa configuration\n"
msgstr ""

#: eelf32xtensa.c:490
msgid "%F%P: cross-endian linking for %pB not supported\n"
msgstr ""

#: eelf32xtensa.c:521
msgid "%F%P: failed to create .xtensa.info section\n"
msgstr ""

#: eelf32xtensa.c:1262
msgid "%F%P: Relaxation not supported with --enable-non-contiguous-regions.\n"
msgstr ""

#: eelf32xtensa.c:2387
#, c-format
msgid ""
"  --size-opt                  When relaxing longcalls, prefer size\n"
"                                optimization over branch target alignment\n"
msgstr ""

#: eelf32xtensa.c:2390
#, c-format
msgid ""
"  --abi-windowed              Choose windowed ABI for the output object\n"
msgstr ""

#: eelf32xtensa.c:2392
#, c-format
msgid "  --abi-call0                 Choose call0 ABI for the output object\n"
msgstr ""

#: eelf32z80.c:67 ez80.c:59
msgid "%F%P: %pB: Instruction sets of object files incompatible\n"
msgstr ""

#: eelf64_ia64.c:481 eelf64_ia64_fbsd.c:481
#, c-format
msgid ""
"  --itanium                   Generate code for Intel Itanium processor\n"
msgstr ""

#: eelf64_s390.c:63 eelf64lppc.c:129 eelf64lppc_fbsd.c:129 eelf64ppc.c:129
#: eelf64ppc_fbsd.c:129
msgid "%F%P: can not init BFD: %E\n"
msgstr ""

#: eelf64_s390.c:524
#, c-format
msgid ""
"  --s390-pgste                Tell the kernel to allocate 4k page tables\n"
msgstr ""

#: eelf64alpha.c:553 eelf64alpha_fbsd.c:553 eelf64alpha_nbsd.c:553
#, c-format
msgid ""
"  --taso                      Load executable in the lower 31-bit "
"addressable\n"
"                                virtual address range\n"
msgstr ""

#: eelf64alpha.c:556 eelf64alpha_fbsd.c:556 eelf64alpha_nbsd.c:556
#, c-format
msgid "  --secureplt                 Force PLT in text segment\n"
msgstr ""

#: eelf64alpha.c:558 eelf64alpha_fbsd.c:558 eelf64alpha_nbsd.c:558
#, c-format
msgid "  --no-secureplt              Force PLT in data segment\n"
msgstr ""

#: eelf64lppc.c:313 eelf64lppc.c:353 eelf64lppc_fbsd.c:313
#: eelf64lppc_fbsd.c:353 eelf64ppc.c:313 eelf64ppc.c:353 eelf64ppc_fbsd.c:313
#: eelf64ppc_fbsd.c:353
msgid "%X%P: can not edit %s: %E\n"
msgstr ""

#: eelf64lppc.c:516 eelf64lppc_fbsd.c:516 eelf64ppc.c:516 eelf64ppc_fbsd.c:516
msgid "%X%P: linker script separates .got and .toc\n"
msgstr ""

#: eelf64lppc.c:577 eelf64lppc_fbsd.c:577 eelf64ppc.c:577 eelf64ppc_fbsd.c:577
msgid "%P: .init/.fini fragments use differing TOC pointers\n"
msgstr ""

#: eelf64lppc.c:1226 eelf64lppc_fbsd.c:1226 eelf64ppc.c:1226
#: eelf64ppc_fbsd.c:1226
msgid "%F%P: invalid --power10-stubs argument `%s'\n"
msgstr ""

#: eelf64lppc.c:1344 eelf64ppc.c:1344
#, c-format
msgid ""
"  --plt-static-chain          PLT call stubs should load r11 (default)\n"
msgstr ""

#: eelf64lppc.c:1347 eelf64ppc.c:1347
#, c-format
msgid "  --no-plt-static-chain       PLT call stubs should not load r11\n"
msgstr ""

#: eelf64lppc.c:1350 eelf64lppc_fbsd.c:1350 eelf64ppc.c:1350
#: eelf64ppc_fbsd.c:1350
#, c-format
msgid "  --plt-thread-safe           PLT call stubs with load-load barrier\n"
msgstr ""

#: eelf64lppc.c:1353 eelf64lppc_fbsd.c:1353 eelf64ppc.c:1353
#: eelf64ppc_fbsd.c:1353
#, c-format
msgid "  --no-plt-thread-safe        PLT call stubs without barrier\n"
msgstr ""

#: eelf64lppc.c:1356 eelf64lppc_fbsd.c:1356 eelf64ppc.c:1356
#: eelf64ppc_fbsd.c:1356
#, c-format
msgid "  --plt-align [=<align>]      Align PLT call stubs to fit cache lines\n"
msgstr ""

#: eelf64lppc.c:1362 eelf64lppc_fbsd.c:1362 eelf64ppc.c:1362
#: eelf64ppc_fbsd.c:1362
#, c-format
msgid ""
"  --plt-localentry            Optimize calls to ELFv2 localentry:0 "
"functions\n"
msgstr ""

#: eelf64lppc.c:1365 eelf64lppc_fbsd.c:1365 eelf64ppc.c:1365
#: eelf64ppc_fbsd.c:1365
#, c-format
msgid "  --no-plt-localentry         Don't optimize ELFv2 calls\n"
msgstr ""

#: eelf64lppc.c:1368 eelf64lppc_fbsd.c:1368 eelf64ppc.c:1368
#: eelf64ppc_fbsd.c:1368
#, c-format
msgid ""
"  --power10-stubs [=auto]     Use Power10 PLT call stubs (default auto)\n"
msgstr ""

#: eelf64lppc.c:1371 eelf64lppc_fbsd.c:1371 eelf64ppc.c:1371
#: eelf64ppc_fbsd.c:1371
#, c-format
msgid ""
"  --no-pcrel-optimize         Don't perform R_PPC64_PCREL_OPT optimization\n"
msgstr ""

#: eelf64lppc.c:1374 eelf64lppc_fbsd.c:1374 eelf64ppc.c:1374
#: eelf64ppc_fbsd.c:1374
#, c-format
msgid "  --no-power10-stubs          Don't use Power10 PLT call stubs\n"
msgstr ""

#: eelf64lppc.c:1383 eelf64lppc_fbsd.c:1383 eelf64ppc.c:1383
#: eelf64ppc_fbsd.c:1383
#, c-format
msgid ""
"  --dotsyms                   For every version pattern \"foo\" in a "
"version\n"
"                                script, add \".foo\" so that function code\n"
"                                symbols are treated the same as function\n"
"                                descriptor symbols.  Defaults to on.\n"
msgstr ""

#: eelf64lppc.c:1389 eelf64lppc_fbsd.c:1389 eelf64ppc.c:1389
#: eelf64ppc_fbsd.c:1389
#, c-format
msgid ""
"  --no-dotsyms                Don't do anything special in version scripts\n"
msgstr ""

#: eelf64lppc.c:1392 eelf64lppc_fbsd.c:1392 eelf64ppc.c:1392
#: eelf64ppc_fbsd.c:1392
#, c-format
msgid ""
"  --save-restore-funcs        Provide register save and restore routines "
"used\n"
"                                by gcc -Os code.  Defaults to on for normal\n"
"                                final link, off for ld -r.\n"
msgstr ""

#: eelf64lppc.c:1397 eelf64lppc_fbsd.c:1397 eelf64ppc.c:1397
#: eelf64ppc_fbsd.c:1397
#, c-format
msgid "  --no-save-restore-funcs     Don't provide these routines\n"
msgstr ""

#: eelf64lppc.c:1403 eelf64lppc_fbsd.c:1403 eelf64ppc.c:1403
#: eelf64ppc_fbsd.c:1403
#, c-format
msgid ""
"  --tls-get-addr-optimize     Force use of special __tls_get_addr call\n"
msgstr ""

#: eelf64lppc.c:1409 eelf64lppc_fbsd.c:1409 eelf64ppc.c:1409
#: eelf64ppc_fbsd.c:1409
#, c-format
msgid "  --tls-get-addr-regsave      Force register save __tls_get_addr stub\n"
msgstr ""

#: eelf64lppc.c:1412 eelf64lppc_fbsd.c:1412 eelf64ppc.c:1412
#: eelf64ppc_fbsd.c:1412
#, c-format
msgid ""
"  --no-tls-get-addr-regsave   Don't use register save __tls_get_addr stub\n"
msgstr ""

#: eelf64lppc.c:1415 eelf64lppc_fbsd.c:1415 eelf64ppc.c:1415
#: eelf64ppc_fbsd.c:1415
#, c-format
msgid "  --no-opd-optimize           Don't optimize the OPD section\n"
msgstr ""

#: eelf64lppc.c:1421 eelf64lppc_fbsd.c:1421 eelf64ppc.c:1421
#: eelf64ppc_fbsd.c:1421
#, c-format
msgid "  --no-toc-optimize           Don't optimize the TOC section\n"
msgstr ""

#: eelf64lppc.c:1424 eelf64lppc_fbsd.c:1424 eelf64ppc.c:1424
#: eelf64ppc_fbsd.c:1424
#, c-format
msgid ""
"  --no-multi-toc              Disallow automatic multiple toc sections\n"
msgstr ""

#: eelf64lppc.c:1427 eelf64lppc_fbsd.c:1427 eelf64ppc.c:1427
#: eelf64ppc_fbsd.c:1427
#, c-format
msgid "  --no-toc-sort               Don't sort TOC and GOT sections\n"
msgstr ""

#: eelf64lppc.c:1430 eelf64lppc_fbsd.c:1430 eelf64ppc.c:1430
#: eelf64ppc_fbsd.c:1430
#, c-format
msgid ""
"  --non-overlapping-opd       Canonicalize .opd, so that there are no\n"
"                                overlapping .opd entries\n"
msgstr ""

#: eelf64lppc_fbsd.c:1344 eelf64ppc_fbsd.c:1344
#, c-format
msgid "  --plt-static-chain          PLT call stubs should load r111\n"
msgstr ""

#: eelf64lppc_fbsd.c:1347 eelf64ppc_fbsd.c:1347
#, c-format
msgid ""
"  --no-plt-static-chain       PLT call stubs should not load r11 (default)\n"
msgstr ""

#: eelf64mmix.c:81 emmo.c:84
msgid "%X%P: internal problems setting up section %s"
msgstr ""

#: eelf64mmix.c:125 emmo.c:128
msgid "%X%P: too many global registers: %u, max 223\n"
msgstr ""

#. This is a fatal error; make einfo call not return.
#: eelf64mmix.c:143 emmo.c:146
msgid "%F%P: can't finalize linker-allocated global registers\n"
msgstr ""

#: eelf_x86_64.c:5515 eelf_x86_64_cloudabi.c:612 eelf_x86_64_fbsd.c:612
#: eelf_x86_64_sol2.c:743
#, c-format
msgid ""
"  -z bndplt                   Always generate BND prefix in PLT entries\n"
msgstr ""

#: ehppaelf.c:324 ehppalinux.c:324 ehppanbsd.c:324 ehppaobsd.c:324
msgid "%X%P: can not set gp\n"
msgstr ""

#: ehppaelf.c:568 ehppalinux.c:746 ehppanbsd.c:746 ehppaobsd.c:746
#, c-format
msgid ""
"  --multi-subspace            Generate import and export stubs to support\n"
"                                multiple sub-space shared libraries\n"
msgstr ""

#: ei386beos.c:376
msgid "%F%P: PE operations on non PE file\n"
msgstr ""

#: ei386beos.c:426 ei386beos.c:431
msgid "%F%P: %pB: can't read contents of section .idata: %E\n"
msgstr ""

#: ei386beos.c:663
msgid "%F%P: section %s has '$' as first character\n"
msgstr ""

#: ei386beos.c:693
msgid "%F%P: *(%s$) missing from linker script\n"
msgstr ""

#: ei386pep.c:399
#, c-format
msgid ""
"  --[no-]insert-timestamp            Use a real timestamp rather than zero "
"(default)\n"
msgstr ""

#: ei386pep.c:410
#, c-format
msgid ""
"                                     export, place into import library "
"instead\n"
msgstr ""

#: ei386pep.c:415
#, c-format
msgid ""
"  --compat-implib                    Create backward compatible import "
"libs;\n"
"                                       create __imp_<SYMBOL> as well\n"
msgstr ""

#: ei386pep.c:416
#, c-format
msgid ""
"  --enable-auto-image-base           Automatically choose image base for "
"DLLs\n"
"                                       unless user specifies one\n"
msgstr ""

#: ei386pep.c:417
#, c-format
msgid ""
"  --disable-auto-image-base          Do not auto-choose image base "
"(default)\n"
msgstr ""

#: ei386pep.c:421
#, c-format
msgid ""
"  --enable-runtime-pseudo-reloc      Work around auto-import limitations by\n"
"                                       adding pseudo-relocations resolved "
"at\n"
"                                       runtime\n"
msgstr ""

#: ei386pep.c:422
#, c-format
msgid ""
"  --disable-runtime-pseudo-reloc     Do not add runtime pseudo-relocations "
"for\n"
"                                       auto-imported DATA\n"
msgstr ""

#: ei386pep.c:423
#, c-format
msgid ""
"  --enable-extra-pep-debug            Enable verbose debug output when "
"building\n"
"                                       or linking to DLLs (esp. auto-"
"import)\n"
msgstr ""

#: ei386pep.c:426
#, c-format
msgid ""
"  --[disable-]high-entropy-va        Image is compatible with 64-bit address "
"space\n"
"                                       layout randomization (ASLR)\n"
msgstr ""

#: ei386pep.c:433
#, c-format
msgid ""
"  --[disable-]no-seh                 Image does not use SEH; no SE handler "
"may\n"
"                                       be called in this image\n"
msgstr ""

#: ei386pep.c:965
msgid ""
"%P: warning: --export-dynamic is not supported for PE+ targets, did you mean "
"--export-all-symbols?\n"
msgstr ""

#: ei386pep.c:1033 ei386pep.c:1060
#, c-format
msgid "warning: resolving %s by linking to %s\n"
msgstr ""

#: em68hc11elf.c:141 em68hc11elfb.c:141 em68hc12elf.c:141 em68hc12elfb.c:141
msgid ""
"%P: warning: the size of the 'window' memory region is not a power of 2; its "
"size %d is truncated to %d\n"
msgstr ""

#: em68hc11elf.c:156 em68hc11elfb.c:156 em68hc12elf.c:156 em68hc12elfb.c:156
msgid "%X%P: changing output format whilst linking is not supported\n"
msgstr ""

#: em68hc11elf.c:565 em68hc11elfb.c:565 em68hc12elf.c:565 em68hc12elfb.c:565
#, c-format
msgid ""
"  --no-trampoline             Do not generate the far trampolines used to "
"call\n"
"                                a far function using jsr or bsr\n"
msgstr ""

#: em68hc11elf.c:568 em68hc11elfb.c:568 em68hc12elf.c:568 em68hc12elfb.c:568
#, c-format
msgid ""
"  --bank-window NAME          Specify the name of the memory region "
"describing\n"
"                                the layout of the memory bank window\n"
msgstr ""

#: em68kelf.c:89 em68kelfnbsd.c:89
msgid "%F%P: %pB: all input objects must be ELF for --embedded-relocs\n"
msgstr ""

#: em68kelf.c:607 em68kelfnbsd.c:607
msgid "%P: unrecognized --got argument '%s'\n"
msgstr ""

#: em68kelf.c:620 em68kelfnbsd.c:620
#, c-format
msgid "  --got=<type>                Specify GOT handling scheme\n"
msgstr ""

#: emmo.c:333
msgid "%X%P: internal problems scanning %pB after opening it"
msgstr ""

#: emsp430X.c:159 emsp430elf.c:159
msgid "%P: error: unhandled data_statement size\n"
msgstr ""

#: emsp430X.c:299 emsp430elf.c:299
msgid "%P: error: no section named %s or %s in linker script\n"
msgstr ""

#: emsp430X.c:308 emsp430elf.c:308
msgid "%P: error: no section named %s in linker script\n"
msgstr ""

#: emsp430X.c:458 emsp430elf.c:458
#, c-format
msgid ""
"  --code-region={either,lower,upper,none}\n"
"        Transform .text* sections to {either,lower,upper,none}.text* "
"sections\n"
msgstr ""

#: emsp430X.c:459 emsp430elf.c:459
#, c-format
msgid ""
"  --data-region={either,lower,upper,none}\n"
"        Transform .data*, .rodata* and .bss* sections to\n"
"        {either,lower,upper,none}.{bss,data,rodata}* sections\n"
msgstr ""

#: emsp430X.c:460 emsp430elf.c:460
#, c-format
msgid ""
"  --disable-sec-transformation\n"
"        Disable transformation of .{text,data,bss,rodata}* sections to\n"
"        add the {either,lower,upper,none} prefixes\n"
msgstr ""

#: emsp430X.c:479 emsp430elf.c:479
msgid "%P: --code-region requires an argument: {upper,lower,either,none}\n"
msgstr ""

#: emsp430X.c:485 emsp430elf.c:485
msgid "%P: error: unrecognized argument to --code-region= option: \"%s\"\n"
msgstr ""

#: emsp430X.c:502 emsp430elf.c:502
msgid "%P: --data-region requires an argument: {upper,lower,either,none}\n"
msgstr ""

#: emsp430X.c:508 emsp430elf.c:508
msgid "%P: error: unrecognized argument to --data-region= option: \"%s\"\n"
msgstr ""

#. Incompatible objects.
#: ends32belf.c:126 ends32belf16m.c:126 ends32belf_linux.c:126 ends32elf.c:126
#: ends32elf16m.c:126 ends32elf_linux.c:126
msgid "%F%P: %pB: ABI version of object files mismatched\n"
msgstr ""

#: ends32belf.c:399 ends32belf16m.c:399 ends32belf_linux.c:528 ends32elf.c:399
#: ends32elf16m.c:399 ends32elf_linux.c:528
msgid "%P: --mbaseline is not used anymore\n"
msgstr ""

#: ends32belf.c:410 ends32belf16m.c:410 ends32belf_linux.c:539 ends32elf.c:410
#: ends32elf16m.c:410 ends32elf_linux.c:539
msgid "%P: --relax-[no-]reduce-fp-updat is not used anymore\n"
msgstr ""

#: ends32belf.c:414 ends32belf16m.c:414 ends32belf_linux.c:543 ends32elf.c:414
#: ends32elf16m.c:414 ends32elf_linux.c:543
msgid "%P: missing file for --mexport-symbols\n"
msgstr ""

#: ends32belf.c:427 ends32belf.c:436 ends32belf16m.c:427 ends32belf16m.c:436
#: ends32belf_linux.c:556 ends32belf_linux.c:565 ends32elf.c:427
#: ends32elf.c:436 ends32elf16m.c:427 ends32elf16m.c:436 ends32elf_linux.c:556
#: ends32elf_linux.c:565
msgid "%P: valid arguments to --mhyper-relax=(low|medium|high)\n"
msgstr ""

#: ends32belf.c:456 ends32belf16m.c:456 ends32belf_linux.c:585 ends32elf.c:456
#: ends32elf16m.c:456 ends32elf_linux.c:585
#, c-format
msgid "  --m[no-]fp-as-gp            Disable/enable fp-as-gp relaxation\n"
msgstr ""

#: ends32belf.c:458 ends32belf16m.c:458 ends32belf_linux.c:587 ends32elf.c:458
#: ends32elf16m.c:458 ends32elf_linux.c:587
#, c-format
msgid "  --mexport-symbols=FILE      Exporting symbols in linker script\n"
msgstr ""

#: ends32belf.c:460 ends32belf16m.c:460 ends32belf_linux.c:589 ends32elf.c:460
#: ends32elf16m.c:460 ends32elf_linux.c:589
#, c-format
msgid ""
"  --mhyper-relax=level        Adjust relax level (low|medium|high). default: "
"medium\n"
msgstr ""

#: ends32belf.c:462 ends32belf16m.c:462 ends32belf_linux.c:591 ends32elf.c:462
#: ends32elf16m.c:462 ends32elf_linux.c:591
#, c-format
msgid "  --m[no-]tlsdesc-trampoline  Disable/enable TLS DESC trampoline\n"
msgstr ""

#: epdp11.c:82
#, c-format
msgid ""
"  -N, --omagic   Do not make text readonly, do not page align data "
"(default)\n"
msgstr ""

#: epdp11.c:83
#, c-format
msgid "  -n, --nmagic   Make text readonly, align data to next page\n"
msgstr ""

#: epdp11.c:84
#, c-format
msgid ""
"  -z, --imagic   Make text readonly, separate instruction and data spaces\n"
msgstr ""

#: epdp11.c:85
#, c-format
msgid "  --no-omagic    Equivalent to --nmagic\n"
msgstr ""

#: etic3xcoff.c:69 etic3xcoff_onchip.c:69 etic4xcoff.c:69 etic54xcoff.c:69
#, c-format
msgid "  --format 0|1|2              Specify which COFF version to use\n"
msgstr ""

#: etic3xcoff.c:91 etic3xcoff_onchip.c:91 etic4xcoff.c:91 etic54xcoff.c:91
msgid "%F%P: invalid COFF format version %s\n"
msgstr ""
